#######################################################################
# TODO - Tasks that should be completed per release.
#
# Legend:
#      ! - Task is from bug
#      o - Task to complete
#      * - Task in progress
#      X - Task is complete
#      ? - Task to consider
# [number] - Bug Id
# (name) - Name of user whom updated task
#######################################################################

#######################################################################
# Helium 0.1

o CruiseControl
* Document currently undocumented Actions

#
# Behavior

? Add more Factory's in lieu of one HeliumFactory
o net: UrlDecodeAction
o ActionSetAction: What if Action already exists?
* Much duplication among tests
o ErrorAction
  o Attributes {ifVar, unlessVar, message, etc.}
  o Cancels any operation and throws ForcedException
  o Or, catches any exceptions from nested calls and either
    stops/ignores the error or triggers a call to another article
o Composite ArticleSource's
* Is there a way to incorporate NullObjects for:
  X ArticleSource
	X Push ArticleNotFoundException throwing into concrete
	  ArticleSources. Removes null check from ArticleBuilder
  o Argument
* Servlet for interfacing into Helium.
  X Make sure the Servlet Actions are loaded via an ActionSet and not
    built in at runtime
  X Parameter Action
  X Attribute Action
  X Cookie Action
  o Redirect Action
  o Session Action
  o Content-type Action
  X Request Action
  o Response Action
? Value scoping (Article, Request, Session, Global, etc.)
  o HeliumContext.getDataMap(scope); implement Maps using decorators
  o Implement AbstractHeliumContext to handle default behavior of
    getDataMap()
* Should Collection's, Map's, and Var's have their own Actions?
  ? Is this HeliumX
  o VarAction is typeless (any object); supertype of Collection and
    Map
  * CollectionAction provides operations on collections of objects
    (List, Set, array, etc.)
    - count, valueAt, valueOf (use with valueAt to assign a value),
      etc.
  o MapAction provides operations on Maps
    - count, key, keyVar (retrieve value using variable value as key),
      etc.
o Look into iterating over Maps. Treat element of Map differently in
  this case. Allow access to key and value using /MapAction/?
o Need more failure tests related to attributes of an action
  o Unknown attribute, duplicate attribute (if possible), too many
    attributes, etc.

? Content-type processing instruction or variable value
? Default variable values
? Display Exceptions inline (optional, via halt-on-error attribute)
? Bean action
? Look at Jakarta/Commons VFS for obtaining articles in different ways.

? XSD for article document
? Grammar Caching
? Entity Resolver
o Complete javadoc for entire API

X Var action
  X Allow a variable to be assigned the value of another variable
    (valueOf)
X Include action
X Action action
  X Allow action registrations for a single request
    - /Generate new Parser instance for each request; see ParserConfig/
X Article action
X When action
  X Equality
  X Existence
X Construct Action to create new Objects that can be reflected
X Reflect Action
X ArgumentFactory /HeliumFactory instead/
X Meaningful error when article not found
X Does ArticleBuilder need to be a Singleton?
X Move ArticleSource to HeliumContext
X Refactor Article to implement parse() method that accepts Context
  instead of calling ArticleParser
  - Factor out ActionObserver. Move stuff into HeliumContext
  - Factor out ArticleParser
X Factor out an AbstractHeliumContext
  - Point ServletHeliumContext at it
  - Make DefaultHeliumContext default visible
X Move default Action setting out of DefaultActionRegister
  - Moved to ActionRunner
X In order to use variable values within attribute values, tag
  replacement needs to be used. To keep with convention, I will look
  for the sequence "${" followed by "}". All data between those
  characters will be treated as a variable name (similar to Ant).
  X Parse attribute values for this tag sequence
  X Parse normal text
  X Unimplement variable value retrieval from VarAction. Only let it
    set values
X Pass around PrintWriter instead of just Writer
X Does IOException need to be passed around?
  - Answer: No; thanks to PrintWriter
X Make all creations of HeliumContext use HeliumFactory.
X Use #{} instead of ${} in favor of Ruby style var replacement
X Standardize on argument names amongst core Actions
  - valueOf and fromVar are often confused
X Iterate action
  X Look into iterating over arrays
X Action library/set (XML namespaces)
  X ActionSet Action (actionset). Expect a prefix and a path to a
    Properties file (classpath and/or filesystem)
  X Format of file should be:
    actionName=package.of.Action
X Modify List Action to move /value/ argument lower in precedence
X Modify ServletHeliumContext to decorate HeliumContext

X Break out Interfaces for an actual API
  X Define new modules or source folders for the 1) API,
    2) implementation, and 3) extensions

X Command line runner
X Command line interface for parsing Articles
  X Command line arguments get added to data Map
  X Could also load Map from property file(s)
X Heliumx.Servlet: Throw a 404 error upon receipt of
  ArticleNotFoundException

X Release an alpha version

#
# Example

o Show how to use with Struts
o How is He different than: Jelly, Velocity, Freemarker, JSP, etc.?
X Create new Heliumx ActionSet, net
  X Create encode Action to encode URLs

#
# Performance

o ArticleBuilder: Create DocumentBuilderFactory and possible
  DocumentBuilder just once
o Helium, HeliumServlet: Initialize base ActionRegister and
  ArticleSource just once
o ActionRegister: Cache generated Action instances
o DefaultArticle: Cache generated Arguments. Improve on Argument
  retrieval and iteration
o TagUtil: Can Tag replacement be improved?
