<article>
  <include article="html.he">
    <var name="html.title" value="Core: Iterate"/>
    <var name="html.body">
      <div id="info">
        <p>Provides a mechanism for looping (iterating) over a list/set of
        organized items. The Iterate action can operate on any variable,
        but is most useful when the variable is of some list type. In
        Java, these would be instances of <i>java.util.Collection</i>,
        <i>java.util.Iterator</i>, or one-dimensional arrays; however,
        support for <i>java.util.Map</i> is forthcoming.</p>

        <p>The Iterate action can also work with standard and null variable
        instances, but will treat these somewhat differently. Standard
        is hereby defined as a variable that does not support
        <i>Collection</i>, <i>Iterator</i>, <i>Map</i>, or any other array type
        functionality; these variables are typically strings where Helium
        is concerned, but can be any other instance of <i>java.lang.Object</i>.</p>
      
        <p>For standard variables that are not null, Iterate will occur only
        once; meaning, any variable can be iterated over. For null
        variables (those which return null when retrieved), nothing will
        be iterated over. The result will be as if <i>iterate</i> were never
        called. String variables that contain a blank value are not
        considered to be null and will be iterated over.</p>
      </div>

      <!-- Example 1 -->
      <h3>Example 1: Iterate over NULL Var</h3>
      <include article="example-output.he">
        <var name="example.index" value="1"/>
        <var name="example.message">NULL Iteration</var>
        <var name="example.text">
<![CDATA[&lt;article&gt;
  &lt;iterate var=&quot;varDoesNotExist&quot; itemVar=&quot;tmpVar&quot;&gt;
    will not be parsed
  &lt;/iterate&gt;
&lt;/article&gt;]]></var>
        <var name="example.output" value=""/>
      </include>

      <!-- Example 2 -->
      <h3>Example 2: Standard variable iteration</h3>
      <include article="example-output.he">
        <var name="example.index" value="2"/>
        <var name="example.message">Single-value array</var>
        <var name="example.text">
<![CDATA[&lt;article&gt;
  &lt;var name=&quot;myVar&quot; value=&quot;test value&quot;/&gt;
  &lt;iterate var=&quot;myVar&quot; itemVar=&quot;tmpVar&quot;&gt;
    temporary value = [#{tmpVar}]
  &lt;/iterate&gt;
&lt;/article&gt;]]></var>
        <var name="example.output">temporary value = [test value]</var>
      </include>

      <!-- Example 3 -->
      <h3>Example 3: Collection variable iteration</h3>

      <p>For the purposes of this example, myVar will be a List of
      three values {"first value", "second value", "third value"}.</p>

      <include article="example-output.he">
        <var name="example.index" value="3"/>
        <var name="example.message">Multi-value array</var>
        <var name="example.text">
<![CDATA[&lt;article&gt;
  &lt;list name=&quot;myVar&quot; value=&quot;first value&quot;/&gt;
  &lt;list name=&quot;myVar&quot; value=&quot;second value&quot;/&gt;
  &lt;list name=&quot;myVar&quot; value=&quot;third value&quot;/&gt;
  &lt;iterate var=&quot;myVar&quot; itemVar=&quot;tmpVar&quot;&gt;
    temporary value = [#{tmpVar}]
  &lt;/iterate&gt;
&lt;/article&gt;]]></var>
        <var name="example.output">temporary value = [first value]
temporary value = [second value]
temporary value = [third value]</var>
      </include>

    </var>
  </include>
</article>
