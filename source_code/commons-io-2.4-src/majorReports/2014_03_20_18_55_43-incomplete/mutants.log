1:LVR:POS:0:org.apache.commons.io.ByteOrderMark:36:239 |==> 0
2:LVR:POS:NEG:org.apache.commons.io.ByteOrderMark:36:239 |==> -239
3:LVR:POS:0:org.apache.commons.io.ByteOrderMark:36:187 |==> 0
4:LVR:POS:NEG:org.apache.commons.io.ByteOrderMark:36:187 |==> -187
5:LVR:POS:0:org.apache.commons.io.ByteOrderMark:36:191 |==> 0
6:LVR:POS:NEG:org.apache.commons.io.ByteOrderMark:36:191 |==> -191
7:LVR:POS:0:org.apache.commons.io.ByteOrderMark:39:254 |==> 0
8:LVR:POS:NEG:org.apache.commons.io.ByteOrderMark:39:254 |==> -254
9:LVR:POS:0:org.apache.commons.io.ByteOrderMark:39:255 |==> 0
10:LVR:POS:NEG:org.apache.commons.io.ByteOrderMark:39:255 |==> -255
11:LVR:POS:0:org.apache.commons.io.ByteOrderMark:42:255 |==> 0
12:LVR:POS:NEG:org.apache.commons.io.ByteOrderMark:42:255 |==> -255
13:LVR:POS:0:org.apache.commons.io.ByteOrderMark:42:254 |==> 0
14:LVR:POS:NEG:org.apache.commons.io.ByteOrderMark:42:254 |==> -254
15:LVR:0:POS:org.apache.commons.io.ByteOrderMark:48:0 |==> 1
16:LVR:0:NEG:org.apache.commons.io.ByteOrderMark:48:0 |==> -1
17:LVR:0:POS:org.apache.commons.io.ByteOrderMark:48:0 |==> 1
18:LVR:0:NEG:org.apache.commons.io.ByteOrderMark:48:0 |==> -1
19:LVR:POS:0:org.apache.commons.io.ByteOrderMark:48:254 |==> 0
20:LVR:POS:NEG:org.apache.commons.io.ByteOrderMark:48:254 |==> -254
21:LVR:POS:0:org.apache.commons.io.ByteOrderMark:48:255 |==> 0
22:LVR:POS:NEG:org.apache.commons.io.ByteOrderMark:48:255 |==> -255
23:LVR:POS:0:org.apache.commons.io.ByteOrderMark:54:255 |==> 0
24:LVR:POS:NEG:org.apache.commons.io.ByteOrderMark:54:255 |==> -255
25:LVR:POS:0:org.apache.commons.io.ByteOrderMark:54:254 |==> 0
26:LVR:POS:NEG:org.apache.commons.io.ByteOrderMark:54:254 |==> -254
27:LVR:0:POS:org.apache.commons.io.ByteOrderMark:54:0 |==> 1
28:LVR:0:NEG:org.apache.commons.io.ByteOrderMark:54:0 |==> -1
29:LVR:0:POS:org.apache.commons.io.ByteOrderMark:54:0 |==> 1
30:LVR:0:NEG:org.apache.commons.io.ByteOrderMark:54:0 |==> -1
31:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.io.ByteOrderMark@<init>:70:charsetName == null |==> false
32:LVR:0:POS:org.apache.commons.io.ByteOrderMark@<init>:70:0 |==> 1
33:LVR:0:NEG:org.apache.commons.io.ByteOrderMark@<init>:70:0 |==> -1
34:ROR:==(int,int):<=(int,int):org.apache.commons.io.ByteOrderMark@<init>:70:charsetName.length() == 0 |==> charsetName.length() <= 0
35:ROR:==(int,int):>=(int,int):org.apache.commons.io.ByteOrderMark@<init>:70:charsetName.length() == 0 |==> charsetName.length() >= 0
36:ROR:==(int,int):FALSE(int,int):org.apache.commons.io.ByteOrderMark@<init>:70:charsetName.length() == 0 |==> false
37:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.io.ByteOrderMark@<init>:70:charsetName == null || charsetName.length() == 0 |==> charsetName == null != (charsetName.length() == 0)
38:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.io.ByteOrderMark@<init>:70:charsetName == null || charsetName.length() == 0 |==> charsetName == null
39:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.io.ByteOrderMark@<init>:70:charsetName == null || charsetName.length() == 0 |==> charsetName.length() == 0
40:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.io.ByteOrderMark@<init>:70:charsetName == null || charsetName.length() == 0 |==> true
41:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.io.ByteOrderMark@<init>:73:bytes == null |==> false
42:LVR:0:POS:org.apache.commons.io.ByteOrderMark@<init>:73:0 |==> 1
43:LVR:0:NEG:org.apache.commons.io.ByteOrderMark@<init>:73:0 |==> -1
44:ROR:==(int,int):<=(int,int):org.apache.commons.io.ByteOrderMark@<init>:73:bytes.length == 0 |==> bytes.length <= 0
45:ROR:==(int,int):>=(int,int):org.apache.commons.io.ByteOrderMark@<init>:73:bytes.length == 0 |==> bytes.length >= 0
46:ROR:==(int,int):FALSE(int,int):org.apache.commons.io.ByteOrderMark@<init>:73:bytes.length == 0 |==> false
47:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.io.ByteOrderMark@<init>:73:bytes == null || bytes.length == 0 |==> bytes == null != (bytes.length == 0)
48:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.io.ByteOrderMark@<init>:73:bytes == null || bytes.length == 0 |==> bytes == null
49:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.io.ByteOrderMark@<init>:73:bytes == null || bytes.length == 0 |==> bytes.length == 0
50:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.io.ByteOrderMark@<init>:73:bytes == null || bytes.length == 0 |==> true
51:LVR:0:POS:org.apache.commons.io.ByteOrderMark@<init>:78:0 |==> 1
52:LVR:0:NEG:org.apache.commons.io.ByteOrderMark@<init>:78:0 |==> -1
53:LVR:0:POS:org.apache.commons.io.ByteOrderMark@<init>:78:0 |==> 1
54:LVR:0:NEG:org.apache.commons.io.ByteOrderMark@<init>:78:0 |==> -1
55:STD:<CALL>:<NO-OP>:org.apache.commons.io.ByteOrderMark@<init>:78:System.arraycopy(bytes, 0, this.bytes, 0, bytes.length) |==> <NO-OP>
56:LVR:0:POS:org.apache.commons.io.ByteOrderMark@getBytes:116:0 |==> 1
57:LVR:0:NEG:org.apache.commons.io.ByteOrderMark@getBytes:116:0 |==> -1
58:ROR:<(int,int):!=(int,int):org.apache.commons.io.ByteOrderMark@getBytes:116:i < bytes.length |==> i != bytes.length
59:ROR:<(int,int):<=(int,int):org.apache.commons.io.ByteOrderMark@getBytes:116:i < bytes.length |==> i <= bytes.length
60:ROR:<(int,int):FALSE(int,int):org.apache.commons.io.ByteOrderMark@getBytes:116:i < bytes.length |==> false
61:LVR:FALSE:TRUE:org.apache.commons.io.ByteOrderMark@equals:132:false |==> true
62:LVR:FALSE:TRUE:org.apache.commons.io.ByteOrderMark@equals:136:false |==> true
63:ROR:!=(int,int):<(int,int):org.apache.commons.io.ByteOrderMark@equals:135:bytes.length != bom.length() |==> bytes.length < bom.length()
64:ROR:!=(int,int):>(int,int):org.apache.commons.io.ByteOrderMark@equals:135:bytes.length != bom.length() |==> bytes.length > bom.length()
65:ROR:!=(int,int):TRUE(int,int):org.apache.commons.io.ByteOrderMark@equals:135:bytes.length != bom.length() |==> true
66:LVR:0:POS:org.apache.commons.io.ByteOrderMark@equals:138:0 |==> 1
67:LVR:0:NEG:org.apache.commons.io.ByteOrderMark@equals:138:0 |==> -1
68:ROR:<(int,int):!=(int,int):org.apache.commons.io.ByteOrderMark@equals:138:i < bytes.length |==> i != bytes.length
69:ROR:<(int,int):<=(int,int):org.apache.commons.io.ByteOrderMark@equals:138:i < bytes.length |==> i <= bytes.length
70:ROR:<(int,int):FALSE(int,int):org.apache.commons.io.ByteOrderMark@equals:138:i < bytes.length |==> false
71:LVR:FALSE:TRUE:org.apache.commons.io.ByteOrderMark@equals:140:false |==> true
72:ROR:!=(int,int):<(int,int):org.apache.commons.io.ByteOrderMark@equals:139:bytes[i] != bom.get(i) |==> bytes[i] < bom.get(i)
73:ROR:!=(int,int):>(int,int):org.apache.commons.io.ByteOrderMark@equals:139:bytes[i] != bom.get(i) |==> bytes[i] > bom.get(i)
74:ROR:!=(int,int):TRUE(int,int):org.apache.commons.io.ByteOrderMark@equals:139:bytes[i] != bom.get(i) |==> true
75:LVR:TRUE:FALSE:org.apache.commons.io.ByteOrderMark@equals:143:true |==> false
76:STD:<ASSIGN>:<NO-OP>:org.apache.commons.io.ByteOrderMark@hashCode:156:hashCode += b |==> <NO-OP>
77:STD:<CALL>:<NO-OP>:org.apache.commons.io.ByteOrderMark@toString:169:builder.append(getClass().getSimpleName()) |==> <NO-OP>
78:STD:<CALL>:<NO-OP>:org.apache.commons.io.ByteOrderMark@toString:170:builder.append('[') |==> <NO-OP>
79:STD:<CALL>:<NO-OP>:org.apache.commons.io.ByteOrderMark@toString:171:builder.append(charsetName) |==> <NO-OP>
80:STD:<CALL>:<NO-OP>:org.apache.commons.io.ByteOrderMark@toString:172:builder.append(": ") |==> <NO-OP>
81:LVR:0:POS:org.apache.commons.io.ByteOrderMark@toString:173:0 |==> 1
82:LVR:0:NEG:org.apache.commons.io.ByteOrderMark@toString:173:0 |==> -1
83:ROR:<(int,int):!=(int,int):org.apache.commons.io.ByteOrderMark@toString:173:i < bytes.length |==> i != bytes.length
84:ROR:<(int,int):<=(int,int):org.apache.commons.io.ByteOrderMark@toString:173:i < bytes.length |==> i <= bytes.length
85:ROR:<(int,int):FALSE(int,int):org.apache.commons.io.ByteOrderMark@toString:173:i < bytes.length |==> false
86:STD:<CALL>:<NO-OP>:org.apache.commons.io.ByteOrderMark@toString:175:builder.append(",") |==> <NO-OP>
87:LVR:0:POS:org.apache.commons.io.ByteOrderMark@toString:174:0 |==> 1
88:LVR:0:NEG:org.apache.commons.io.ByteOrderMark@toString:174:0 |==> -1
89:ROR:>(int,int):!=(int,int):org.apache.commons.io.ByteOrderMark@toString:174:i > 0 |==> i != 0
90:ROR:>(int,int):>=(int,int):org.apache.commons.io.ByteOrderMark@toString:174:i > 0 |==> i >= 0
91:ROR:>(int,int):FALSE(int,int):org.apache.commons.io.ByteOrderMark@toString:174:i > 0 |==> false
92:STD:<CALL>:<NO-OP>:org.apache.commons.io.ByteOrderMark@toString:177:builder.append("0x") |==> <NO-OP>
93:LVR:POS:0:org.apache.commons.io.ByteOrderMark@toString:178:255 |==> 0
94:LVR:POS:NEG:org.apache.commons.io.ByteOrderMark@toString:178:255 |==> -255
95:LOR:&(int,int):^(int,int):org.apache.commons.io.ByteOrderMark@toString:178:255 & bytes[i] |==> 255 ^ bytes[i]
96:LOR:&(int,int):|(int,int):org.apache.commons.io.ByteOrderMark@toString:178:255 & bytes[i] |==> 255 | bytes[i]
97:STD:<CALL>:<NO-OP>:org.apache.commons.io.ByteOrderMark@toString:178:builder.append(Integer.toHexString(255 & bytes[i]).toUpperCase()) |==> <NO-OP>
98:STD:<CALL>:<NO-OP>:org.apache.commons.io.ByteOrderMark@toString:180:builder.append(']') |==> <NO-OP>
99:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.io.Charsets@toCharset:67:charset == null |==> false
100:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.io.Charsets@toCharset:80:charset == null |==> false
101:STD:<CALL>:<NO-OP>:org.apache.commons.io.CopyUtils@copy:136:output.write(input) |==> <NO-OP>
102:STD:<CALL>:<NO-OP>:org.apache.commons.io.CopyUtils@copy:154:copy(in, output) |==> <NO-OP>
103:STD:<CALL>:<NO-OP>:org.apache.commons.io.CopyUtils@copy:174:copy(in, output, encoding) |==> <NO-OP>
104:LVR:0:POS:org.apache.commons.io.CopyUtils@copy:195:0 |==> 1
105:LVR:0:NEG:org.apache.commons.io.CopyUtils@copy:195:0 |==> -1
106:LVR:0:POS:org.apache.commons.io.CopyUtils@copy:196:0 |==> 1
107:LVR:0:NEG:org.apache.commons.io.CopyUtils@copy:196:0 |==> -1
108:LVR:NEG:0:org.apache.commons.io.CopyUtils@copy:197:-1 |==> 0
109:LVR:NEG:POS:org.apache.commons.io.CopyUtils@copy:197:-1 |==> 1
110:ROR:!=(int,int):<(int,int):org.apache.commons.io.CopyUtils@copy:197:-1 != (n = input.read(buffer)) |==> -1 < (n = input.read(buffer))
111:ROR:!=(int,int):>(int,int):org.apache.commons.io.CopyUtils@copy:197:-1 != (n = input.read(buffer)) |==> -1 > (n = input.read(buffer))
112:ROR:!=(int,int):TRUE(int,int):org.apache.commons.io.CopyUtils@copy:197:-1 != (n = input.read(buffer)) |==> true
113:LVR:0:POS:org.apache.commons.io.CopyUtils@copy:198:0 |==> 1
114:LVR:0:NEG:org.apache.commons.io.CopyUtils@copy:198:0 |==> -1
115:STD:<CALL>:<NO-OP>:org.apache.commons.io.CopyUtils@copy:198:output.write(buffer, 0, n) |==> <NO-OP>
116:STD:<ASSIGN>:<NO-OP>:org.apache.commons.io.CopyUtils@copy:199:count += n |==> <NO-OP>
117:LVR:0:POS:org.apache.commons.io.CopyUtils@copy:220:0 |==> 1
118:LVR:0:NEG:org.apache.commons.io.CopyUtils@copy:220:0 |==> -1
119:LVR:0:POS:org.apache.commons.io.CopyUtils@copy:221:0 |==> 1
120:LVR:0:NEG:org.apache.commons.io.CopyUtils@copy:221:0 |==> -1
121:LVR:NEG:0:org.apache.commons.io.CopyUtils@copy:222:-1 |==> 0
122:LVR:NEG:POS:org.apache.commons.io.CopyUtils@copy:222:-1 |==> 1
123:ROR:!=(int,int):<(int,int):org.apache.commons.io.CopyUtils@copy:222:-1 != (n = input.read(buffer)) |==> -1 < (n = input.read(buffer))
124:ROR:!=(int,int):>(int,int):org.apache.commons.io.CopyUtils@copy:222:-1 != (n = input.read(buffer)) |==> -1 > (n = input.read(buffer))
125:ROR:!=(int,int):TRUE(int,int):org.apache.commons.io.CopyUtils@copy:222:-1 != (n = input.read(buffer)) |==> true
126:LVR:0:POS:org.apache.commons.io.CopyUtils@copy:223:0 |==> 1
127:LVR:0:NEG:org.apache.commons.io.CopyUtils@copy:223:0 |==> -1
128:STD:<CALL>:<NO-OP>:org.apache.commons.io.CopyUtils@copy:223:output.write(buffer, 0, n) |==> <NO-OP>
129:STD:<ASSIGN>:<NO-OP>:org.apache.commons.io.CopyUtils@copy:224:count += n |==> <NO-OP>
130:STD:<CALL>:<NO-OP>:org.apache.commons.io.CopyUtils@copy:246:copy(in, output) |==> <NO-OP>
131:STD:<CALL>:<NO-OP>:org.apache.commons.io.CopyUtils@copy:265:copy(in, output) |==> <NO-OP>
132:STD:<CALL>:<NO-OP>:org.apache.commons.io.CopyUtils@copy:285:copy(input, out) |==> <NO-OP>
133:STD:<CALL>:<NO-OP>:org.apache.commons.io.CopyUtils@copy:288:out.flush() |==> <NO-OP>
134:STD:<CALL>:<NO-OP>:org.apache.commons.io.CopyUtils@copy:309:copy(in, out) |==> <NO-OP>
135:STD:<CALL>:<NO-OP>:org.apache.commons.io.CopyUtils@copy:312:out.flush() |==> <NO-OP>
136:STD:<CALL>:<NO-OP>:org.apache.commons.io.CopyUtils@copy:327:output.write(input) |==> <NO-OP>
137:LVR:NEG:0:org.apache.commons.io.DirectoryWalker@<init>:266:-1 |==> 0
138:LVR:NEG:POS:org.apache.commons.io.DirectoryWalker@<init>:266:-1 |==> 1
139:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.apache.commons.io.DirectoryWalker@<init>:304:directoryFilter != null |==> true
140:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.apache.commons.io.DirectoryWalker@<init>:305:fileFilter != null |==> true
141:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.io.DirectoryWalker@<init>:301:directoryFilter == null |==> false
142:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.io.DirectoryWalker@<init>:301:fileFilter == null |==> false
143:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.io.DirectoryWalker@<init>:301:directoryFilter == null && fileFilter == null |==> directoryFilter == null == (fileFilter == null)
144:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.io.DirectoryWalker@<init>:301:directoryFilter == null && fileFilter == null |==> false
145:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.io.DirectoryWalker@<init>:301:directoryFilter == null && fileFilter == null |==> directoryFilter == null
146:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.io.DirectoryWalker@<init>:301:directoryFilter == null && fileFilter == null |==> fileFilter == null
147:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.io.DirectoryWalker@walk:330:startDirectory == null |==> false
148:STD:<CALL>:<NO-OP>:org.apache.commons.io.DirectoryWalker@walk:334:handleStart(startDirectory, results) |==> <NO-OP>
149:LVR:0:POS:org.apache.commons.io.DirectoryWalker@walk:335:0 |==> 1
150:LVR:0:NEG:org.apache.commons.io.DirectoryWalker@walk:335:0 |==> -1
151:STD:<CALL>:<NO-OP>:org.apache.commons.io.DirectoryWalker@walk:335:walk(startDirectory, 0, results) |==> <NO-OP>
152:STD:<CALL>:<NO-OP>:org.apache.commons.io.DirectoryWalker@walk:336:handleEnd(results) |==> <NO-OP>
153:STD:<CALL>:<NO-OP>:org.apache.commons.io.DirectoryWalker@walk:338:handleCancelled(startDirectory, results, cancel) |==> <NO-OP>
154:STD:<CALL>:<NO-OP>:org.apache.commons.io.DirectoryWalker@walk:351:checkIfCancelled(directory, depth, results) |==> <NO-OP>
155:STD:<CALL>:<NO-OP>:org.apache.commons.io.DirectoryWalker@walk:353:handleDirectoryStart(directory, depth, results) |==> <NO-OP>
156:LVR:POS:0:org.apache.commons.io.DirectoryWalker@walk:354:1 |==> 0
157:LVR:POS:NEG:org.apache.commons.io.DirectoryWalker@walk:354:1 |==> -1
158:AOR:+(int,int):%(int,int):org.apache.commons.io.DirectoryWalker@walk:354:depth + 1 |==> depth % 1
159:AOR:+(int,int):*(int,int):org.apache.commons.io.DirectoryWalker@walk:354:depth + 1 |==> depth * 1
160:AOR:+(int,int):-(int,int):org.apache.commons.io.DirectoryWalker@walk:354:depth + 1 |==> depth - 1
161:AOR:+(int,int):/(int,int):org.apache.commons.io.DirectoryWalker@walk:354:depth + 1 |==> depth / 1
162:STD:<CALL>:<NO-OP>:org.apache.commons.io.DirectoryWalker@walk:356:checkIfCancelled(directory, depth, results) |==> <NO-OP>
163:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.io.DirectoryWalker@walk:357:filter == null |==> false
164:STD:<CALL>:<NO-OP>:org.apache.commons.io.DirectoryWalker@walk:360:handleRestricted(directory, childDepth, results) |==> <NO-OP>
165:STD:<CALL>:<NO-OP>:org.apache.commons.io.DirectoryWalker@walk:364:walk(childFile, childDepth, results) |==> <NO-OP>
166:STD:<CALL>:<NO-OP>:org.apache.commons.io.DirectoryWalker@walk:366:checkIfCancelled(childFile, childDepth, results) |==> <NO-OP>
167:STD:<CALL>:<NO-OP>:org.apache.commons.io.DirectoryWalker@walk:367:handleFile(childFile, childDepth, results) |==> <NO-OP>
168:STD:<CALL>:<NO-OP>:org.apache.commons.io.DirectoryWalker@walk:368:checkIfCancelled(childFile, childDepth, results) |==> <NO-OP>
169:COR:childFile.isDirectory():TRUE:org.apache.commons.io.DirectoryWalker@walk:363:childFile.isDirectory() |==> false
170:COR:childFile.isDirectory():FALSE:org.apache.commons.io.DirectoryWalker@walk:363:childFile.isDirectory() |==> true
171:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.io.DirectoryWalker@walk:359:childFiles == null |==> false
172:LVR:0:POS:org.apache.commons.io.DirectoryWalker@walk:355:0 |==> 1
173:LVR:0:NEG:org.apache.commons.io.DirectoryWalker@walk:355:0 |==> -1
174:ROR:<(int,int):!=(int,int):org.apache.commons.io.DirectoryWalker@walk:355:depthLimit < 0 |==> depthLimit != 0
175:ROR:<(int,int):<=(int,int):org.apache.commons.io.DirectoryWalker@walk:355:depthLimit < 0 |==> depthLimit <= 0
176:ROR:<(int,int):FALSE(int,int):org.apache.commons.io.DirectoryWalker@walk:355:depthLimit < 0 |==> false
177:ROR:<=(int,int):<(int,int):org.apache.commons.io.DirectoryWalker@walk:355:childDepth <= depthLimit |==> childDepth < depthLimit
178:ROR:<=(int,int):==(int,int):org.apache.commons.io.DirectoryWalker@walk:355:childDepth <= depthLimit |==> childDepth == depthLimit
179:ROR:<=(int,int):TRUE(int,int):org.apache.commons.io.DirectoryWalker@walk:355:childDepth <= depthLimit |==> true
180:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.io.DirectoryWalker@walk:355:depthLimit < 0 || childDepth <= depthLimit |==> depthLimit < 0 != childDepth <= depthLimit
181:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.io.DirectoryWalker@walk:355:depthLimit < 0 || childDepth <= depthLimit |==> depthLimit < 0
182:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.io.DirectoryWalker@walk:355:depthLimit < 0 || childDepth <= depthLimit |==> childDepth <= depthLimit
183:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.io.DirectoryWalker@walk:355:depthLimit < 0 || childDepth <= depthLimit |==> true
184:STD:<CALL>:<NO-OP>:org.apache.commons.io.DirectoryWalker@walk:373:handleDirectoryEnd(directory, depth, results) |==> <NO-OP>
185:COR:handleDirectory(directory, depth, results):TRUE:org.apache.commons.io.DirectoryWalker@walk:352:handleDirectory(directory, depth, results) |==> false
186:COR:handleDirectory(directory, depth, results):FALSE:org.apache.commons.io.DirectoryWalker@walk:352:handleDirectory(directory, depth, results) |==> true
187:STD:<CALL>:<NO-OP>:org.apache.commons.io.DirectoryWalker@walk:375:checkIfCancelled(directory, depth, results) |==> <NO-OP>
188:COR:handleIsCancelled(file, depth, results):TRUE:org.apache.commons.io.DirectoryWalker@checkIfCancelled:394:handleIsCancelled(file, depth, results) |==> false
189:COR:handleIsCancelled(file, depth, results):FALSE:org.apache.commons.io.DirectoryWalker@checkIfCancelled:394:handleIsCancelled(file, depth, results) |==> true
190:LVR:FALSE:TRUE:org.apache.commons.io.DirectoryWalker@handleIsCancelled:437:false |==> true
191:LVR:TRUE:FALSE:org.apache.commons.io.DirectoryWalker@handleDirectory:490:true |==> false
192:LVR:0:POS:org.apache.commons.io.EndianUtils@swapShort:56:0 |==> 1
193:LVR:0:NEG:org.apache.commons.io.EndianUtils@swapShort:56:0 |==> -1
194:SOR:>>(int,int):<<(int,int):org.apache.commons.io.EndianUtils@swapShort:56:value >> 0 |==> value << 0
195:SOR:>>(int,int):>>>(int,int):org.apache.commons.io.EndianUtils@swapShort:56:value >> 0 |==> value >>> 0
196:LVR:POS:0:org.apache.commons.io.EndianUtils@swapShort:56:255 |==> 0
197:LVR:POS:NEG:org.apache.commons.io.EndianUtils@swapShort:56:255 |==> -255
198:LOR:&(int,int):^(int,int):org.apache.commons.io.EndianUtils@swapShort:56:(value >> 0) & 255 |==> (value >> 0) ^ 255
199:LOR:&(int,int):|(int,int):org.apache.commons.io.EndianUtils@swapShort:56:(value >> 0) & 255 |==> (value >> 0) | 255
200:LVR:POS:0:org.apache.commons.io.EndianUtils@swapShort:56:8 |==> 0
201:LVR:POS:NEG:org.apache.commons.io.EndianUtils@swapShort:56:8 |==> -8
202:SOR:<<(int,int):>>(int,int):org.apache.commons.io.EndianUtils@swapShort:56:((value >> 0) & 255) << 8 |==> ((value >> 0) & 255) >> 8
203:SOR:<<(int,int):>>>(int,int):org.apache.commons.io.EndianUtils@swapShort:56:((value >> 0) & 255) << 8 |==> ((value >> 0) & 255) >>> 8
204:LVR:POS:0:org.apache.commons.io.EndianUtils@swapShort:57:8 |==> 0
205:LVR:POS:NEG:org.apache.commons.io.EndianUtils@swapShort:57:8 |==> -8
206:SOR:>>(int,int):<<(int,int):org.apache.commons.io.EndianUtils@swapShort:57:value >> 8 |==> value << 8
207:SOR:>>(int,int):>>>(int,int):org.apache.commons.io.EndianUtils@swapShort:57:value >> 8 |==> value >>> 8
208:LVR:POS:0:org.apache.commons.io.EndianUtils@swapShort:57:255 |==> 0
209:LVR:POS:NEG:org.apache.commons.io.EndianUtils@swapShort:57:255 |==> -255
210:LOR:&(int,int):^(int,int):org.apache.commons.io.EndianUtils@swapShort:57:(value >> 8) & 255 |==> (value >> 8) ^ 255
211:LOR:&(int,int):|(int,int):org.apache.commons.io.EndianUtils@swapShort:57:(value >> 8) & 255 |==> (value >> 8) | 255
212:LVR:0:POS:org.apache.commons.io.EndianUtils@swapShort:57:0 |==> 1
213:LVR:0:NEG:org.apache.commons.io.EndianUtils@swapShort:57:0 |==> -1
214:SOR:<<(int,int):>>(int,int):org.apache.commons.io.EndianUtils@swapShort:57:((value >> 8) & 255) << 0 |==> ((value >> 8) & 255) >> 0
215:SOR:<<(int,int):>>>(int,int):org.apache.commons.io.EndianUtils@swapShort:57:((value >> 8) & 255) << 0 |==> ((value >> 8) & 255) >>> 0
216:AOR:+(int,int):%(int,int):org.apache.commons.io.EndianUtils@swapShort:56:(((value >> 0) & 255) << 8) + (((value >> 8) & 255) << 0) |==> (((value >> 0) & 255) << 8) % (((value >> 8) & 255) << 0)
217:AOR:+(int,int):*(int,int):org.apache.commons.io.EndianUtils@swapShort:56:(((value >> 0) & 255) << 8) + (((value >> 8) & 255) << 0) |==> (((value >> 0) & 255) << 8) * (((value >> 8) & 255) << 0)
218:AOR:+(int,int):-(int,int):org.apache.commons.io.EndianUtils@swapShort:56:(((value >> 0) & 255) << 8) + (((value >> 8) & 255) << 0) |==> (((value >> 0) & 255) << 8) - (((value >> 8) & 255) << 0)
219:AOR:+(int,int):/(int,int):org.apache.commons.io.EndianUtils@swapShort:56:(((value >> 0) & 255) << 8) + (((value >> 8) & 255) << 0) |==> (((value >> 0) & 255) << 8) / (((value >> 8) & 255) << 0)
220:LVR:0:POS:org.apache.commons.io.EndianUtils@swapInteger:67:0 |==> 1
221:LVR:0:NEG:org.apache.commons.io.EndianUtils@swapInteger:67:0 |==> -1
222:SOR:>>(int,int):<<(int,int):org.apache.commons.io.EndianUtils@swapInteger:67:value >> 0 |==> value << 0
223:SOR:>>(int,int):>>>(int,int):org.apache.commons.io.EndianUtils@swapInteger:67:value >> 0 |==> value >>> 0
224:LVR:POS:0:org.apache.commons.io.EndianUtils@swapInteger:67:255 |==> 0
225:LVR:POS:NEG:org.apache.commons.io.EndianUtils@swapInteger:67:255 |==> -255
226:LOR:&(int,int):^(int,int):org.apache.commons.io.EndianUtils@swapInteger:67:(value >> 0) & 255 |==> (value >> 0) ^ 255
227:LOR:&(int,int):|(int,int):org.apache.commons.io.EndianUtils@swapInteger:67:(value >> 0) & 255 |==> (value >> 0) | 255
228:LVR:POS:0:org.apache.commons.io.EndianUtils@swapInteger:67:24 |==> 0
229:LVR:POS:NEG:org.apache.commons.io.EndianUtils@swapInteger:67:24 |==> -24
230:SOR:<<(int,int):>>(int,int):org.apache.commons.io.EndianUtils@swapInteger:67:((value >> 0) & 255) << 24 |==> ((value >> 0) & 255) >> 24
231:SOR:<<(int,int):>>>(int,int):org.apache.commons.io.EndianUtils@swapInteger:67:((value >> 0) & 255) << 24 |==> ((value >> 0) & 255) >>> 24
232:LVR:POS:0:org.apache.commons.io.EndianUtils@swapInteger:68:8 |==> 0
233:LVR:POS:NEG:org.apache.commons.io.EndianUtils@swapInteger:68:8 |==> -8
234:SOR:>>(int,int):<<(int,int):org.apache.commons.io.EndianUtils@swapInteger:68:value >> 8 |==> value << 8
235:SOR:>>(int,int):>>>(int,int):org.apache.commons.io.EndianUtils@swapInteger:68:value >> 8 |==> value >>> 8
236:LVR:POS:0:org.apache.commons.io.EndianUtils@swapInteger:68:255 |==> 0
237:LVR:POS:NEG:org.apache.commons.io.EndianUtils@swapInteger:68:255 |==> -255
238:LOR:&(int,int):^(int,int):org.apache.commons.io.EndianUtils@swapInteger:68:(value >> 8) & 255 |==> (value >> 8) ^ 255
239:LOR:&(int,int):|(int,int):org.apache.commons.io.EndianUtils@swapInteger:68:(value >> 8) & 255 |==> (value >> 8) | 255
240:LVR:POS:0:org.apache.commons.io.EndianUtils@swapInteger:68:16 |==> 0
241:LVR:POS:NEG:org.apache.commons.io.EndianUtils@swapInteger:68:16 |==> -16
242:SOR:<<(int,int):>>(int,int):org.apache.commons.io.EndianUtils@swapInteger:68:((value >> 8) & 255) << 16 |==> ((value >> 8) & 255) >> 16
243:SOR:<<(int,int):>>>(int,int):org.apache.commons.io.EndianUtils@swapInteger:68:((value >> 8) & 255) << 16 |==> ((value >> 8) & 255) >>> 16
244:AOR:+(int,int):%(int,int):org.apache.commons.io.EndianUtils@swapInteger:67:(((value >> 0) & 255) << 24) + (((value >> 8) & 255) << 16) |==> (((value >> 0) & 255) << 24) % (((value >> 8) & 255) << 16)
245:AOR:+(int,int):*(int,int):org.apache.commons.io.EndianUtils@swapInteger:67:(((value >> 0) & 255) << 24) + (((value >> 8) & 255) << 16) |==> (((value >> 0) & 255) << 24) * (((value >> 8) & 255) << 16)
246:AOR:+(int,int):-(int,int):org.apache.commons.io.EndianUtils@swapInteger:67:(((value >> 0) & 255) << 24) + (((value >> 8) & 255) << 16) |==> (((value >> 0) & 255) << 24) - (((value >> 8) & 255) << 16)
247:AOR:+(int,int):/(int,int):org.apache.commons.io.EndianUtils@swapInteger:67:(((value >> 0) & 255) << 24) + (((value >> 8) & 255) << 16) |==> (((value >> 0) & 255) << 24) / (((value >> 8) & 255) << 16)
248:LVR:POS:0:org.apache.commons.io.EndianUtils@swapInteger:69:16 |==> 0
249:LVR:POS:NEG:org.apache.commons.io.EndianUtils@swapInteger:69:16 |==> -16
250:SOR:>>(int,int):<<(int,int):org.apache.commons.io.EndianUtils@swapInteger:69:value >> 16 |==> value << 16
251:SOR:>>(int,int):>>>(int,int):org.apache.commons.io.EndianUtils@swapInteger:69:value >> 16 |==> value >>> 16
252:LVR:POS:0:org.apache.commons.io.EndianUtils@swapInteger:69:255 |==> 0
253:LVR:POS:NEG:org.apache.commons.io.EndianUtils@swapInteger:69:255 |==> -255
254:LOR:&(int,int):^(int,int):org.apache.commons.io.EndianUtils@swapInteger:69:(value >> 16) & 255 |==> (value >> 16) ^ 255
255:LOR:&(int,int):|(int,int):org.apache.commons.io.EndianUtils@swapInteger:69:(value >> 16) & 255 |==> (value >> 16) | 255
256:LVR:POS:0:org.apache.commons.io.EndianUtils@swapInteger:69:8 |==> 0
257:LVR:POS:NEG:org.apache.commons.io.EndianUtils@swapInteger:69:8 |==> -8
258:SOR:<<(int,int):>>(int,int):org.apache.commons.io.EndianUtils@swapInteger:69:((value >> 16) & 255) << 8 |==> ((value >> 16) & 255) >> 8
259:SOR:<<(int,int):>>>(int,int):org.apache.commons.io.EndianUtils@swapInteger:69:((value >> 16) & 255) << 8 |==> ((value >> 16) & 255) >>> 8
260:AOR:+(int,int):%(int,int):org.apache.commons.io.EndianUtils@swapInteger:67:(((value >> 0) & 255) << 24) + (((value >> 8) & 255) << 16) + (((value >> 16) & 255) << 8) |==> ((((value >> 0) & 255) << 24) + (((value >> 8) & 255) << 16)) % (((value >> 16) & 255) << 8)
261:AOR:+(int,int):*(int,int):org.apache.commons.io.EndianUtils@swapInteger:67:(((value >> 0) & 255) << 24) + (((value >> 8) & 255) << 16) + (((value >> 16) & 255) << 8) |==> ((((value >> 0) & 255) << 24) + (((value >> 8) & 255) << 16)) * (((value >> 16) & 255) << 8)
262:AOR:+(int,int):-(int,int):org.apache.commons.io.EndianUtils@swapInteger:67:(((value >> 0) & 255) << 24) + (((value >> 8) & 255) << 16) + (((value >> 16) & 255) << 8) |==> (((value >> 0) & 255) << 24) + (((value >> 8) & 255) << 16) - (((value >> 16) & 255) << 8)
263:AOR:+(int,int):/(int,int):org.apache.commons.io.EndianUtils@swapInteger:67:(((value >> 0) & 255) << 24) + (((value >> 8) & 255) << 16) + (((value >> 16) & 255) << 8) |==> ((((value >> 0) & 255) << 24) + (((value >> 8) & 255) << 16)) / (((value >> 16) & 255) << 8)
264:LVR:POS:0:org.apache.commons.io.EndianUtils@swapInteger:70:24 |==> 0
265:LVR:POS:NEG:org.apache.commons.io.EndianUtils@swapInteger:70:24 |==> -24
266:SOR:>>(int,int):<<(int,int):org.apache.commons.io.EndianUtils@swapInteger:70:value >> 24 |==> value << 24
267:SOR:>>(int,int):>>>(int,int):org.apache.commons.io.EndianUtils@swapInteger:70:value >> 24 |==> value >>> 24
268:LVR:POS:0:org.apache.commons.io.EndianUtils@swapInteger:70:255 |==> 0
269:LVR:POS:NEG:org.apache.commons.io.EndianUtils@swapInteger:70:255 |==> -255
270:LOR:&(int,int):^(int,int):org.apache.commons.io.EndianUtils@swapInteger:70:(value >> 24) & 255 |==> (value >> 24) ^ 255
271:LOR:&(int,int):|(int,int):org.apache.commons.io.EndianUtils@swapInteger:70:(value >> 24) & 255 |==> (value >> 24) | 255
272:LVR:0:POS:org.apache.commons.io.EndianUtils@swapInteger:70:0 |==> 1
273:LVR:0:NEG:org.apache.commons.io.EndianUtils@swapInteger:70:0 |==> -1
274:SOR:<<(int,int):>>(int,int):org.apache.commons.io.EndianUtils@swapInteger:70:((value >> 24) & 255) << 0 |==> ((value >> 24) & 255) >> 0
275:SOR:<<(int,int):>>>(int,int):org.apache.commons.io.EndianUtils@swapInteger:70:((value >> 24) & 255) << 0 |==> ((value >> 24) & 255) >>> 0
276:AOR:+(int,int):%(int,int):org.apache.commons.io.EndianUtils@swapInteger:67:(((value >> 0) & 255) << 24) + (((value >> 8) & 255) << 16) + (((value >> 16) & 255) << 8) + (((value >> 24) & 255) << 0) |==> ((((value >> 0) & 255) << 24) + (((value >> 8) & 255) << 16) + (((value >> 16) & 255) << 8)) % (((value >> 24) & 255) << 0)
277:AOR:+(int,int):*(int,int):org.apache.commons.io.EndianUtils@swapInteger:67:(((value >> 0) & 255) << 24) + (((value >> 8) & 255) << 16) + (((value >> 16) & 255) << 8) + (((value >> 24) & 255) << 0) |==> ((((value >> 0) & 255) << 24) + (((value >> 8) & 255) << 16) + (((value >> 16) & 255) << 8)) * (((value >> 24) & 255) << 0)
278:AOR:+(int,int):-(int,int):org.apache.commons.io.EndianUtils@swapInteger:67:(((value >> 0) & 255) << 24) + (((value >> 8) & 255) << 16) + (((value >> 16) & 255) << 8) + (((value >> 24) & 255) << 0) |==> (((value >> 0) & 255) << 24) + (((value >> 8) & 255) << 16) + (((value >> 16) & 255) << 8) - (((value >> 24) & 255) << 0)
279:AOR:+(int,int):/(int,int):org.apache.commons.io.EndianUtils@swapInteger:67:(((value >> 0) & 255) << 24) + (((value >> 8) & 255) << 16) + (((value >> 16) & 255) << 8) + (((value >> 24) & 255) << 0) |==> ((((value >> 0) & 255) << 24) + (((value >> 8) & 255) << 16) + (((value >> 16) & 255) << 8)) / (((value >> 24) & 255) << 0)
280:LVR:0:POS:org.apache.commons.io.EndianUtils@swapLong:80:0 |==> 1
281:LVR:0:NEG:org.apache.commons.io.EndianUtils@swapLong:80:0 |==> -1
282:SOR:>>(long,int):<<(long,int):org.apache.commons.io.EndianUtils@swapLong:80:value >> 0 |==> value << 0
283:SOR:>>(long,int):>>>(long,int):org.apache.commons.io.EndianUtils@swapLong:80:value >> 0 |==> value >>> 0
284:LVR:POS:0:org.apache.commons.io.EndianUtils@swapLong:80:255 |==> 0
285:LVR:POS:NEG:org.apache.commons.io.EndianUtils@swapLong:80:255 |==> -255
286:LOR:&(long,long):^(long,long):org.apache.commons.io.EndianUtils@swapLong:80:(value >> 0) & 255 |==> (value >> 0) ^ 255
287:LOR:&(long,long):|(long,long):org.apache.commons.io.EndianUtils@swapLong:80:(value >> 0) & 255 |==> (value >> 0) | 255
288:LVR:POS:0:org.apache.commons.io.EndianUtils@swapLong:80:56 |==> 0
289:LVR:POS:NEG:org.apache.commons.io.EndianUtils@swapLong:80:56 |==> -56
290:SOR:<<(long,int):>>(long,int):org.apache.commons.io.EndianUtils@swapLong:80:((value >> 0) & 255) << 56 |==> ((value >> 0) & 255) >> 56
291:SOR:<<(long,int):>>>(long,int):org.apache.commons.io.EndianUtils@swapLong:80:((value >> 0) & 255) << 56 |==> ((value >> 0) & 255) >>> 56
292:LVR:POS:0:org.apache.commons.io.EndianUtils@swapLong:81:8 |==> 0
293:LVR:POS:NEG:org.apache.commons.io.EndianUtils@swapLong:81:8 |==> -8
294:SOR:>>(long,int):<<(long,int):org.apache.commons.io.EndianUtils@swapLong:81:value >> 8 |==> value << 8
295:SOR:>>(long,int):>>>(long,int):org.apache.commons.io.EndianUtils@swapLong:81:value >> 8 |==> value >>> 8
296:LVR:POS:0:org.apache.commons.io.EndianUtils@swapLong:81:255 |==> 0
297:LVR:POS:NEG:org.apache.commons.io.EndianUtils@swapLong:81:255 |==> -255
298:LOR:&(long,long):^(long,long):org.apache.commons.io.EndianUtils@swapLong:81:(value >> 8) & 255 |==> (value >> 8) ^ 255
299:LOR:&(long,long):|(long,long):org.apache.commons.io.EndianUtils@swapLong:81:(value >> 8) & 255 |==> (value >> 8) | 255
300:LVR:POS:0:org.apache.commons.io.EndianUtils@swapLong:81:48 |==> 0
301:LVR:POS:NEG:org.apache.commons.io.EndianUtils@swapLong:81:48 |==> -48
302:SOR:<<(long,int):>>(long,int):org.apache.commons.io.EndianUtils@swapLong:81:((value >> 8) & 255) << 48 |==> ((value >> 8) & 255) >> 48
303:SOR:<<(long,int):>>>(long,int):org.apache.commons.io.EndianUtils@swapLong:81:((value >> 8) & 255) << 48 |==> ((value >> 8) & 255) >>> 48
304:AOR:+(long,long):%(long,long):org.apache.commons.io.EndianUtils@swapLong:80:(((value >> 0) & 255) << 56) + (((value >> 8) & 255) << 48) |==> (((value >> 0) & 255) << 56) % (((value >> 8) & 255) << 48)
305:AOR:+(long,long):*(long,long):org.apache.commons.io.EndianUtils@swapLong:80:(((value >> 0) & 255) << 56) + (((value >> 8) & 255) << 48) |==> (((value >> 0) & 255) << 56) * (((value >> 8) & 255) << 48)
306:AOR:+(long,long):-(long,long):org.apache.commons.io.EndianUtils@swapLong:80:(((value >> 0) & 255) << 56) + (((value >> 8) & 255) << 48) |==> (((value >> 0) & 255) << 56) - (((value >> 8) & 255) << 48)
307:AOR:+(long,long):/(long,long):org.apache.commons.io.EndianUtils@swapLong:80:(((value >> 0) & 255) << 56) + (((value >> 8) & 255) << 48) |==> (((value >> 0) & 255) << 56) / (((value >> 8) & 255) << 48)
308:LVR:POS:0:org.apache.commons.io.EndianUtils@swapLong:82:16 |==> 0
309:LVR:POS:NEG:org.apache.commons.io.EndianUtils@swapLong:82:16 |==> -16
310:SOR:>>(long,int):<<(long,int):org.apache.commons.io.EndianUtils@swapLong:82:value >> 16 |==> value << 16
311:SOR:>>(long,int):>>>(long,int):org.apache.commons.io.EndianUtils@swapLong:82:value >> 16 |==> value >>> 16
312:LVR:POS:0:org.apache.commons.io.EndianUtils@swapLong:82:255 |==> 0
313:LVR:POS:NEG:org.apache.commons.io.EndianUtils@swapLong:82:255 |==> -255
314:LOR:&(long,long):^(long,long):org.apache.commons.io.EndianUtils@swapLong:82:(value >> 16) & 255 |==> (value >> 16) ^ 255
315:LOR:&(long,long):|(long,long):org.apache.commons.io.EndianUtils@swapLong:82:(value >> 16) & 255 |==> (value >> 16) | 255
316:LVR:POS:0:org.apache.commons.io.EndianUtils@swapLong:82:40 |==> 0
317:LVR:POS:NEG:org.apache.commons.io.EndianUtils@swapLong:82:40 |==> -40
318:SOR:<<(long,int):>>(long,int):org.apache.commons.io.EndianUtils@swapLong:82:((value >> 16) & 255) << 40 |==> ((value >> 16) & 255) >> 40
319:SOR:<<(long,int):>>>(long,int):org.apache.commons.io.EndianUtils@swapLong:82:((value >> 16) & 255) << 40 |==> ((value >> 16) & 255) >>> 40
320:AOR:+(long,long):%(long,long):org.apache.commons.io.EndianUtils@swapLong:80:(((value >> 0) & 255) << 56) + (((value >> 8) & 255) << 48) + (((value >> 16) & 255) << 40) |==> ((((value >> 0) & 255) << 56) + (((value >> 8) & 255) << 48)) % (((value >> 16) & 255) << 40)
321:AOR:+(long,long):*(long,long):org.apache.commons.io.EndianUtils@swapLong:80:(((value >> 0) & 255) << 56) + (((value >> 8) & 255) << 48) + (((value >> 16) & 255) << 40) |==> ((((value >> 0) & 255) << 56) + (((value >> 8) & 255) << 48)) * (((value >> 16) & 255) << 40)
322:AOR:+(long,long):-(long,long):org.apache.commons.io.EndianUtils@swapLong:80:(((value >> 0) & 255) << 56) + (((value >> 8) & 255) << 48) + (((value >> 16) & 255) << 40) |==> (((value >> 0) & 255) << 56) + (((value >> 8) & 255) << 48) - (((value >> 16) & 255) << 40)
323:AOR:+(long,long):/(long,long):org.apache.commons.io.EndianUtils@swapLong:80:(((value >> 0) & 255) << 56) + (((value >> 8) & 255) << 48) + (((value >> 16) & 255) << 40) |==> ((((value >> 0) & 255) << 56) + (((value >> 8) & 255) << 48)) / (((value >> 16) & 255) << 40)
324:LVR:POS:0:org.apache.commons.io.EndianUtils@swapLong:83:24 |==> 0
325:LVR:POS:NEG:org.apache.commons.io.EndianUtils@swapLong:83:24 |==> -24
326:SOR:>>(long,int):<<(long,int):org.apache.commons.io.EndianUtils@swapLong:83:value >> 24 |==> value << 24
327:SOR:>>(long,int):>>>(long,int):org.apache.commons.io.EndianUtils@swapLong:83:value >> 24 |==> value >>> 24
328:LVR:POS:0:org.apache.commons.io.EndianUtils@swapLong:83:255 |==> 0
329:LVR:POS:NEG:org.apache.commons.io.EndianUtils@swapLong:83:255 |==> -255
330:LOR:&(long,long):^(long,long):org.apache.commons.io.EndianUtils@swapLong:83:(value >> 24) & 255 |==> (value >> 24) ^ 255
331:LOR:&(long,long):|(long,long):org.apache.commons.io.EndianUtils@swapLong:83:(value >> 24) & 255 |==> (value >> 24) | 255
332:LVR:POS:0:org.apache.commons.io.EndianUtils@swapLong:83:32 |==> 0
333:LVR:POS:NEG:org.apache.commons.io.EndianUtils@swapLong:83:32 |==> -32
334:SOR:<<(long,int):>>(long,int):org.apache.commons.io.EndianUtils@swapLong:83:((value >> 24) & 255) << 32 |==> ((value >> 24) & 255) >> 32
335:SOR:<<(long,int):>>>(long,int):org.apache.commons.io.EndianUtils@swapLong:83:((value >> 24) & 255) << 32 |==> ((value >> 24) & 255) >>> 32
336:AOR:+(long,long):%(long,long):org.apache.commons.io.EndianUtils@swapLong:80:(((value >> 0) & 255) << 56) + (((value >> 8) & 255) << 48) + (((value >> 16) & 255) << 40) + (((value >> 24) & 255) << 32) |==> ((((value >> 0) & 255) << 56) + (((value >> 8) & 255) << 48) + (((value >> 16) & 255) << 40)) % (((value >> 24) & 255) << 32)
337:AOR:+(long,long):*(long,long):org.apache.commons.io.EndianUtils@swapLong:80:(((value >> 0) & 255) << 56) + (((value >> 8) & 255) << 48) + (((value >> 16) & 255) << 40) + (((value >> 24) & 255) << 32) |==> ((((value >> 0) & 255) << 56) + (((value >> 8) & 255) << 48) + (((value >> 16) & 255) << 40)) * (((value >> 24) & 255) << 32)
338:AOR:+(long,long):-(long,long):org.apache.commons.io.EndianUtils@swapLong:80:(((value >> 0) & 255) << 56) + (((value >> 8) & 255) << 48) + (((value >> 16) & 255) << 40) + (((value >> 24) & 255) << 32) |==> (((value >> 0) & 255) << 56) + (((value >> 8) & 255) << 48) + (((value >> 16) & 255) << 40) - (((value >> 24) & 255) << 32)
339:AOR:+(long,long):/(long,long):org.apache.commons.io.EndianUtils@swapLong:80:(((value >> 0) & 255) << 56) + (((value >> 8) & 255) << 48) + (((value >> 16) & 255) << 40) + (((value >> 24) & 255) << 32) |==> ((((value >> 0) & 255) << 56) + (((value >> 8) & 255) << 48) + (((value >> 16) & 255) << 40)) / (((value >> 24) & 255) << 32)
340:LVR:POS:0:org.apache.commons.io.EndianUtils@swapLong:84:32 |==> 0
341:LVR:POS:NEG:org.apache.commons.io.EndianUtils@swapLong:84:32 |==> -32
342:SOR:>>(long,int):<<(long,int):org.apache.commons.io.EndianUtils@swapLong:84:value >> 32 |==> value << 32
343:SOR:>>(long,int):>>>(long,int):org.apache.commons.io.EndianUtils@swapLong:84:value >> 32 |==> value >>> 32
344:LVR:POS:0:org.apache.commons.io.EndianUtils@swapLong:84:255 |==> 0
345:LVR:POS:NEG:org.apache.commons.io.EndianUtils@swapLong:84:255 |==> -255
346:LOR:&(long,long):^(long,long):org.apache.commons.io.EndianUtils@swapLong:84:(value >> 32) & 255 |==> (value >> 32) ^ 255
347:LOR:&(long,long):|(long,long):org.apache.commons.io.EndianUtils@swapLong:84:(value >> 32) & 255 |==> (value >> 32) | 255
348:LVR:POS:0:org.apache.commons.io.EndianUtils@swapLong:84:24 |==> 0
349:LVR:POS:NEG:org.apache.commons.io.EndianUtils@swapLong:84:24 |==> -24
350:SOR:<<(long,int):>>(long,int):org.apache.commons.io.EndianUtils@swapLong:84:((value >> 32) & 255) << 24 |==> ((value >> 32) & 255) >> 24
351:SOR:<<(long,int):>>>(long,int):org.apache.commons.io.EndianUtils@swapLong:84:((value >> 32) & 255) << 24 |==> ((value >> 32) & 255) >>> 24
352:AOR:+(long,long):%(long,long):org.apache.commons.io.EndianUtils@swapLong:80:(((value >> 0) & 255) << 56) + (((value >> 8) & 255) << 48) + (((value >> 16) & 255) << 40) + (((value >> 24) & 255) << 32) + (((value >> 32) & 255) << 24) |==> ((((value >> 0) & 255) << 56) + (((value >> 8) & 255) << 48) + (((value >> 16) & 255) << 40) + (((value >> 24) & 255) << 32)) % (((value >> 32) & 255) << 24)
353:AOR:+(long,long):*(long,long):org.apache.commons.io.EndianUtils@swapLong:80:(((value >> 0) & 255) << 56) + (((value >> 8) & 255) << 48) + (((value >> 16) & 255) << 40) + (((value >> 24) & 255) << 32) + (((value >> 32) & 255) << 24) |==> ((((value >> 0) & 255) << 56) + (((value >> 8) & 255) << 48) + (((value >> 16) & 255) << 40) + (((value >> 24) & 255) << 32)) * (((value >> 32) & 255) << 24)
354:AOR:+(long,long):-(long,long):org.apache.commons.io.EndianUtils@swapLong:80:(((value >> 0) & 255) << 56) + (((value >> 8) & 255) << 48) + (((value >> 16) & 255) << 40) + (((value >> 24) & 255) << 32) + (((value >> 32) & 255) << 24) |==> (((value >> 0) & 255) << 56) + (((value >> 8) & 255) << 48) + (((value >> 16) & 255) << 40) + (((value >> 24) & 255) << 32) - (((value >> 32) & 255) << 24)
355:AOR:+(long,long):/(long,long):org.apache.commons.io.EndianUtils@swapLong:80:(((value >> 0) & 255) << 56) + (((value >> 8) & 255) << 48) + (((value >> 16) & 255) << 40) + (((value >> 24) & 255) << 32) + (((value >> 32) & 255) << 24) |==> ((((value >> 0) & 255) << 56) + (((value >> 8) & 255) << 48) + (((value >> 16) & 255) << 40) + (((value >> 24) & 255) << 32)) / (((value >> 32) & 255) << 24)
356:LVR:POS:0:org.apache.commons.io.EndianUtils@swapLong:85:40 |==> 0
357:LVR:POS:NEG:org.apache.commons.io.EndianUtils@swapLong:85:40 |==> -40
358:SOR:>>(long,int):<<(long,int):org.apache.commons.io.EndianUtils@swapLong:85:value >> 40 |==> value << 40
359:SOR:>>(long,int):>>>(long,int):org.apache.commons.io.EndianUtils@swapLong:85:value >> 40 |==> value >>> 40
360:LVR:POS:0:org.apache.commons.io.EndianUtils@swapLong:85:255 |==> 0
361:LVR:POS:NEG:org.apache.commons.io.EndianUtils@swapLong:85:255 |==> -255
362:LOR:&(long,long):^(long,long):org.apache.commons.io.EndianUtils@swapLong:85:(value >> 40) & 255 |==> (value >> 40) ^ 255
363:LOR:&(long,long):|(long,long):org.apache.commons.io.EndianUtils@swapLong:85:(value >> 40) & 255 |==> (value >> 40) | 255
364:LVR:POS:0:org.apache.commons.io.EndianUtils@swapLong:85:16 |==> 0
365:LVR:POS:NEG:org.apache.commons.io.EndianUtils@swapLong:85:16 |==> -16
366:SOR:<<(long,int):>>(long,int):org.apache.commons.io.EndianUtils@swapLong:85:((value >> 40) & 255) << 16 |==> ((value >> 40) & 255) >> 16
367:SOR:<<(long,int):>>>(long,int):org.apache.commons.io.EndianUtils@swapLong:85:((value >> 40) & 255) << 16 |==> ((value >> 40) & 255) >>> 16
368:AOR:+(long,long):%(long,long):org.apache.commons.io.EndianUtils@swapLong:80:(((value >> 0) & 255) << 56) + (((value >> 8) & 255) << 48) + (((value >> 16) & 255) << 40) + (((value >> 24) & 255) << 32) + (((value >> 32) & 255) << 24) + (((value >> 40) & 255) << 16) |==> ((((value >> 0) & 255) << 56) + (((value >> 8) & 255) << 48) + (((value >> 16) & 255) << 40) + (((value >> 24) & 255) << 32) + (((value >> 32) & 255) << 24)) % (((value >> 40) & 255) << 16)
369:AOR:+(long,long):*(long,long):org.apache.commons.io.EndianUtils@swapLong:80:(((value >> 0) & 255) << 56) + (((value >> 8) & 255) << 48) + (((value >> 16) & 255) << 40) + (((value >> 24) & 255) << 32) + (((value >> 32) & 255) << 24) + (((value >> 40) & 255) << 16) |==> ((((value >> 0) & 255) << 56) + (((value >> 8) & 255) << 48) + (((value >> 16) & 255) << 40) + (((value >> 24) & 255) << 32) + (((value >> 32) & 255) << 24)) * (((value >> 40) & 255) << 16)
370:AOR:+(long,long):-(long,long):org.apache.commons.io.EndianUtils@swapLong:80:(((value >> 0) & 255) << 56) + (((value >> 8) & 255) << 48) + (((value >> 16) & 255) << 40) + (((value >> 24) & 255) << 32) + (((value >> 32) & 255) << 24) + (((value >> 40) & 255) << 16) |==> (((value >> 0) & 255) << 56) + (((value >> 8) & 255) << 48) + (((value >> 16) & 255) << 40) + (((value >> 24) & 255) << 32) + (((value >> 32) & 255) << 24) - (((value >> 40) & 255) << 16)
371:AOR:+(long,long):/(long,long):org.apache.commons.io.EndianUtils@swapLong:80:(((value >> 0) & 255) << 56) + (((value >> 8) & 255) << 48) + (((value >> 16) & 255) << 40) + (((value >> 24) & 255) << 32) + (((value >> 32) & 255) << 24) + (((value >> 40) & 255) << 16) |==> ((((value >> 0) & 255) << 56) + (((value >> 8) & 255) << 48) + (((value >> 16) & 255) << 40) + (((value >> 24) & 255) << 32) + (((value >> 32) & 255) << 24)) / (((value >> 40) & 255) << 16)
372:LVR:POS:0:org.apache.commons.io.EndianUtils@swapLong:86:48 |==> 0
373:LVR:POS:NEG:org.apache.commons.io.EndianUtils@swapLong:86:48 |==> -48
374:SOR:>>(long,int):<<(long,int):org.apache.commons.io.EndianUtils@swapLong:86:value >> 48 |==> value << 48
375:SOR:>>(long,int):>>>(long,int):org.apache.commons.io.EndianUtils@swapLong:86:value >> 48 |==> value >>> 48
376:LVR:POS:0:org.apache.commons.io.EndianUtils@swapLong:86:255 |==> 0
377:LVR:POS:NEG:org.apache.commons.io.EndianUtils@swapLong:86:255 |==> -255
378:LOR:&(long,long):^(long,long):org.apache.commons.io.EndianUtils@swapLong:86:(value >> 48) & 255 |==> (value >> 48) ^ 255
379:LOR:&(long,long):|(long,long):org.apache.commons.io.EndianUtils@swapLong:86:(value >> 48) & 255 |==> (value >> 48) | 255
380:LVR:POS:0:org.apache.commons.io.EndianUtils@swapLong:86:8 |==> 0
381:LVR:POS:NEG:org.apache.commons.io.EndianUtils@swapLong:86:8 |==> -8
382:SOR:<<(long,int):>>(long,int):org.apache.commons.io.EndianUtils@swapLong:86:((value >> 48) & 255) << 8 |==> ((value >> 48) & 255) >> 8
383:SOR:<<(long,int):>>>(long,int):org.apache.commons.io.EndianUtils@swapLong:86:((value >> 48) & 255) << 8 |==> ((value >> 48) & 255) >>> 8
384:AOR:+(long,long):%(long,long):org.apache.commons.io.EndianUtils@swapLong:80:(((value >> 0) & 255) << 56) + (((value >> 8) & 255) << 48) + (((value >> 16) & 255) << 40) + (((value >> 24) & 255) << 32) + (((value >> 32) & 255) << 24) + (((value >> 40) & 255) << 16) + (((value >> 48) & 255) << 8) |==> ((((value >> 0) & 255) << 56) + (((value >> 8) & 255) << 48) + (((value >> 16) & 255) << 40) + (((value >> 24) & 255) << 32) + (((value >> 32) & 255) << 24) + (((value >> 40) & 255) << 16)) % (((value >> 48) & 255) << 8)
385:AOR:+(long,long):*(long,long):org.apache.commons.io.EndianUtils@swapLong:80:(((value >> 0) & 255) << 56) + (((value >> 8) & 255) << 48) + (((value >> 16) & 255) << 40) + (((value >> 24) & 255) << 32) + (((value >> 32) & 255) << 24) + (((value >> 40) & 255) << 16) + (((value >> 48) & 255) << 8) |==> ((((value >> 0) & 255) << 56) + (((value >> 8) & 255) << 48) + (((value >> 16) & 255) << 40) + (((value >> 24) & 255) << 32) + (((value >> 32) & 255) << 24) + (((value >> 40) & 255) << 16)) * (((value >> 48) & 255) << 8)
386:AOR:+(long,long):-(long,long):org.apache.commons.io.EndianUtils@swapLong:80:(((value >> 0) & 255) << 56) + (((value >> 8) & 255) << 48) + (((value >> 16) & 255) << 40) + (((value >> 24) & 255) << 32) + (((value >> 32) & 255) << 24) + (((value >> 40) & 255) << 16) + (((value >> 48) & 255) << 8) |==> (((value >> 0) & 255) << 56) + (((value >> 8) & 255) << 48) + (((value >> 16) & 255) << 40) + (((value >> 24) & 255) << 32) + (((value >> 32) & 255) << 24) + (((value >> 40) & 255) << 16) - (((value >> 48) & 255) << 8)
387:AOR:+(long,long):/(long,long):org.apache.commons.io.EndianUtils@swapLong:80:(((value >> 0) & 255) << 56) + (((value >> 8) & 255) << 48) + (((value >> 16) & 255) << 40) + (((value >> 24) & 255) << 32) + (((value >> 32) & 255) << 24) + (((value >> 40) & 255) << 16) + (((value >> 48) & 255) << 8) |==> ((((value >> 0) & 255) << 56) + (((value >> 8) & 255) << 48) + (((value >> 16) & 255) << 40) + (((value >> 24) & 255) << 32) + (((value >> 32) & 255) << 24) + (((value >> 40) & 255) << 16)) / (((value >> 48) & 255) << 8)
388:LVR:POS:0:org.apache.commons.io.EndianUtils@swapLong:87:56 |==> 0
389:LVR:POS:NEG:org.apache.commons.io.EndianUtils@swapLong:87:56 |==> -56
390:SOR:>>(long,int):<<(long,int):org.apache.commons.io.EndianUtils@swapLong:87:value >> 56 |==> value << 56
391:SOR:>>(long,int):>>>(long,int):org.apache.commons.io.EndianUtils@swapLong:87:value >> 56 |==> value >>> 56
392:LVR:POS:0:org.apache.commons.io.EndianUtils@swapLong:87:255 |==> 0
393:LVR:POS:NEG:org.apache.commons.io.EndianUtils@swapLong:87:255 |==> -255
394:LOR:&(long,long):^(long,long):org.apache.commons.io.EndianUtils@swapLong:87:(value >> 56) & 255 |==> (value >> 56) ^ 255
395:LOR:&(long,long):|(long,long):org.apache.commons.io.EndianUtils@swapLong:87:(value >> 56) & 255 |==> (value >> 56) | 255
396:LVR:0:POS:org.apache.commons.io.EndianUtils@swapLong:87:0 |==> 1
397:LVR:0:NEG:org.apache.commons.io.EndianUtils@swapLong:87:0 |==> -1
398:SOR:<<(long,int):>>(long,int):org.apache.commons.io.EndianUtils@swapLong:87:((value >> 56) & 255) << 0 |==> ((value >> 56) & 255) >> 0
399:SOR:<<(long,int):>>>(long,int):org.apache.commons.io.EndianUtils@swapLong:87:((value >> 56) & 255) << 0 |==> ((value >> 56) & 255) >>> 0
400:AOR:+(long,long):%(long,long):org.apache.commons.io.EndianUtils@swapLong:80:(((value >> 0) & 255) << 56) + (((value >> 8) & 255) << 48) + (((value >> 16) & 255) << 40) + (((value >> 24) & 255) << 32) + (((value >> 32) & 255) << 24) + (((value >> 40) & 255) << 16) + (((value >> 48) & 255) << 8) + (((value >> 56) & 255) << 0) |==> ((((value >> 0) & 255) << 56) + (((value >> 8) & 255) << 48) + (((value >> 16) & 255) << 40) + (((value >> 24) & 255) << 32) + (((value >> 32) & 255) << 24) + (((value >> 40) & 255) << 16) + (((value >> 48) & 255) << 8)) % (((value >> 56) & 255) << 0)
401:AOR:+(long,long):*(long,long):org.apache.commons.io.EndianUtils@swapLong:80:(((value >> 0) & 255) << 56) + (((value >> 8) & 255) << 48) + (((value >> 16) & 255) << 40) + (((value >> 24) & 255) << 32) + (((value >> 32) & 255) << 24) + (((value >> 40) & 255) << 16) + (((value >> 48) & 255) << 8) + (((value >> 56) & 255) << 0) |==> ((((value >> 0) & 255) << 56) + (((value >> 8) & 255) << 48) + (((value >> 16) & 255) << 40) + (((value >> 24) & 255) << 32) + (((value >> 32) & 255) << 24) + (((value >> 40) & 255) << 16) + (((value >> 48) & 255) << 8)) * (((value >> 56) & 255) << 0)
402:AOR:+(long,long):-(long,long):org.apache.commons.io.EndianUtils@swapLong:80:(((value >> 0) & 255) << 56) + (((value >> 8) & 255) << 48) + (((value >> 16) & 255) << 40) + (((value >> 24) & 255) << 32) + (((value >> 32) & 255) << 24) + (((value >> 40) & 255) << 16) + (((value >> 48) & 255) << 8) + (((value >> 56) & 255) << 0) |==> (((value >> 0) & 255) << 56) + (((value >> 8) & 255) << 48) + (((value >> 16) & 255) << 40) + (((value >> 24) & 255) << 32) + (((value >> 32) & 255) << 24) + (((value >> 40) & 255) << 16) + (((value >> 48) & 255) << 8) - (((value >> 56) & 255) << 0)
403:AOR:+(long,long):/(long,long):org.apache.commons.io.EndianUtils@swapLong:80:(((value >> 0) & 255) << 56) + (((value >> 8) & 255) << 48) + (((value >> 16) & 255) << 40) + (((value >> 24) & 255) << 32) + (((value >> 32) & 255) << 24) + (((value >> 40) & 255) << 16) + (((value >> 48) & 255) << 8) + (((value >> 56) & 255) << 0) |==> ((((value >> 0) & 255) << 56) + (((value >> 8) & 255) << 48) + (((value >> 16) & 255) << 40) + (((value >> 24) & 255) << 32) + (((value >> 32) & 255) << 24) + (((value >> 40) & 255) << 16) + (((value >> 48) & 255) << 8)) / (((value >> 56) & 255) << 0)
404:LVR:0:POS:org.apache.commons.io.EndianUtils@writeSwappedShort:118:0 |==> 1
405:LVR:0:NEG:org.apache.commons.io.EndianUtils@writeSwappedShort:118:0 |==> -1
406:AOR:+(int,int):%(int,int):org.apache.commons.io.EndianUtils@writeSwappedShort:118:offset + 0 |==> offset % 0
407:AOR:+(int,int):*(int,int):org.apache.commons.io.EndianUtils@writeSwappedShort:118:offset + 0 |==> offset * 0
408:AOR:+(int,int):-(int,int):org.apache.commons.io.EndianUtils@writeSwappedShort:118:offset + 0 |==> offset - 0
409:AOR:+(int,int):/(int,int):org.apache.commons.io.EndianUtils@writeSwappedShort:118:offset + 0 |==> offset / 0
410:LVR:0:POS:org.apache.commons.io.EndianUtils@writeSwappedShort:118:0 |==> 1
411:LVR:0:NEG:org.apache.commons.io.EndianUtils@writeSwappedShort:118:0 |==> -1
412:SOR:>>(int,int):<<(int,int):org.apache.commons.io.EndianUtils@writeSwappedShort:118:value >> 0 |==> value << 0
413:SOR:>>(int,int):>>>(int,int):org.apache.commons.io.EndianUtils@writeSwappedShort:118:value >> 0 |==> value >>> 0
414:LVR:POS:0:org.apache.commons.io.EndianUtils@writeSwappedShort:118:255 |==> 0
415:LVR:POS:NEG:org.apache.commons.io.EndianUtils@writeSwappedShort:118:255 |==> -255
416:LOR:&(int,int):^(int,int):org.apache.commons.io.EndianUtils@writeSwappedShort:118:(value >> 0) & 255 |==> (value >> 0) ^ 255
417:LOR:&(int,int):|(int,int):org.apache.commons.io.EndianUtils@writeSwappedShort:118:(value >> 0) & 255 |==> (value >> 0) | 255
418:LVR:POS:0:org.apache.commons.io.EndianUtils@writeSwappedShort:119:1 |==> 0
419:LVR:POS:NEG:org.apache.commons.io.EndianUtils@writeSwappedShort:119:1 |==> -1
420:AOR:+(int,int):%(int,int):org.apache.commons.io.EndianUtils@writeSwappedShort:119:offset + 1 |==> offset % 1
421:AOR:+(int,int):*(int,int):org.apache.commons.io.EndianUtils@writeSwappedShort:119:offset + 1 |==> offset * 1
422:AOR:+(int,int):-(int,int):org.apache.commons.io.EndianUtils@writeSwappedShort:119:offset + 1 |==> offset - 1
423:AOR:+(int,int):/(int,int):org.apache.commons.io.EndianUtils@writeSwappedShort:119:offset + 1 |==> offset / 1
424:LVR:POS:0:org.apache.commons.io.EndianUtils@writeSwappedShort:119:8 |==> 0
425:LVR:POS:NEG:org.apache.commons.io.EndianUtils@writeSwappedShort:119:8 |==> -8
426:SOR:>>(int,int):<<(int,int):org.apache.commons.io.EndianUtils@writeSwappedShort:119:value >> 8 |==> value << 8
427:SOR:>>(int,int):>>>(int,int):org.apache.commons.io.EndianUtils@writeSwappedShort:119:value >> 8 |==> value >>> 8
428:LVR:POS:0:org.apache.commons.io.EndianUtils@writeSwappedShort:119:255 |==> 0
429:LVR:POS:NEG:org.apache.commons.io.EndianUtils@writeSwappedShort:119:255 |==> -255
430:LOR:&(int,int):^(int,int):org.apache.commons.io.EndianUtils@writeSwappedShort:119:(value >> 8) & 255 |==> (value >> 8) ^ 255
431:LOR:&(int,int):|(int,int):org.apache.commons.io.EndianUtils@writeSwappedShort:119:(value >> 8) & 255 |==> (value >> 8) | 255
432:LVR:0:POS:org.apache.commons.io.EndianUtils@readSwappedShort:130:0 |==> 1
433:LVR:0:NEG:org.apache.commons.io.EndianUtils@readSwappedShort:130:0 |==> -1
434:AOR:+(int,int):%(int,int):org.apache.commons.io.EndianUtils@readSwappedShort:130:offset + 0 |==> offset % 0
435:AOR:+(int,int):*(int,int):org.apache.commons.io.EndianUtils@readSwappedShort:130:offset + 0 |==> offset * 0
436:AOR:+(int,int):-(int,int):org.apache.commons.io.EndianUtils@readSwappedShort:130:offset + 0 |==> offset - 0
437:AOR:+(int,int):/(int,int):org.apache.commons.io.EndianUtils@readSwappedShort:130:offset + 0 |==> offset / 0
438:LVR:POS:0:org.apache.commons.io.EndianUtils@readSwappedShort:130:255 |==> 0
439:LVR:POS:NEG:org.apache.commons.io.EndianUtils@readSwappedShort:130:255 |==> -255
440:LOR:&(int,int):^(int,int):org.apache.commons.io.EndianUtils@readSwappedShort:130:data[offset + 0] & 255 |==> data[offset + 0] ^ 255
441:LOR:&(int,int):|(int,int):org.apache.commons.io.EndianUtils@readSwappedShort:130:data[offset + 0] & 255 |==> data[offset + 0] | 255
442:LVR:0:POS:org.apache.commons.io.EndianUtils@readSwappedShort:130:0 |==> 1
443:LVR:0:NEG:org.apache.commons.io.EndianUtils@readSwappedShort:130:0 |==> -1
444:SOR:<<(int,int):>>(int,int):org.apache.commons.io.EndianUtils@readSwappedShort:130:(data[offset + 0] & 255) << 0 |==> (data[offset + 0] & 255) >> 0
445:SOR:<<(int,int):>>>(int,int):org.apache.commons.io.EndianUtils@readSwappedShort:130:(data[offset + 0] & 255) << 0 |==> (data[offset + 0] & 255) >>> 0
446:LVR:POS:0:org.apache.commons.io.EndianUtils@readSwappedShort:131:1 |==> 0
447:LVR:POS:NEG:org.apache.commons.io.EndianUtils@readSwappedShort:131:1 |==> -1
448:AOR:+(int,int):%(int,int):org.apache.commons.io.EndianUtils@readSwappedShort:131:offset + 1 |==> offset % 1
449:AOR:+(int,int):*(int,int):org.apache.commons.io.EndianUtils@readSwappedShort:131:offset + 1 |==> offset * 1
450:AOR:+(int,int):-(int,int):org.apache.commons.io.EndianUtils@readSwappedShort:131:offset + 1 |==> offset - 1
451:AOR:+(int,int):/(int,int):org.apache.commons.io.EndianUtils@readSwappedShort:131:offset + 1 |==> offset / 1
452:LVR:POS:0:org.apache.commons.io.EndianUtils@readSwappedShort:131:255 |==> 0
453:LVR:POS:NEG:org.apache.commons.io.EndianUtils@readSwappedShort:131:255 |==> -255
454:LOR:&(int,int):^(int,int):org.apache.commons.io.EndianUtils@readSwappedShort:131:data[offset + 1] & 255 |==> data[offset + 1] ^ 255
455:LOR:&(int,int):|(int,int):org.apache.commons.io.EndianUtils@readSwappedShort:131:data[offset + 1] & 255 |==> data[offset + 1] | 255
456:LVR:POS:0:org.apache.commons.io.EndianUtils@readSwappedShort:131:8 |==> 0
457:LVR:POS:NEG:org.apache.commons.io.EndianUtils@readSwappedShort:131:8 |==> -8
458:SOR:<<(int,int):>>(int,int):org.apache.commons.io.EndianUtils@readSwappedShort:131:(data[offset + 1] & 255) << 8 |==> (data[offset + 1] & 255) >> 8
459:SOR:<<(int,int):>>>(int,int):org.apache.commons.io.EndianUtils@readSwappedShort:131:(data[offset + 1] & 255) << 8 |==> (data[offset + 1] & 255) >>> 8
460:AOR:+(int,int):%(int,int):org.apache.commons.io.EndianUtils@readSwappedShort:130:((data[offset + 0] & 255) << 0) + ((data[offset + 1] & 255) << 8) |==> ((data[offset + 0] & 255) << 0) % ((data[offset + 1] & 255) << 8)
461:AOR:+(int,int):*(int,int):org.apache.commons.io.EndianUtils@readSwappedShort:130:((data[offset + 0] & 255) << 0) + ((data[offset + 1] & 255) << 8) |==> ((data[offset + 0] & 255) << 0) * ((data[offset + 1] & 255) << 8)
462:AOR:+(int,int):-(int,int):org.apache.commons.io.EndianUtils@readSwappedShort:130:((data[offset + 0] & 255) << 0) + ((data[offset + 1] & 255) << 8) |==> ((data[offset + 0] & 255) << 0) - ((data[offset + 1] & 255) << 8)
463:AOR:+(int,int):/(int,int):org.apache.commons.io.EndianUtils@readSwappedShort:130:((data[offset + 0] & 255) << 0) + ((data[offset + 1] & 255) << 8) |==> ((data[offset + 0] & 255) << 0) / ((data[offset + 1] & 255) << 8)
464:LVR:0:POS:org.apache.commons.io.EndianUtils@readSwappedUnsignedShort:143:0 |==> 1
465:LVR:0:NEG:org.apache.commons.io.EndianUtils@readSwappedUnsignedShort:143:0 |==> -1
466:AOR:+(int,int):%(int,int):org.apache.commons.io.EndianUtils@readSwappedUnsignedShort:143:offset + 0 |==> offset % 0
467:AOR:+(int,int):*(int,int):org.apache.commons.io.EndianUtils@readSwappedUnsignedShort:143:offset + 0 |==> offset * 0
468:AOR:+(int,int):-(int,int):org.apache.commons.io.EndianUtils@readSwappedUnsignedShort:143:offset + 0 |==> offset - 0
469:AOR:+(int,int):/(int,int):org.apache.commons.io.EndianUtils@readSwappedUnsignedShort:143:offset + 0 |==> offset / 0
470:LVR:POS:0:org.apache.commons.io.EndianUtils@readSwappedUnsignedShort:143:255 |==> 0
471:LVR:POS:NEG:org.apache.commons.io.EndianUtils@readSwappedUnsignedShort:143:255 |==> -255
472:LOR:&(int,int):^(int,int):org.apache.commons.io.EndianUtils@readSwappedUnsignedShort:143:data[offset + 0] & 255 |==> data[offset + 0] ^ 255
473:LOR:&(int,int):|(int,int):org.apache.commons.io.EndianUtils@readSwappedUnsignedShort:143:data[offset + 0] & 255 |==> data[offset + 0] | 255
474:LVR:0:POS:org.apache.commons.io.EndianUtils@readSwappedUnsignedShort:143:0 |==> 1
475:LVR:0:NEG:org.apache.commons.io.EndianUtils@readSwappedUnsignedShort:143:0 |==> -1
476:SOR:<<(int,int):>>(int,int):org.apache.commons.io.EndianUtils@readSwappedUnsignedShort:143:(data[offset + 0] & 255) << 0 |==> (data[offset + 0] & 255) >> 0
477:SOR:<<(int,int):>>>(int,int):org.apache.commons.io.EndianUtils@readSwappedUnsignedShort:143:(data[offset + 0] & 255) << 0 |==> (data[offset + 0] & 255) >>> 0
478:LVR:POS:0:org.apache.commons.io.EndianUtils@readSwappedUnsignedShort:144:1 |==> 0
479:LVR:POS:NEG:org.apache.commons.io.EndianUtils@readSwappedUnsignedShort:144:1 |==> -1
480:AOR:+(int,int):%(int,int):org.apache.commons.io.EndianUtils@readSwappedUnsignedShort:144:offset + 1 |==> offset % 1
481:AOR:+(int,int):*(int,int):org.apache.commons.io.EndianUtils@readSwappedUnsignedShort:144:offset + 1 |==> offset * 1
482:AOR:+(int,int):-(int,int):org.apache.commons.io.EndianUtils@readSwappedUnsignedShort:144:offset + 1 |==> offset - 1
483:AOR:+(int,int):/(int,int):org.apache.commons.io.EndianUtils@readSwappedUnsignedShort:144:offset + 1 |==> offset / 1
484:LVR:POS:0:org.apache.commons.io.EndianUtils@readSwappedUnsignedShort:144:255 |==> 0
485:LVR:POS:NEG:org.apache.commons.io.EndianUtils@readSwappedUnsignedShort:144:255 |==> -255
486:LOR:&(int,int):^(int,int):org.apache.commons.io.EndianUtils@readSwappedUnsignedShort:144:data[offset + 1] & 255 |==> data[offset + 1] ^ 255
487:LOR:&(int,int):|(int,int):org.apache.commons.io.EndianUtils@readSwappedUnsignedShort:144:data[offset + 1] & 255 |==> data[offset + 1] | 255
488:LVR:POS:0:org.apache.commons.io.EndianUtils@readSwappedUnsignedShort:144:8 |==> 0
489:LVR:POS:NEG:org.apache.commons.io.EndianUtils@readSwappedUnsignedShort:144:8 |==> -8
490:SOR:<<(int,int):>>(int,int):org.apache.commons.io.EndianUtils@readSwappedUnsignedShort:144:(data[offset + 1] & 255) << 8 |==> (data[offset + 1] & 255) >> 8
491:SOR:<<(int,int):>>>(int,int):org.apache.commons.io.EndianUtils@readSwappedUnsignedShort:144:(data[offset + 1] & 255) << 8 |==> (data[offset + 1] & 255) >>> 8
492:AOR:+(int,int):%(int,int):org.apache.commons.io.EndianUtils@readSwappedUnsignedShort:143:((data[offset + 0] & 255) << 0) + ((data[offset + 1] & 255) << 8) |==> ((data[offset + 0] & 255) << 0) % ((data[offset + 1] & 255) << 8)
493:AOR:+(int,int):*(int,int):org.apache.commons.io.EndianUtils@readSwappedUnsignedShort:143:((data[offset + 0] & 255) << 0) + ((data[offset + 1] & 255) << 8) |==> ((data[offset + 0] & 255) << 0) * ((data[offset + 1] & 255) << 8)
494:AOR:+(int,int):-(int,int):org.apache.commons.io.EndianUtils@readSwappedUnsignedShort:143:((data[offset + 0] & 255) << 0) + ((data[offset + 1] & 255) << 8) |==> ((data[offset + 0] & 255) << 0) - ((data[offset + 1] & 255) << 8)
495:AOR:+(int,int):/(int,int):org.apache.commons.io.EndianUtils@readSwappedUnsignedShort:143:((data[offset + 0] & 255) << 0) + ((data[offset + 1] & 255) << 8) |==> ((data[offset + 0] & 255) << 0) / ((data[offset + 1] & 255) << 8)
496:LVR:0:POS:org.apache.commons.io.EndianUtils@writeSwappedInteger:155:0 |==> 1
497:LVR:0:NEG:org.apache.commons.io.EndianUtils@writeSwappedInteger:155:0 |==> -1
498:AOR:+(int,int):%(int,int):org.apache.commons.io.EndianUtils@writeSwappedInteger:155:offset + 0 |==> offset % 0
499:AOR:+(int,int):*(int,int):org.apache.commons.io.EndianUtils@writeSwappedInteger:155:offset + 0 |==> offset * 0
500:AOR:+(int,int):-(int,int):org.apache.commons.io.EndianUtils@writeSwappedInteger:155:offset + 0 |==> offset - 0
501:AOR:+(int,int):/(int,int):org.apache.commons.io.EndianUtils@writeSwappedInteger:155:offset + 0 |==> offset / 0
502:LVR:0:POS:org.apache.commons.io.EndianUtils@writeSwappedInteger:155:0 |==> 1
503:LVR:0:NEG:org.apache.commons.io.EndianUtils@writeSwappedInteger:155:0 |==> -1
504:SOR:>>(int,int):<<(int,int):org.apache.commons.io.EndianUtils@writeSwappedInteger:155:value >> 0 |==> value << 0
505:SOR:>>(int,int):>>>(int,int):org.apache.commons.io.EndianUtils@writeSwappedInteger:155:value >> 0 |==> value >>> 0
506:LVR:POS:0:org.apache.commons.io.EndianUtils@writeSwappedInteger:155:255 |==> 0
507:LVR:POS:NEG:org.apache.commons.io.EndianUtils@writeSwappedInteger:155:255 |==> -255
508:LOR:&(int,int):^(int,int):org.apache.commons.io.EndianUtils@writeSwappedInteger:155:(value >> 0) & 255 |==> (value >> 0) ^ 255
509:LOR:&(int,int):|(int,int):org.apache.commons.io.EndianUtils@writeSwappedInteger:155:(value >> 0) & 255 |==> (value >> 0) | 255
510:LVR:POS:0:org.apache.commons.io.EndianUtils@writeSwappedInteger:156:1 |==> 0
511:LVR:POS:NEG:org.apache.commons.io.EndianUtils@writeSwappedInteger:156:1 |==> -1
512:AOR:+(int,int):%(int,int):org.apache.commons.io.EndianUtils@writeSwappedInteger:156:offset + 1 |==> offset % 1
513:AOR:+(int,int):*(int,int):org.apache.commons.io.EndianUtils@writeSwappedInteger:156:offset + 1 |==> offset * 1
514:AOR:+(int,int):-(int,int):org.apache.commons.io.EndianUtils@writeSwappedInteger:156:offset + 1 |==> offset - 1
515:AOR:+(int,int):/(int,int):org.apache.commons.io.EndianUtils@writeSwappedInteger:156:offset + 1 |==> offset / 1
516:LVR:POS:0:org.apache.commons.io.EndianUtils@writeSwappedInteger:156:8 |==> 0
517:LVR:POS:NEG:org.apache.commons.io.EndianUtils@writeSwappedInteger:156:8 |==> -8
518:SOR:>>(int,int):<<(int,int):org.apache.commons.io.EndianUtils@writeSwappedInteger:156:value >> 8 |==> value << 8
519:SOR:>>(int,int):>>>(int,int):org.apache.commons.io.EndianUtils@writeSwappedInteger:156:value >> 8 |==> value >>> 8
520:LVR:POS:0:org.apache.commons.io.EndianUtils@writeSwappedInteger:156:255 |==> 0
521:LVR:POS:NEG:org.apache.commons.io.EndianUtils@writeSwappedInteger:156:255 |==> -255
522:LOR:&(int,int):^(int,int):org.apache.commons.io.EndianUtils@writeSwappedInteger:156:(value >> 8) & 255 |==> (value >> 8) ^ 255
523:LOR:&(int,int):|(int,int):org.apache.commons.io.EndianUtils@writeSwappedInteger:156:(value >> 8) & 255 |==> (value >> 8) | 255
524:LVR:POS:0:org.apache.commons.io.EndianUtils@writeSwappedInteger:157:2 |==> 0
525:LVR:POS:NEG:org.apache.commons.io.EndianUtils@writeSwappedInteger:157:2 |==> -2
526:AOR:+(int,int):%(int,int):org.apache.commons.io.EndianUtils@writeSwappedInteger:157:offset + 2 |==> offset % 2
527:AOR:+(int,int):*(int,int):org.apache.commons.io.EndianUtils@writeSwappedInteger:157:offset + 2 |==> offset * 2
528:AOR:+(int,int):-(int,int):org.apache.commons.io.EndianUtils@writeSwappedInteger:157:offset + 2 |==> offset - 2
529:AOR:+(int,int):/(int,int):org.apache.commons.io.EndianUtils@writeSwappedInteger:157:offset + 2 |==> offset / 2
530:LVR:POS:0:org.apache.commons.io.EndianUtils@writeSwappedInteger:157:16 |==> 0
531:LVR:POS:NEG:org.apache.commons.io.EndianUtils@writeSwappedInteger:157:16 |==> -16
532:SOR:>>(int,int):<<(int,int):org.apache.commons.io.EndianUtils@writeSwappedInteger:157:value >> 16 |==> value << 16
533:SOR:>>(int,int):>>>(int,int):org.apache.commons.io.EndianUtils@writeSwappedInteger:157:value >> 16 |==> value >>> 16
534:LVR:POS:0:org.apache.commons.io.EndianUtils@writeSwappedInteger:157:255 |==> 0
535:LVR:POS:NEG:org.apache.commons.io.EndianUtils@writeSwappedInteger:157:255 |==> -255
536:LOR:&(int,int):^(int,int):org.apache.commons.io.EndianUtils@writeSwappedInteger:157:(value >> 16) & 255 |==> (value >> 16) ^ 255
537:LOR:&(int,int):|(int,int):org.apache.commons.io.EndianUtils@writeSwappedInteger:157:(value >> 16) & 255 |==> (value >> 16) | 255
538:LVR:POS:0:org.apache.commons.io.EndianUtils@writeSwappedInteger:158:3 |==> 0
539:LVR:POS:NEG:org.apache.commons.io.EndianUtils@writeSwappedInteger:158:3 |==> -3
540:AOR:+(int,int):%(int,int):org.apache.commons.io.EndianUtils@writeSwappedInteger:158:offset + 3 |==> offset % 3
541:AOR:+(int,int):*(int,int):org.apache.commons.io.EndianUtils@writeSwappedInteger:158:offset + 3 |==> offset * 3
542:AOR:+(int,int):-(int,int):org.apache.commons.io.EndianUtils@writeSwappedInteger:158:offset + 3 |==> offset - 3
543:AOR:+(int,int):/(int,int):org.apache.commons.io.EndianUtils@writeSwappedInteger:158:offset + 3 |==> offset / 3
544:LVR:POS:0:org.apache.commons.io.EndianUtils@writeSwappedInteger:158:24 |==> 0
545:LVR:POS:NEG:org.apache.commons.io.EndianUtils@writeSwappedInteger:158:24 |==> -24
546:SOR:>>(int,int):<<(int,int):org.apache.commons.io.EndianUtils@writeSwappedInteger:158:value >> 24 |==> value << 24
547:SOR:>>(int,int):>>>(int,int):org.apache.commons.io.EndianUtils@writeSwappedInteger:158:value >> 24 |==> value >>> 24
548:LVR:POS:0:org.apache.commons.io.EndianUtils@writeSwappedInteger:158:255 |==> 0
549:LVR:POS:NEG:org.apache.commons.io.EndianUtils@writeSwappedInteger:158:255 |==> -255
550:LOR:&(int,int):^(int,int):org.apache.commons.io.EndianUtils@writeSwappedInteger:158:(value >> 24) & 255 |==> (value >> 24) ^ 255
551:LOR:&(int,int):|(int,int):org.apache.commons.io.EndianUtils@writeSwappedInteger:158:(value >> 24) & 255 |==> (value >> 24) | 255
552:LVR:0:POS:org.apache.commons.io.EndianUtils@readSwappedInteger:169:0 |==> 1
553:LVR:0:NEG:org.apache.commons.io.EndianUtils@readSwappedInteger:169:0 |==> -1
554:AOR:+(int,int):%(int,int):org.apache.commons.io.EndianUtils@readSwappedInteger:169:offset + 0 |==> offset % 0
555:AOR:+(int,int):*(int,int):org.apache.commons.io.EndianUtils@readSwappedInteger:169:offset + 0 |==> offset * 0
556:AOR:+(int,int):-(int,int):org.apache.commons.io.EndianUtils@readSwappedInteger:169:offset + 0 |==> offset - 0
557:AOR:+(int,int):/(int,int):org.apache.commons.io.EndianUtils@readSwappedInteger:169:offset + 0 |==> offset / 0
558:LVR:POS:0:org.apache.commons.io.EndianUtils@readSwappedInteger:169:255 |==> 0
559:LVR:POS:NEG:org.apache.commons.io.EndianUtils@readSwappedInteger:169:255 |==> -255
560:LOR:&(int,int):^(int,int):org.apache.commons.io.EndianUtils@readSwappedInteger:169:data[offset + 0] & 255 |==> data[offset + 0] ^ 255
561:LOR:&(int,int):|(int,int):org.apache.commons.io.EndianUtils@readSwappedInteger:169:data[offset + 0] & 255 |==> data[offset + 0] | 255
562:LVR:0:POS:org.apache.commons.io.EndianUtils@readSwappedInteger:169:0 |==> 1
563:LVR:0:NEG:org.apache.commons.io.EndianUtils@readSwappedInteger:169:0 |==> -1
564:SOR:<<(int,int):>>(int,int):org.apache.commons.io.EndianUtils@readSwappedInteger:169:(data[offset + 0] & 255) << 0 |==> (data[offset + 0] & 255) >> 0
565:SOR:<<(int,int):>>>(int,int):org.apache.commons.io.EndianUtils@readSwappedInteger:169:(data[offset + 0] & 255) << 0 |==> (data[offset + 0] & 255) >>> 0
566:LVR:POS:0:org.apache.commons.io.EndianUtils@readSwappedInteger:170:1 |==> 0
567:LVR:POS:NEG:org.apache.commons.io.EndianUtils@readSwappedInteger:170:1 |==> -1
568:AOR:+(int,int):%(int,int):org.apache.commons.io.EndianUtils@readSwappedInteger:170:offset + 1 |==> offset % 1
569:AOR:+(int,int):*(int,int):org.apache.commons.io.EndianUtils@readSwappedInteger:170:offset + 1 |==> offset * 1
570:AOR:+(int,int):-(int,int):org.apache.commons.io.EndianUtils@readSwappedInteger:170:offset + 1 |==> offset - 1
571:AOR:+(int,int):/(int,int):org.apache.commons.io.EndianUtils@readSwappedInteger:170:offset + 1 |==> offset / 1
572:LVR:POS:0:org.apache.commons.io.EndianUtils@readSwappedInteger:170:255 |==> 0
573:LVR:POS:NEG:org.apache.commons.io.EndianUtils@readSwappedInteger:170:255 |==> -255
574:LOR:&(int,int):^(int,int):org.apache.commons.io.EndianUtils@readSwappedInteger:170:data[offset + 1] & 255 |==> data[offset + 1] ^ 255
575:LOR:&(int,int):|(int,int):org.apache.commons.io.EndianUtils@readSwappedInteger:170:data[offset + 1] & 255 |==> data[offset + 1] | 255
576:LVR:POS:0:org.apache.commons.io.EndianUtils@readSwappedInteger:170:8 |==> 0
577:LVR:POS:NEG:org.apache.commons.io.EndianUtils@readSwappedInteger:170:8 |==> -8
578:SOR:<<(int,int):>>(int,int):org.apache.commons.io.EndianUtils@readSwappedInteger:170:(data[offset + 1] & 255) << 8 |==> (data[offset + 1] & 255) >> 8
579:SOR:<<(int,int):>>>(int,int):org.apache.commons.io.EndianUtils@readSwappedInteger:170:(data[offset + 1] & 255) << 8 |==> (data[offset + 1] & 255) >>> 8
580:AOR:+(int,int):%(int,int):org.apache.commons.io.EndianUtils@readSwappedInteger:169:((data[offset + 0] & 255) << 0) + ((data[offset + 1] & 255) << 8) |==> ((data[offset + 0] & 255) << 0) % ((data[offset + 1] & 255) << 8)
581:AOR:+(int,int):*(int,int):org.apache.commons.io.EndianUtils@readSwappedInteger:169:((data[offset + 0] & 255) << 0) + ((data[offset + 1] & 255) << 8) |==> ((data[offset + 0] & 255) << 0) * ((data[offset + 1] & 255) << 8)
582:AOR:+(int,int):-(int,int):org.apache.commons.io.EndianUtils@readSwappedInteger:169:((data[offset + 0] & 255) << 0) + ((data[offset + 1] & 255) << 8) |==> ((data[offset + 0] & 255) << 0) - ((data[offset + 1] & 255) << 8)
583:AOR:+(int,int):/(int,int):org.apache.commons.io.EndianUtils@readSwappedInteger:169:((data[offset + 0] & 255) << 0) + ((data[offset + 1] & 255) << 8) |==> ((data[offset + 0] & 255) << 0) / ((data[offset + 1] & 255) << 8)
584:LVR:POS:0:org.apache.commons.io.EndianUtils@readSwappedInteger:171:2 |==> 0
585:LVR:POS:NEG:org.apache.commons.io.EndianUtils@readSwappedInteger:171:2 |==> -2
586:AOR:+(int,int):%(int,int):org.apache.commons.io.EndianUtils@readSwappedInteger:171:offset + 2 |==> offset % 2
587:AOR:+(int,int):*(int,int):org.apache.commons.io.EndianUtils@readSwappedInteger:171:offset + 2 |==> offset * 2
588:AOR:+(int,int):-(int,int):org.apache.commons.io.EndianUtils@readSwappedInteger:171:offset + 2 |==> offset - 2
589:AOR:+(int,int):/(int,int):org.apache.commons.io.EndianUtils@readSwappedInteger:171:offset + 2 |==> offset / 2
590:LVR:POS:0:org.apache.commons.io.EndianUtils@readSwappedInteger:171:255 |==> 0
591:LVR:POS:NEG:org.apache.commons.io.EndianUtils@readSwappedInteger:171:255 |==> -255
592:LOR:&(int,int):^(int,int):org.apache.commons.io.EndianUtils@readSwappedInteger:171:data[offset + 2] & 255 |==> data[offset + 2] ^ 255
593:LOR:&(int,int):|(int,int):org.apache.commons.io.EndianUtils@readSwappedInteger:171:data[offset + 2] & 255 |==> data[offset + 2] | 255
594:LVR:POS:0:org.apache.commons.io.EndianUtils@readSwappedInteger:171:16 |==> 0
595:LVR:POS:NEG:org.apache.commons.io.EndianUtils@readSwappedInteger:171:16 |==> -16
596:SOR:<<(int,int):>>(int,int):org.apache.commons.io.EndianUtils@readSwappedInteger:171:(data[offset + 2] & 255) << 16 |==> (data[offset + 2] & 255) >> 16
597:SOR:<<(int,int):>>>(int,int):org.apache.commons.io.EndianUtils@readSwappedInteger:171:(data[offset + 2] & 255) << 16 |==> (data[offset + 2] & 255) >>> 16
598:AOR:+(int,int):%(int,int):org.apache.commons.io.EndianUtils@readSwappedInteger:169:((data[offset + 0] & 255) << 0) + ((data[offset + 1] & 255) << 8) + ((data[offset + 2] & 255) << 16) |==> (((data[offset + 0] & 255) << 0) + ((data[offset + 1] & 255) << 8)) % ((data[offset + 2] & 255) << 16)
599:AOR:+(int,int):*(int,int):org.apache.commons.io.EndianUtils@readSwappedInteger:169:((data[offset + 0] & 255) << 0) + ((data[offset + 1] & 255) << 8) + ((data[offset + 2] & 255) << 16) |==> (((data[offset + 0] & 255) << 0) + ((data[offset + 1] & 255) << 8)) * ((data[offset + 2] & 255) << 16)
600:AOR:+(int,int):-(int,int):org.apache.commons.io.EndianUtils@readSwappedInteger:169:((data[offset + 0] & 255) << 0) + ((data[offset + 1] & 255) << 8) + ((data[offset + 2] & 255) << 16) |==> ((data[offset + 0] & 255) << 0) + ((data[offset + 1] & 255) << 8) - ((data[offset + 2] & 255) << 16)
601:AOR:+(int,int):/(int,int):org.apache.commons.io.EndianUtils@readSwappedInteger:169:((data[offset + 0] & 255) << 0) + ((data[offset + 1] & 255) << 8) + ((data[offset + 2] & 255) << 16) |==> (((data[offset + 0] & 255) << 0) + ((data[offset + 1] & 255) << 8)) / ((data[offset + 2] & 255) << 16)
602:LVR:POS:0:org.apache.commons.io.EndianUtils@readSwappedInteger:172:3 |==> 0
603:LVR:POS:NEG:org.apache.commons.io.EndianUtils@readSwappedInteger:172:3 |==> -3
604:AOR:+(int,int):%(int,int):org.apache.commons.io.EndianUtils@readSwappedInteger:172:offset + 3 |==> offset % 3
605:AOR:+(int,int):*(int,int):org.apache.commons.io.EndianUtils@readSwappedInteger:172:offset + 3 |==> offset * 3
606:AOR:+(int,int):-(int,int):org.apache.commons.io.EndianUtils@readSwappedInteger:172:offset + 3 |==> offset - 3
607:AOR:+(int,int):/(int,int):org.apache.commons.io.EndianUtils@readSwappedInteger:172:offset + 3 |==> offset / 3
608:LVR:POS:0:org.apache.commons.io.EndianUtils@readSwappedInteger:172:255 |==> 0
609:LVR:POS:NEG:org.apache.commons.io.EndianUtils@readSwappedInteger:172:255 |==> -255
610:LOR:&(int,int):^(int,int):org.apache.commons.io.EndianUtils@readSwappedInteger:172:data[offset + 3] & 255 |==> data[offset + 3] ^ 255
611:LOR:&(int,int):|(int,int):org.apache.commons.io.EndianUtils@readSwappedInteger:172:data[offset + 3] & 255 |==> data[offset + 3] | 255
612:LVR:POS:0:org.apache.commons.io.EndianUtils@readSwappedInteger:172:24 |==> 0
613:LVR:POS:NEG:org.apache.commons.io.EndianUtils@readSwappedInteger:172:24 |==> -24
614:SOR:<<(int,int):>>(int,int):org.apache.commons.io.EndianUtils@readSwappedInteger:172:(data[offset + 3] & 255) << 24 |==> (data[offset + 3] & 255) >> 24
615:SOR:<<(int,int):>>>(int,int):org.apache.commons.io.EndianUtils@readSwappedInteger:172:(data[offset + 3] & 255) << 24 |==> (data[offset + 3] & 255) >>> 24
616:AOR:+(int,int):%(int,int):org.apache.commons.io.EndianUtils@readSwappedInteger:169:((data[offset + 0] & 255) << 0) + ((data[offset + 1] & 255) << 8) + ((data[offset + 2] & 255) << 16) + ((data[offset + 3] & 255) << 24) |==> (((data[offset + 0] & 255) << 0) + ((data[offset + 1] & 255) << 8) + ((data[offset + 2] & 255) << 16)) % ((data[offset + 3] & 255) << 24)
617:AOR:+(int,int):*(int,int):org.apache.commons.io.EndianUtils@readSwappedInteger:169:((data[offset + 0] & 255) << 0) + ((data[offset + 1] & 255) << 8) + ((data[offset + 2] & 255) << 16) + ((data[offset + 3] & 255) << 24) |==> (((data[offset + 0] & 255) << 0) + ((data[offset + 1] & 255) << 8) + ((data[offset + 2] & 255) << 16)) * ((data[offset + 3] & 255) << 24)
618:AOR:+(int,int):-(int,int):org.apache.commons.io.EndianUtils@readSwappedInteger:169:((data[offset + 0] & 255) << 0) + ((data[offset + 1] & 255) << 8) + ((data[offset + 2] & 255) << 16) + ((data[offset + 3] & 255) << 24) |==> ((data[offset + 0] & 255) << 0) + ((data[offset + 1] & 255) << 8) + ((data[offset + 2] & 255) << 16) - ((data[offset + 3] & 255) << 24)
619:AOR:+(int,int):/(int,int):org.apache.commons.io.EndianUtils@readSwappedInteger:169:((data[offset + 0] & 255) << 0) + ((data[offset + 1] & 255) << 8) + ((data[offset + 2] & 255) << 16) + ((data[offset + 3] & 255) << 24) |==> (((data[offset + 0] & 255) << 0) + ((data[offset + 1] & 255) << 8) + ((data[offset + 2] & 255) << 16)) / ((data[offset + 3] & 255) << 24)
620:LVR:0:POS:org.apache.commons.io.EndianUtils@readSwappedUnsignedInteger:184:0 |==> 1
621:LVR:0:NEG:org.apache.commons.io.EndianUtils@readSwappedUnsignedInteger:184:0 |==> -1
622:AOR:+(int,int):%(int,int):org.apache.commons.io.EndianUtils@readSwappedUnsignedInteger:184:offset + 0 |==> offset % 0
623:AOR:+(int,int):*(int,int):org.apache.commons.io.EndianUtils@readSwappedUnsignedInteger:184:offset + 0 |==> offset * 0
624:AOR:+(int,int):-(int,int):org.apache.commons.io.EndianUtils@readSwappedUnsignedInteger:184:offset + 0 |==> offset - 0
625:AOR:+(int,int):/(int,int):org.apache.commons.io.EndianUtils@readSwappedUnsignedInteger:184:offset + 0 |==> offset / 0
626:LVR:POS:0:org.apache.commons.io.EndianUtils@readSwappedUnsignedInteger:184:255 |==> 0
627:LVR:POS:NEG:org.apache.commons.io.EndianUtils@readSwappedUnsignedInteger:184:255 |==> -255
628:LOR:&(int,int):^(int,int):org.apache.commons.io.EndianUtils@readSwappedUnsignedInteger:184:data[offset + 0] & 255 |==> data[offset + 0] ^ 255
629:LOR:&(int,int):|(int,int):org.apache.commons.io.EndianUtils@readSwappedUnsignedInteger:184:data[offset + 0] & 255 |==> data[offset + 0] | 255
630:LVR:0:POS:org.apache.commons.io.EndianUtils@readSwappedUnsignedInteger:184:0 |==> 1
631:LVR:0:NEG:org.apache.commons.io.EndianUtils@readSwappedUnsignedInteger:184:0 |==> -1
632:SOR:<<(int,int):>>(int,int):org.apache.commons.io.EndianUtils@readSwappedUnsignedInteger:184:(data[offset + 0] & 255) << 0 |==> (data[offset + 0] & 255) >> 0
633:SOR:<<(int,int):>>>(int,int):org.apache.commons.io.EndianUtils@readSwappedUnsignedInteger:184:(data[offset + 0] & 255) << 0 |==> (data[offset + 0] & 255) >>> 0
634:LVR:POS:0:org.apache.commons.io.EndianUtils@readSwappedUnsignedInteger:185:1 |==> 0
635:LVR:POS:NEG:org.apache.commons.io.EndianUtils@readSwappedUnsignedInteger:185:1 |==> -1
636:AOR:+(int,int):%(int,int):org.apache.commons.io.EndianUtils@readSwappedUnsignedInteger:185:offset + 1 |==> offset % 1
637:AOR:+(int,int):*(int,int):org.apache.commons.io.EndianUtils@readSwappedUnsignedInteger:185:offset + 1 |==> offset * 1
638:AOR:+(int,int):-(int,int):org.apache.commons.io.EndianUtils@readSwappedUnsignedInteger:185:offset + 1 |==> offset - 1
639:AOR:+(int,int):/(int,int):org.apache.commons.io.EndianUtils@readSwappedUnsignedInteger:185:offset + 1 |==> offset / 1
640:LVR:POS:0:org.apache.commons.io.EndianUtils@readSwappedUnsignedInteger:185:255 |==> 0
641:LVR:POS:NEG:org.apache.commons.io.EndianUtils@readSwappedUnsignedInteger:185:255 |==> -255
642:LOR:&(int,int):^(int,int):org.apache.commons.io.EndianUtils@readSwappedUnsignedInteger:185:data[offset + 1] & 255 |==> data[offset + 1] ^ 255
643:LOR:&(int,int):|(int,int):org.apache.commons.io.EndianUtils@readSwappedUnsignedInteger:185:data[offset + 1] & 255 |==> data[offset + 1] | 255
644:LVR:POS:0:org.apache.commons.io.EndianUtils@readSwappedUnsignedInteger:185:8 |==> 0
645:LVR:POS:NEG:org.apache.commons.io.EndianUtils@readSwappedUnsignedInteger:185:8 |==> -8
646:SOR:<<(int,int):>>(int,int):org.apache.commons.io.EndianUtils@readSwappedUnsignedInteger:185:(data[offset + 1] & 255) << 8 |==> (data[offset + 1] & 255) >> 8
647:SOR:<<(int,int):>>>(int,int):org.apache.commons.io.EndianUtils@readSwappedUnsignedInteger:185:(data[offset + 1] & 255) << 8 |==> (data[offset + 1] & 255) >>> 8
648:AOR:+(int,int):%(int,int):org.apache.commons.io.EndianUtils@readSwappedUnsignedInteger:184:((data[offset + 0] & 255) << 0) + ((data[offset + 1] & 255) << 8) |==> ((data[offset + 0] & 255) << 0) % ((data[offset + 1] & 255) << 8)
649:AOR:+(int,int):*(int,int):org.apache.commons.io.EndianUtils@readSwappedUnsignedInteger:184:((data[offset + 0] & 255) << 0) + ((data[offset + 1] & 255) << 8) |==> ((data[offset + 0] & 255) << 0) * ((data[offset + 1] & 255) << 8)
650:AOR:+(int,int):-(int,int):org.apache.commons.io.EndianUtils@readSwappedUnsignedInteger:184:((data[offset + 0] & 255) << 0) + ((data[offset + 1] & 255) << 8) |==> ((data[offset + 0] & 255) << 0) - ((data[offset + 1] & 255) << 8)
651:AOR:+(int,int):/(int,int):org.apache.commons.io.EndianUtils@readSwappedUnsignedInteger:184:((data[offset + 0] & 255) << 0) + ((data[offset + 1] & 255) << 8) |==> ((data[offset + 0] & 255) << 0) / ((data[offset + 1] & 255) << 8)
652:LVR:POS:0:org.apache.commons.io.EndianUtils@readSwappedUnsignedInteger:186:2 |==> 0
653:LVR:POS:NEG:org.apache.commons.io.EndianUtils@readSwappedUnsignedInteger:186:2 |==> -2
654:AOR:+(int,int):%(int,int):org.apache.commons.io.EndianUtils@readSwappedUnsignedInteger:186:offset + 2 |==> offset % 2
655:AOR:+(int,int):*(int,int):org.apache.commons.io.EndianUtils@readSwappedUnsignedInteger:186:offset + 2 |==> offset * 2
656:AOR:+(int,int):-(int,int):org.apache.commons.io.EndianUtils@readSwappedUnsignedInteger:186:offset + 2 |==> offset - 2
657:AOR:+(int,int):/(int,int):org.apache.commons.io.EndianUtils@readSwappedUnsignedInteger:186:offset + 2 |==> offset / 2
658:LVR:POS:0:org.apache.commons.io.EndianUtils@readSwappedUnsignedInteger:186:255 |==> 0
659:LVR:POS:NEG:org.apache.commons.io.EndianUtils@readSwappedUnsignedInteger:186:255 |==> -255
660:LOR:&(int,int):^(int,int):org.apache.commons.io.EndianUtils@readSwappedUnsignedInteger:186:data[offset + 2] & 255 |==> data[offset + 2] ^ 255
661:LOR:&(int,int):|(int,int):org.apache.commons.io.EndianUtils@readSwappedUnsignedInteger:186:data[offset + 2] & 255 |==> data[offset + 2] | 255
662:LVR:POS:0:org.apache.commons.io.EndianUtils@readSwappedUnsignedInteger:186:16 |==> 0
663:LVR:POS:NEG:org.apache.commons.io.EndianUtils@readSwappedUnsignedInteger:186:16 |==> -16
664:SOR:<<(int,int):>>(int,int):org.apache.commons.io.EndianUtils@readSwappedUnsignedInteger:186:(data[offset + 2] & 255) << 16 |==> (data[offset + 2] & 255) >> 16
665:SOR:<<(int,int):>>>(int,int):org.apache.commons.io.EndianUtils@readSwappedUnsignedInteger:186:(data[offset + 2] & 255) << 16 |==> (data[offset + 2] & 255) >>> 16
666:AOR:+(int,int):%(int,int):org.apache.commons.io.EndianUtils@readSwappedUnsignedInteger:184:((data[offset + 0] & 255) << 0) + ((data[offset + 1] & 255) << 8) + ((data[offset + 2] & 255) << 16) |==> (((data[offset + 0] & 255) << 0) + ((data[offset + 1] & 255) << 8)) % ((data[offset + 2] & 255) << 16)
667:AOR:+(int,int):*(int,int):org.apache.commons.io.EndianUtils@readSwappedUnsignedInteger:184:((data[offset + 0] & 255) << 0) + ((data[offset + 1] & 255) << 8) + ((data[offset + 2] & 255) << 16) |==> (((data[offset + 0] & 255) << 0) + ((data[offset + 1] & 255) << 8)) * ((data[offset + 2] & 255) << 16)
668:AOR:+(int,int):-(int,int):org.apache.commons.io.EndianUtils@readSwappedUnsignedInteger:184:((data[offset + 0] & 255) << 0) + ((data[offset + 1] & 255) << 8) + ((data[offset + 2] & 255) << 16) |==> ((data[offset + 0] & 255) << 0) + ((data[offset + 1] & 255) << 8) - ((data[offset + 2] & 255) << 16)
669:AOR:+(int,int):/(int,int):org.apache.commons.io.EndianUtils@readSwappedUnsignedInteger:184:((data[offset + 0] & 255) << 0) + ((data[offset + 1] & 255) << 8) + ((data[offset + 2] & 255) << 16) |==> (((data[offset + 0] & 255) << 0) + ((data[offset + 1] & 255) << 8)) / ((data[offset + 2] & 255) << 16)
670:LVR:POS:0:org.apache.commons.io.EndianUtils@readSwappedUnsignedInteger:188:3 |==> 0
671:LVR:POS:NEG:org.apache.commons.io.EndianUtils@readSwappedUnsignedInteger:188:3 |==> -3
672:AOR:+(int,int):%(int,int):org.apache.commons.io.EndianUtils@readSwappedUnsignedInteger:188:offset + 3 |==> offset % 3
673:AOR:+(int,int):*(int,int):org.apache.commons.io.EndianUtils@readSwappedUnsignedInteger:188:offset + 3 |==> offset * 3
674:AOR:+(int,int):-(int,int):org.apache.commons.io.EndianUtils@readSwappedUnsignedInteger:188:offset + 3 |==> offset - 3
675:AOR:+(int,int):/(int,int):org.apache.commons.io.EndianUtils@readSwappedUnsignedInteger:188:offset + 3 |==> offset / 3
676:LVR:POS:0:org.apache.commons.io.EndianUtils@readSwappedUnsignedInteger:188:255 |==> 0
677:LVR:POS:NEG:org.apache.commons.io.EndianUtils@readSwappedUnsignedInteger:188:255 |==> -255
678:LOR:&(int,int):^(int,int):org.apache.commons.io.EndianUtils@readSwappedUnsignedInteger:188:data[offset + 3] & 255 |==> data[offset + 3] ^ 255
679:LOR:&(int,int):|(int,int):org.apache.commons.io.EndianUtils@readSwappedUnsignedInteger:188:data[offset + 3] & 255 |==> data[offset + 3] | 255
680:LVR:POS:0:org.apache.commons.io.EndianUtils@readSwappedUnsignedInteger:190:24 |==> 0
681:LVR:POS:NEG:org.apache.commons.io.EndianUtils@readSwappedUnsignedInteger:190:24 |==> -24
682:SOR:<<(long,int):>>(long,int):org.apache.commons.io.EndianUtils@readSwappedUnsignedInteger:190:high << 24 |==> high >> 24
683:SOR:<<(long,int):>>>(long,int):org.apache.commons.io.EndianUtils@readSwappedUnsignedInteger:190:high << 24 |==> high >>> 24
684:LVR:POS:0:org.apache.commons.io.EndianUtils@readSwappedUnsignedInteger:190:4294967295L |==> 0L
685:LVR:POS:NEG:org.apache.commons.io.EndianUtils@readSwappedUnsignedInteger:190:4294967295L |==> -4294967295L
686:LOR:&(long,long):^(long,long):org.apache.commons.io.EndianUtils@readSwappedUnsignedInteger:190:4294967295L & low |==> 4294967295L ^ low
687:LOR:&(long,long):|(long,long):org.apache.commons.io.EndianUtils@readSwappedUnsignedInteger:190:4294967295L & low |==> 4294967295L | low
688:AOR:+(long,long):%(long,long):org.apache.commons.io.EndianUtils@readSwappedUnsignedInteger:190:(high << 24) + (4294967295L & low) |==> (high << 24) % (4294967295L & low)
689:AOR:+(long,long):*(long,long):org.apache.commons.io.EndianUtils@readSwappedUnsignedInteger:190:(high << 24) + (4294967295L & low) |==> (high << 24) * (4294967295L & low)
690:AOR:+(long,long):-(long,long):org.apache.commons.io.EndianUtils@readSwappedUnsignedInteger:190:(high << 24) + (4294967295L & low) |==> (high << 24) - (4294967295L & low)
691:AOR:+(long,long):/(long,long):org.apache.commons.io.EndianUtils@readSwappedUnsignedInteger:190:(high << 24) + (4294967295L & low) |==> (high << 24) / (4294967295L & low)
692:LVR:0:POS:org.apache.commons.io.EndianUtils@writeSwappedLong:201:0 |==> 1
693:LVR:0:NEG:org.apache.commons.io.EndianUtils@writeSwappedLong:201:0 |==> -1
694:AOR:+(int,int):%(int,int):org.apache.commons.io.EndianUtils@writeSwappedLong:201:offset + 0 |==> offset % 0
695:AOR:+(int,int):*(int,int):org.apache.commons.io.EndianUtils@writeSwappedLong:201:offset + 0 |==> offset * 0
696:AOR:+(int,int):-(int,int):org.apache.commons.io.EndianUtils@writeSwappedLong:201:offset + 0 |==> offset - 0
697:AOR:+(int,int):/(int,int):org.apache.commons.io.EndianUtils@writeSwappedLong:201:offset + 0 |==> offset / 0
698:LVR:0:POS:org.apache.commons.io.EndianUtils@writeSwappedLong:201:0 |==> 1
699:LVR:0:NEG:org.apache.commons.io.EndianUtils@writeSwappedLong:201:0 |==> -1
700:SOR:>>(long,int):<<(long,int):org.apache.commons.io.EndianUtils@writeSwappedLong:201:value >> 0 |==> value << 0
701:SOR:>>(long,int):>>>(long,int):org.apache.commons.io.EndianUtils@writeSwappedLong:201:value >> 0 |==> value >>> 0
702:LVR:POS:0:org.apache.commons.io.EndianUtils@writeSwappedLong:201:255 |==> 0
703:LVR:POS:NEG:org.apache.commons.io.EndianUtils@writeSwappedLong:201:255 |==> -255
704:LOR:&(long,long):^(long,long):org.apache.commons.io.EndianUtils@writeSwappedLong:201:(value >> 0) & 255 |==> (value >> 0) ^ 255
705:LOR:&(long,long):|(long,long):org.apache.commons.io.EndianUtils@writeSwappedLong:201:(value >> 0) & 255 |==> (value >> 0) | 255
706:LVR:POS:0:org.apache.commons.io.EndianUtils@writeSwappedLong:202:1 |==> 0
707:LVR:POS:NEG:org.apache.commons.io.EndianUtils@writeSwappedLong:202:1 |==> -1
708:AOR:+(int,int):%(int,int):org.apache.commons.io.EndianUtils@writeSwappedLong:202:offset + 1 |==> offset % 1
709:AOR:+(int,int):*(int,int):org.apache.commons.io.EndianUtils@writeSwappedLong:202:offset + 1 |==> offset * 1
710:AOR:+(int,int):-(int,int):org.apache.commons.io.EndianUtils@writeSwappedLong:202:offset + 1 |==> offset - 1
711:AOR:+(int,int):/(int,int):org.apache.commons.io.EndianUtils@writeSwappedLong:202:offset + 1 |==> offset / 1
712:LVR:POS:0:org.apache.commons.io.EndianUtils@writeSwappedLong:202:8 |==> 0
713:LVR:POS:NEG:org.apache.commons.io.EndianUtils@writeSwappedLong:202:8 |==> -8
714:SOR:>>(long,int):<<(long,int):org.apache.commons.io.EndianUtils@writeSwappedLong:202:value >> 8 |==> value << 8
715:SOR:>>(long,int):>>>(long,int):org.apache.commons.io.EndianUtils@writeSwappedLong:202:value >> 8 |==> value >>> 8
716:LVR:POS:0:org.apache.commons.io.EndianUtils@writeSwappedLong:202:255 |==> 0
717:LVR:POS:NEG:org.apache.commons.io.EndianUtils@writeSwappedLong:202:255 |==> -255
718:LOR:&(long,long):^(long,long):org.apache.commons.io.EndianUtils@writeSwappedLong:202:(value >> 8) & 255 |==> (value >> 8) ^ 255
719:LOR:&(long,long):|(long,long):org.apache.commons.io.EndianUtils@writeSwappedLong:202:(value >> 8) & 255 |==> (value >> 8) | 255
720:LVR:POS:0:org.apache.commons.io.EndianUtils@writeSwappedLong:203:2 |==> 0
721:LVR:POS:NEG:org.apache.commons.io.EndianUtils@writeSwappedLong:203:2 |==> -2
722:AOR:+(int,int):%(int,int):org.apache.commons.io.EndianUtils@writeSwappedLong:203:offset + 2 |==> offset % 2
723:AOR:+(int,int):*(int,int):org.apache.commons.io.EndianUtils@writeSwappedLong:203:offset + 2 |==> offset * 2
724:AOR:+(int,int):-(int,int):org.apache.commons.io.EndianUtils@writeSwappedLong:203:offset + 2 |==> offset - 2
725:AOR:+(int,int):/(int,int):org.apache.commons.io.EndianUtils@writeSwappedLong:203:offset + 2 |==> offset / 2
726:LVR:POS:0:org.apache.commons.io.EndianUtils@writeSwappedLong:203:16 |==> 0
727:LVR:POS:NEG:org.apache.commons.io.EndianUtils@writeSwappedLong:203:16 |==> -16
728:SOR:>>(long,int):<<(long,int):org.apache.commons.io.EndianUtils@writeSwappedLong:203:value >> 16 |==> value << 16
729:SOR:>>(long,int):>>>(long,int):org.apache.commons.io.EndianUtils@writeSwappedLong:203:value >> 16 |==> value >>> 16
730:LVR:POS:0:org.apache.commons.io.EndianUtils@writeSwappedLong:203:255 |==> 0
731:LVR:POS:NEG:org.apache.commons.io.EndianUtils@writeSwappedLong:203:255 |==> -255
732:LOR:&(long,long):^(long,long):org.apache.commons.io.EndianUtils@writeSwappedLong:203:(value >> 16) & 255 |==> (value >> 16) ^ 255
733:LOR:&(long,long):|(long,long):org.apache.commons.io.EndianUtils@writeSwappedLong:203:(value >> 16) & 255 |==> (value >> 16) | 255
734:LVR:POS:0:org.apache.commons.io.EndianUtils@writeSwappedLong:204:3 |==> 0
735:LVR:POS:NEG:org.apache.commons.io.EndianUtils@writeSwappedLong:204:3 |==> -3
736:AOR:+(int,int):%(int,int):org.apache.commons.io.EndianUtils@writeSwappedLong:204:offset + 3 |==> offset % 3
737:AOR:+(int,int):*(int,int):org.apache.commons.io.EndianUtils@writeSwappedLong:204:offset + 3 |==> offset * 3
738:AOR:+(int,int):-(int,int):org.apache.commons.io.EndianUtils@writeSwappedLong:204:offset + 3 |==> offset - 3
739:AOR:+(int,int):/(int,int):org.apache.commons.io.EndianUtils@writeSwappedLong:204:offset + 3 |==> offset / 3
740:LVR:POS:0:org.apache.commons.io.EndianUtils@writeSwappedLong:204:24 |==> 0
741:LVR:POS:NEG:org.apache.commons.io.EndianUtils@writeSwappedLong:204:24 |==> -24
742:SOR:>>(long,int):<<(long,int):org.apache.commons.io.EndianUtils@writeSwappedLong:204:value >> 24 |==> value << 24
743:SOR:>>(long,int):>>>(long,int):org.apache.commons.io.EndianUtils@writeSwappedLong:204:value >> 24 |==> value >>> 24
744:LVR:POS:0:org.apache.commons.io.EndianUtils@writeSwappedLong:204:255 |==> 0
745:LVR:POS:NEG:org.apache.commons.io.EndianUtils@writeSwappedLong:204:255 |==> -255
746:LOR:&(long,long):^(long,long):org.apache.commons.io.EndianUtils@writeSwappedLong:204:(value >> 24) & 255 |==> (value >> 24) ^ 255
747:LOR:&(long,long):|(long,long):org.apache.commons.io.EndianUtils@writeSwappedLong:204:(value >> 24) & 255 |==> (value >> 24) | 255
748:LVR:POS:0:org.apache.commons.io.EndianUtils@writeSwappedLong:205:4 |==> 0
749:LVR:POS:NEG:org.apache.commons.io.EndianUtils@writeSwappedLong:205:4 |==> -4
750:AOR:+(int,int):%(int,int):org.apache.commons.io.EndianUtils@writeSwappedLong:205:offset + 4 |==> offset % 4
751:AOR:+(int,int):*(int,int):org.apache.commons.io.EndianUtils@writeSwappedLong:205:offset + 4 |==> offset * 4
752:AOR:+(int,int):-(int,int):org.apache.commons.io.EndianUtils@writeSwappedLong:205:offset + 4 |==> offset - 4
753:AOR:+(int,int):/(int,int):org.apache.commons.io.EndianUtils@writeSwappedLong:205:offset + 4 |==> offset / 4
754:LVR:POS:0:org.apache.commons.io.EndianUtils@writeSwappedLong:205:32 |==> 0
755:LVR:POS:NEG:org.apache.commons.io.EndianUtils@writeSwappedLong:205:32 |==> -32
756:SOR:>>(long,int):<<(long,int):org.apache.commons.io.EndianUtils@writeSwappedLong:205:value >> 32 |==> value << 32
757:SOR:>>(long,int):>>>(long,int):org.apache.commons.io.EndianUtils@writeSwappedLong:205:value >> 32 |==> value >>> 32
758:LVR:POS:0:org.apache.commons.io.EndianUtils@writeSwappedLong:205:255 |==> 0
759:LVR:POS:NEG:org.apache.commons.io.EndianUtils@writeSwappedLong:205:255 |==> -255
760:LOR:&(long,long):^(long,long):org.apache.commons.io.EndianUtils@writeSwappedLong:205:(value >> 32) & 255 |==> (value >> 32) ^ 255
761:LOR:&(long,long):|(long,long):org.apache.commons.io.EndianUtils@writeSwappedLong:205:(value >> 32) & 255 |==> (value >> 32) | 255
762:LVR:POS:0:org.apache.commons.io.EndianUtils@writeSwappedLong:206:5 |==> 0
763:LVR:POS:NEG:org.apache.commons.io.EndianUtils@writeSwappedLong:206:5 |==> -5
764:AOR:+(int,int):%(int,int):org.apache.commons.io.EndianUtils@writeSwappedLong:206:offset + 5 |==> offset % 5
765:AOR:+(int,int):*(int,int):org.apache.commons.io.EndianUtils@writeSwappedLong:206:offset + 5 |==> offset * 5
766:AOR:+(int,int):-(int,int):org.apache.commons.io.EndianUtils@writeSwappedLong:206:offset + 5 |==> offset - 5
767:AOR:+(int,int):/(int,int):org.apache.commons.io.EndianUtils@writeSwappedLong:206:offset + 5 |==> offset / 5
768:LVR:POS:0:org.apache.commons.io.EndianUtils@writeSwappedLong:206:40 |==> 0
769:LVR:POS:NEG:org.apache.commons.io.EndianUtils@writeSwappedLong:206:40 |==> -40
770:SOR:>>(long,int):<<(long,int):org.apache.commons.io.EndianUtils@writeSwappedLong:206:value >> 40 |==> value << 40
771:SOR:>>(long,int):>>>(long,int):org.apache.commons.io.EndianUtils@writeSwappedLong:206:value >> 40 |==> value >>> 40
772:LVR:POS:0:org.apache.commons.io.EndianUtils@writeSwappedLong:206:255 |==> 0
773:LVR:POS:NEG:org.apache.commons.io.EndianUtils@writeSwappedLong:206:255 |==> -255
774:LOR:&(long,long):^(long,long):org.apache.commons.io.EndianUtils@writeSwappedLong:206:(value >> 40) & 255 |==> (value >> 40) ^ 255
775:LOR:&(long,long):|(long,long):org.apache.commons.io.EndianUtils@writeSwappedLong:206:(value >> 40) & 255 |==> (value >> 40) | 255
776:LVR:POS:0:org.apache.commons.io.EndianUtils@writeSwappedLong:207:6 |==> 0
777:LVR:POS:NEG:org.apache.commons.io.EndianUtils@writeSwappedLong:207:6 |==> -6
778:AOR:+(int,int):%(int,int):org.apache.commons.io.EndianUtils@writeSwappedLong:207:offset + 6 |==> offset % 6
779:AOR:+(int,int):*(int,int):org.apache.commons.io.EndianUtils@writeSwappedLong:207:offset + 6 |==> offset * 6
780:AOR:+(int,int):-(int,int):org.apache.commons.io.EndianUtils@writeSwappedLong:207:offset + 6 |==> offset - 6
781:AOR:+(int,int):/(int,int):org.apache.commons.io.EndianUtils@writeSwappedLong:207:offset + 6 |==> offset / 6
782:LVR:POS:0:org.apache.commons.io.EndianUtils@writeSwappedLong:207:48 |==> 0
783:LVR:POS:NEG:org.apache.commons.io.EndianUtils@writeSwappedLong:207:48 |==> -48
784:SOR:>>(long,int):<<(long,int):org.apache.commons.io.EndianUtils@writeSwappedLong:207:value >> 48 |==> value << 48
785:SOR:>>(long,int):>>>(long,int):org.apache.commons.io.EndianUtils@writeSwappedLong:207:value >> 48 |==> value >>> 48
786:LVR:POS:0:org.apache.commons.io.EndianUtils@writeSwappedLong:207:255 |==> 0
787:LVR:POS:NEG:org.apache.commons.io.EndianUtils@writeSwappedLong:207:255 |==> -255
788:LOR:&(long,long):^(long,long):org.apache.commons.io.EndianUtils@writeSwappedLong:207:(value >> 48) & 255 |==> (value >> 48) ^ 255
789:LOR:&(long,long):|(long,long):org.apache.commons.io.EndianUtils@writeSwappedLong:207:(value >> 48) & 255 |==> (value >> 48) | 255
790:LVR:POS:0:org.apache.commons.io.EndianUtils@writeSwappedLong:208:7 |==> 0
791:LVR:POS:NEG:org.apache.commons.io.EndianUtils@writeSwappedLong:208:7 |==> -7
792:AOR:+(int,int):%(int,int):org.apache.commons.io.EndianUtils@writeSwappedLong:208:offset + 7 |==> offset % 7
793:AOR:+(int,int):*(int,int):org.apache.commons.io.EndianUtils@writeSwappedLong:208:offset + 7 |==> offset * 7
794:AOR:+(int,int):-(int,int):org.apache.commons.io.EndianUtils@writeSwappedLong:208:offset + 7 |==> offset - 7
795:AOR:+(int,int):/(int,int):org.apache.commons.io.EndianUtils@writeSwappedLong:208:offset + 7 |==> offset / 7
796:LVR:POS:0:org.apache.commons.io.EndianUtils@writeSwappedLong:208:56 |==> 0
797:LVR:POS:NEG:org.apache.commons.io.EndianUtils@writeSwappedLong:208:56 |==> -56
798:SOR:>>(long,int):<<(long,int):org.apache.commons.io.EndianUtils@writeSwappedLong:208:value >> 56 |==> value << 56
799:SOR:>>(long,int):>>>(long,int):org.apache.commons.io.EndianUtils@writeSwappedLong:208:value >> 56 |==> value >>> 56
800:LVR:POS:0:org.apache.commons.io.EndianUtils@writeSwappedLong:208:255 |==> 0
801:LVR:POS:NEG:org.apache.commons.io.EndianUtils@writeSwappedLong:208:255 |==> -255
802:LOR:&(long,long):^(long,long):org.apache.commons.io.EndianUtils@writeSwappedLong:208:(value >> 56) & 255 |==> (value >> 56) ^ 255
803:LOR:&(long,long):|(long,long):org.apache.commons.io.EndianUtils@writeSwappedLong:208:(value >> 56) & 255 |==> (value >> 56) | 255
804:LVR:0:POS:org.apache.commons.io.EndianUtils@readSwappedLong:220:0 |==> 1
805:LVR:0:NEG:org.apache.commons.io.EndianUtils@readSwappedLong:220:0 |==> -1
806:AOR:+(int,int):%(int,int):org.apache.commons.io.EndianUtils@readSwappedLong:220:offset + 0 |==> offset % 0
807:AOR:+(int,int):*(int,int):org.apache.commons.io.EndianUtils@readSwappedLong:220:offset + 0 |==> offset * 0
808:AOR:+(int,int):-(int,int):org.apache.commons.io.EndianUtils@readSwappedLong:220:offset + 0 |==> offset - 0
809:AOR:+(int,int):/(int,int):org.apache.commons.io.EndianUtils@readSwappedLong:220:offset + 0 |==> offset / 0
810:LVR:POS:0:org.apache.commons.io.EndianUtils@readSwappedLong:220:255 |==> 0
811:LVR:POS:NEG:org.apache.commons.io.EndianUtils@readSwappedLong:220:255 |==> -255
812:LOR:&(int,int):^(int,int):org.apache.commons.io.EndianUtils@readSwappedLong:220:data[offset + 0] & 255 |==> data[offset + 0] ^ 255
813:LOR:&(int,int):|(int,int):org.apache.commons.io.EndianUtils@readSwappedLong:220:data[offset + 0] & 255 |==> data[offset + 0] | 255
814:LVR:0:POS:org.apache.commons.io.EndianUtils@readSwappedLong:220:0 |==> 1
815:LVR:0:NEG:org.apache.commons.io.EndianUtils@readSwappedLong:220:0 |==> -1
816:SOR:<<(int,int):>>(int,int):org.apache.commons.io.EndianUtils@readSwappedLong:220:(data[offset + 0] & 255) << 0 |==> (data[offset + 0] & 255) >> 0
817:SOR:<<(int,int):>>>(int,int):org.apache.commons.io.EndianUtils@readSwappedLong:220:(data[offset + 0] & 255) << 0 |==> (data[offset + 0] & 255) >>> 0
818:LVR:POS:0:org.apache.commons.io.EndianUtils@readSwappedLong:221:1 |==> 0
819:LVR:POS:NEG:org.apache.commons.io.EndianUtils@readSwappedLong:221:1 |==> -1
820:AOR:+(int,int):%(int,int):org.apache.commons.io.EndianUtils@readSwappedLong:221:offset + 1 |==> offset % 1
821:AOR:+(int,int):*(int,int):org.apache.commons.io.EndianUtils@readSwappedLong:221:offset + 1 |==> offset * 1
822:AOR:+(int,int):-(int,int):org.apache.commons.io.EndianUtils@readSwappedLong:221:offset + 1 |==> offset - 1
823:AOR:+(int,int):/(int,int):org.apache.commons.io.EndianUtils@readSwappedLong:221:offset + 1 |==> offset / 1
824:LVR:POS:0:org.apache.commons.io.EndianUtils@readSwappedLong:221:255 |==> 0
825:LVR:POS:NEG:org.apache.commons.io.EndianUtils@readSwappedLong:221:255 |==> -255
826:LOR:&(int,int):^(int,int):org.apache.commons.io.EndianUtils@readSwappedLong:221:data[offset + 1] & 255 |==> data[offset + 1] ^ 255
827:LOR:&(int,int):|(int,int):org.apache.commons.io.EndianUtils@readSwappedLong:221:data[offset + 1] & 255 |==> data[offset + 1] | 255
828:LVR:POS:0:org.apache.commons.io.EndianUtils@readSwappedLong:221:8 |==> 0
829:LVR:POS:NEG:org.apache.commons.io.EndianUtils@readSwappedLong:221:8 |==> -8
830:SOR:<<(int,int):>>(int,int):org.apache.commons.io.EndianUtils@readSwappedLong:221:(data[offset + 1] & 255) << 8 |==> (data[offset + 1] & 255) >> 8
831:SOR:<<(int,int):>>>(int,int):org.apache.commons.io.EndianUtils@readSwappedLong:221:(data[offset + 1] & 255) << 8 |==> (data[offset + 1] & 255) >>> 8
832:AOR:+(int,int):%(int,int):org.apache.commons.io.EndianUtils@readSwappedLong:220:((data[offset + 0] & 255) << 0) + ((data[offset + 1] & 255) << 8) |==> ((data[offset + 0] & 255) << 0) % ((data[offset + 1] & 255) << 8)
833:AOR:+(int,int):*(int,int):org.apache.commons.io.EndianUtils@readSwappedLong:220:((data[offset + 0] & 255) << 0) + ((data[offset + 1] & 255) << 8) |==> ((data[offset + 0] & 255) << 0) * ((data[offset + 1] & 255) << 8)
834:AOR:+(int,int):-(int,int):org.apache.commons.io.EndianUtils@readSwappedLong:220:((data[offset + 0] & 255) << 0) + ((data[offset + 1] & 255) << 8) |==> ((data[offset + 0] & 255) << 0) - ((data[offset + 1] & 255) << 8)
835:AOR:+(int,int):/(int,int):org.apache.commons.io.EndianUtils@readSwappedLong:220:((data[offset + 0] & 255) << 0) + ((data[offset + 1] & 255) << 8) |==> ((data[offset + 0] & 255) << 0) / ((data[offset + 1] & 255) << 8)
836:LVR:POS:0:org.apache.commons.io.EndianUtils@readSwappedLong:222:2 |==> 0
837:LVR:POS:NEG:org.apache.commons.io.EndianUtils@readSwappedLong:222:2 |==> -2
838:AOR:+(int,int):%(int,int):org.apache.commons.io.EndianUtils@readSwappedLong:222:offset + 2 |==> offset % 2
839:AOR:+(int,int):*(int,int):org.apache.commons.io.EndianUtils@readSwappedLong:222:offset + 2 |==> offset * 2
840:AOR:+(int,int):-(int,int):org.apache.commons.io.EndianUtils@readSwappedLong:222:offset + 2 |==> offset - 2
841:AOR:+(int,int):/(int,int):org.apache.commons.io.EndianUtils@readSwappedLong:222:offset + 2 |==> offset / 2
842:LVR:POS:0:org.apache.commons.io.EndianUtils@readSwappedLong:222:255 |==> 0
843:LVR:POS:NEG:org.apache.commons.io.EndianUtils@readSwappedLong:222:255 |==> -255
844:LOR:&(int,int):^(int,int):org.apache.commons.io.EndianUtils@readSwappedLong:222:data[offset + 2] & 255 |==> data[offset + 2] ^ 255
845:LOR:&(int,int):|(int,int):org.apache.commons.io.EndianUtils@readSwappedLong:222:data[offset + 2] & 255 |==> data[offset + 2] | 255
846:LVR:POS:0:org.apache.commons.io.EndianUtils@readSwappedLong:222:16 |==> 0
847:LVR:POS:NEG:org.apache.commons.io.EndianUtils@readSwappedLong:222:16 |==> -16
848:SOR:<<(int,int):>>(int,int):org.apache.commons.io.EndianUtils@readSwappedLong:222:(data[offset + 2] & 255) << 16 |==> (data[offset + 2] & 255) >> 16
849:SOR:<<(int,int):>>>(int,int):org.apache.commons.io.EndianUtils@readSwappedLong:222:(data[offset + 2] & 255) << 16 |==> (data[offset + 2] & 255) >>> 16
850:AOR:+(int,int):%(int,int):org.apache.commons.io.EndianUtils@readSwappedLong:220:((data[offset + 0] & 255) << 0) + ((data[offset + 1] & 255) << 8) + ((data[offset + 2] & 255) << 16) |==> (((data[offset + 0] & 255) << 0) + ((data[offset + 1] & 255) << 8)) % ((data[offset + 2] & 255) << 16)
851:AOR:+(int,int):*(int,int):org.apache.commons.io.EndianUtils@readSwappedLong:220:((data[offset + 0] & 255) << 0) + ((data[offset + 1] & 255) << 8) + ((data[offset + 2] & 255) << 16) |==> (((data[offset + 0] & 255) << 0) + ((data[offset + 1] & 255) << 8)) * ((data[offset + 2] & 255) << 16)
852:AOR:+(int,int):-(int,int):org.apache.commons.io.EndianUtils@readSwappedLong:220:((data[offset + 0] & 255) << 0) + ((data[offset + 1] & 255) << 8) + ((data[offset + 2] & 255) << 16) |==> ((data[offset + 0] & 255) << 0) + ((data[offset + 1] & 255) << 8) - ((data[offset + 2] & 255) << 16)
853:AOR:+(int,int):/(int,int):org.apache.commons.io.EndianUtils@readSwappedLong:220:((data[offset + 0] & 255) << 0) + ((data[offset + 1] & 255) << 8) + ((data[offset + 2] & 255) << 16) |==> (((data[offset + 0] & 255) << 0) + ((data[offset + 1] & 255) << 8)) / ((data[offset + 2] & 255) << 16)
854:LVR:POS:0:org.apache.commons.io.EndianUtils@readSwappedLong:223:3 |==> 0
855:LVR:POS:NEG:org.apache.commons.io.EndianUtils@readSwappedLong:223:3 |==> -3
856:AOR:+(int,int):%(int,int):org.apache.commons.io.EndianUtils@readSwappedLong:223:offset + 3 |==> offset % 3
857:AOR:+(int,int):*(int,int):org.apache.commons.io.EndianUtils@readSwappedLong:223:offset + 3 |==> offset * 3
858:AOR:+(int,int):-(int,int):org.apache.commons.io.EndianUtils@readSwappedLong:223:offset + 3 |==> offset - 3
859:AOR:+(int,int):/(int,int):org.apache.commons.io.EndianUtils@readSwappedLong:223:offset + 3 |==> offset / 3
860:LVR:POS:0:org.apache.commons.io.EndianUtils@readSwappedLong:223:255 |==> 0
861:LVR:POS:NEG:org.apache.commons.io.EndianUtils@readSwappedLong:223:255 |==> -255
862:LOR:&(int,int):^(int,int):org.apache.commons.io.EndianUtils@readSwappedLong:223:data[offset + 3] & 255 |==> data[offset + 3] ^ 255
863:LOR:&(int,int):|(int,int):org.apache.commons.io.EndianUtils@readSwappedLong:223:data[offset + 3] & 255 |==> data[offset + 3] | 255
864:LVR:POS:0:org.apache.commons.io.EndianUtils@readSwappedLong:223:24 |==> 0
865:LVR:POS:NEG:org.apache.commons.io.EndianUtils@readSwappedLong:223:24 |==> -24
866:SOR:<<(int,int):>>(int,int):org.apache.commons.io.EndianUtils@readSwappedLong:223:(data[offset + 3] & 255) << 24 |==> (data[offset + 3] & 255) >> 24
867:SOR:<<(int,int):>>>(int,int):org.apache.commons.io.EndianUtils@readSwappedLong:223:(data[offset + 3] & 255) << 24 |==> (data[offset + 3] & 255) >>> 24
868:AOR:+(int,int):%(int,int):org.apache.commons.io.EndianUtils@readSwappedLong:220:((data[offset + 0] & 255) << 0) + ((data[offset + 1] & 255) << 8) + ((data[offset + 2] & 255) << 16) + ((data[offset + 3] & 255) << 24) |==> (((data[offset + 0] & 255) << 0) + ((data[offset + 1] & 255) << 8) + ((data[offset + 2] & 255) << 16)) % ((data[offset + 3] & 255) << 24)
869:AOR:+(int,int):*(int,int):org.apache.commons.io.EndianUtils@readSwappedLong:220:((data[offset + 0] & 255) << 0) + ((data[offset + 1] & 255) << 8) + ((data[offset + 2] & 255) << 16) + ((data[offset + 3] & 255) << 24) |==> (((data[offset + 0] & 255) << 0) + ((data[offset + 1] & 255) << 8) + ((data[offset + 2] & 255) << 16)) * ((data[offset + 3] & 255) << 24)
870:AOR:+(int,int):-(int,int):org.apache.commons.io.EndianUtils@readSwappedLong:220:((data[offset + 0] & 255) << 0) + ((data[offset + 1] & 255) << 8) + ((data[offset + 2] & 255) << 16) + ((data[offset + 3] & 255) << 24) |==> ((data[offset + 0] & 255) << 0) + ((data[offset + 1] & 255) << 8) + ((data[offset + 2] & 255) << 16) - ((data[offset + 3] & 255) << 24)
871:AOR:+(int,int):/(int,int):org.apache.commons.io.EndianUtils@readSwappedLong:220:((data[offset + 0] & 255) << 0) + ((data[offset + 1] & 255) << 8) + ((data[offset + 2] & 255) << 16) + ((data[offset + 3] & 255) << 24) |==> (((data[offset + 0] & 255) << 0) + ((data[offset + 1] & 255) << 8) + ((data[offset + 2] & 255) << 16)) / ((data[offset + 3] & 255) << 24)
872:LVR:POS:0:org.apache.commons.io.EndianUtils@readSwappedLong:225:4 |==> 0
873:LVR:POS:NEG:org.apache.commons.io.EndianUtils@readSwappedLong:225:4 |==> -4
874:AOR:+(int,int):%(int,int):org.apache.commons.io.EndianUtils@readSwappedLong:225:offset + 4 |==> offset % 4
875:AOR:+(int,int):*(int,int):org.apache.commons.io.EndianUtils@readSwappedLong:225:offset + 4 |==> offset * 4
876:AOR:+(int,int):-(int,int):org.apache.commons.io.EndianUtils@readSwappedLong:225:offset + 4 |==> offset - 4
877:AOR:+(int,int):/(int,int):org.apache.commons.io.EndianUtils@readSwappedLong:225:offset + 4 |==> offset / 4
878:LVR:POS:0:org.apache.commons.io.EndianUtils@readSwappedLong:225:255 |==> 0
879:LVR:POS:NEG:org.apache.commons.io.EndianUtils@readSwappedLong:225:255 |==> -255
880:LOR:&(int,int):^(int,int):org.apache.commons.io.EndianUtils@readSwappedLong:225:data[offset + 4] & 255 |==> data[offset + 4] ^ 255
881:LOR:&(int,int):|(int,int):org.apache.commons.io.EndianUtils@readSwappedLong:225:data[offset + 4] & 255 |==> data[offset + 4] | 255
882:LVR:0:POS:org.apache.commons.io.EndianUtils@readSwappedLong:225:0 |==> 1
883:LVR:0:NEG:org.apache.commons.io.EndianUtils@readSwappedLong:225:0 |==> -1
884:SOR:<<(int,int):>>(int,int):org.apache.commons.io.EndianUtils@readSwappedLong:225:(data[offset + 4] & 255) << 0 |==> (data[offset + 4] & 255) >> 0
885:SOR:<<(int,int):>>>(int,int):org.apache.commons.io.EndianUtils@readSwappedLong:225:(data[offset + 4] & 255) << 0 |==> (data[offset + 4] & 255) >>> 0
886:LVR:POS:0:org.apache.commons.io.EndianUtils@readSwappedLong:226:5 |==> 0
887:LVR:POS:NEG:org.apache.commons.io.EndianUtils@readSwappedLong:226:5 |==> -5
888:AOR:+(int,int):%(int,int):org.apache.commons.io.EndianUtils@readSwappedLong:226:offset + 5 |==> offset % 5
889:AOR:+(int,int):*(int,int):org.apache.commons.io.EndianUtils@readSwappedLong:226:offset + 5 |==> offset * 5
890:AOR:+(int,int):-(int,int):org.apache.commons.io.EndianUtils@readSwappedLong:226:offset + 5 |==> offset - 5
891:AOR:+(int,int):/(int,int):org.apache.commons.io.EndianUtils@readSwappedLong:226:offset + 5 |==> offset / 5
892:LVR:POS:0:org.apache.commons.io.EndianUtils@readSwappedLong:226:255 |==> 0
893:LVR:POS:NEG:org.apache.commons.io.EndianUtils@readSwappedLong:226:255 |==> -255
894:LOR:&(int,int):^(int,int):org.apache.commons.io.EndianUtils@readSwappedLong:226:data[offset + 5] & 255 |==> data[offset + 5] ^ 255
895:LOR:&(int,int):|(int,int):org.apache.commons.io.EndianUtils@readSwappedLong:226:data[offset + 5] & 255 |==> data[offset + 5] | 255
896:LVR:POS:0:org.apache.commons.io.EndianUtils@readSwappedLong:226:8 |==> 0
897:LVR:POS:NEG:org.apache.commons.io.EndianUtils@readSwappedLong:226:8 |==> -8
898:SOR:<<(int,int):>>(int,int):org.apache.commons.io.EndianUtils@readSwappedLong:226:(data[offset + 5] & 255) << 8 |==> (data[offset + 5] & 255) >> 8
899:SOR:<<(int,int):>>>(int,int):org.apache.commons.io.EndianUtils@readSwappedLong:226:(data[offset + 5] & 255) << 8 |==> (data[offset + 5] & 255) >>> 8
900:AOR:+(int,int):%(int,int):org.apache.commons.io.EndianUtils@readSwappedLong:225:((data[offset + 4] & 255) << 0) + ((data[offset + 5] & 255) << 8) |==> ((data[offset + 4] & 255) << 0) % ((data[offset + 5] & 255) << 8)
901:AOR:+(int,int):*(int,int):org.apache.commons.io.EndianUtils@readSwappedLong:225:((data[offset + 4] & 255) << 0) + ((data[offset + 5] & 255) << 8) |==> ((data[offset + 4] & 255) << 0) * ((data[offset + 5] & 255) << 8)
902:AOR:+(int,int):-(int,int):org.apache.commons.io.EndianUtils@readSwappedLong:225:((data[offset + 4] & 255) << 0) + ((data[offset + 5] & 255) << 8) |==> ((data[offset + 4] & 255) << 0) - ((data[offset + 5] & 255) << 8)
903:AOR:+(int,int):/(int,int):org.apache.commons.io.EndianUtils@readSwappedLong:225:((data[offset + 4] & 255) << 0) + ((data[offset + 5] & 255) << 8) |==> ((data[offset + 4] & 255) << 0) / ((data[offset + 5] & 255) << 8)
904:LVR:POS:0:org.apache.commons.io.EndianUtils@readSwappedLong:227:6 |==> 0
905:LVR:POS:NEG:org.apache.commons.io.EndianUtils@readSwappedLong:227:6 |==> -6
906:AOR:+(int,int):%(int,int):org.apache.commons.io.EndianUtils@readSwappedLong:227:offset + 6 |==> offset % 6
907:AOR:+(int,int):*(int,int):org.apache.commons.io.EndianUtils@readSwappedLong:227:offset + 6 |==> offset * 6
908:AOR:+(int,int):-(int,int):org.apache.commons.io.EndianUtils@readSwappedLong:227:offset + 6 |==> offset - 6
909:AOR:+(int,int):/(int,int):org.apache.commons.io.EndianUtils@readSwappedLong:227:offset + 6 |==> offset / 6
910:LVR:POS:0:org.apache.commons.io.EndianUtils@readSwappedLong:227:255 |==> 0
911:LVR:POS:NEG:org.apache.commons.io.EndianUtils@readSwappedLong:227:255 |==> -255
912:LOR:&(int,int):^(int,int):org.apache.commons.io.EndianUtils@readSwappedLong:227:data[offset + 6] & 255 |==> data[offset + 6] ^ 255
913:LOR:&(int,int):|(int,int):org.apache.commons.io.EndianUtils@readSwappedLong:227:data[offset + 6] & 255 |==> data[offset + 6] | 255
914:LVR:POS:0:org.apache.commons.io.EndianUtils@readSwappedLong:227:16 |==> 0
915:LVR:POS:NEG:org.apache.commons.io.EndianUtils@readSwappedLong:227:16 |==> -16
916:SOR:<<(int,int):>>(int,int):org.apache.commons.io.EndianUtils@readSwappedLong:227:(data[offset + 6] & 255) << 16 |==> (data[offset + 6] & 255) >> 16
917:SOR:<<(int,int):>>>(int,int):org.apache.commons.io.EndianUtils@readSwappedLong:227:(data[offset + 6] & 255) << 16 |==> (data[offset + 6] & 255) >>> 16
918:AOR:+(int,int):%(int,int):org.apache.commons.io.EndianUtils@readSwappedLong:225:((data[offset + 4] & 255) << 0) + ((data[offset + 5] & 255) << 8) + ((data[offset + 6] & 255) << 16) |==> (((data[offset + 4] & 255) << 0) + ((data[offset + 5] & 255) << 8)) % ((data[offset + 6] & 255) << 16)
919:AOR:+(int,int):*(int,int):org.apache.commons.io.EndianUtils@readSwappedLong:225:((data[offset + 4] & 255) << 0) + ((data[offset + 5] & 255) << 8) + ((data[offset + 6] & 255) << 16) |==> (((data[offset + 4] & 255) << 0) + ((data[offset + 5] & 255) << 8)) * ((data[offset + 6] & 255) << 16)
920:AOR:+(int,int):-(int,int):org.apache.commons.io.EndianUtils@readSwappedLong:225:((data[offset + 4] & 255) << 0) + ((data[offset + 5] & 255) << 8) + ((data[offset + 6] & 255) << 16) |==> ((data[offset + 4] & 255) << 0) + ((data[offset + 5] & 255) << 8) - ((data[offset + 6] & 255) << 16)
921:AOR:+(int,int):/(int,int):org.apache.commons.io.EndianUtils@readSwappedLong:225:((data[offset + 4] & 255) << 0) + ((data[offset + 5] & 255) << 8) + ((data[offset + 6] & 255) << 16) |==> (((data[offset + 4] & 255) << 0) + ((data[offset + 5] & 255) << 8)) / ((data[offset + 6] & 255) << 16)
922:LVR:POS:0:org.apache.commons.io.EndianUtils@readSwappedLong:228:7 |==> 0
923:LVR:POS:NEG:org.apache.commons.io.EndianUtils@readSwappedLong:228:7 |==> -7
924:AOR:+(int,int):%(int,int):org.apache.commons.io.EndianUtils@readSwappedLong:228:offset + 7 |==> offset % 7
925:AOR:+(int,int):*(int,int):org.apache.commons.io.EndianUtils@readSwappedLong:228:offset + 7 |==> offset * 7
926:AOR:+(int,int):-(int,int):org.apache.commons.io.EndianUtils@readSwappedLong:228:offset + 7 |==> offset - 7
927:AOR:+(int,int):/(int,int):org.apache.commons.io.EndianUtils@readSwappedLong:228:offset + 7 |==> offset / 7
928:LVR:POS:0:org.apache.commons.io.EndianUtils@readSwappedLong:228:255 |==> 0
929:LVR:POS:NEG:org.apache.commons.io.EndianUtils@readSwappedLong:228:255 |==> -255
930:LOR:&(int,int):^(int,int):org.apache.commons.io.EndianUtils@readSwappedLong:228:data[offset + 7] & 255 |==> data[offset + 7] ^ 255
931:LOR:&(int,int):|(int,int):org.apache.commons.io.EndianUtils@readSwappedLong:228:data[offset + 7] & 255 |==> data[offset + 7] | 255
932:LVR:POS:0:org.apache.commons.io.EndianUtils@readSwappedLong:228:24 |==> 0
933:LVR:POS:NEG:org.apache.commons.io.EndianUtils@readSwappedLong:228:24 |==> -24
934:SOR:<<(int,int):>>(int,int):org.apache.commons.io.EndianUtils@readSwappedLong:228:(data[offset + 7] & 255) << 24 |==> (data[offset + 7] & 255) >> 24
935:SOR:<<(int,int):>>>(int,int):org.apache.commons.io.EndianUtils@readSwappedLong:228:(data[offset + 7] & 255) << 24 |==> (data[offset + 7] & 255) >>> 24
936:AOR:+(int,int):%(int,int):org.apache.commons.io.EndianUtils@readSwappedLong:225:((data[offset + 4] & 255) << 0) + ((data[offset + 5] & 255) << 8) + ((data[offset + 6] & 255) << 16) + ((data[offset + 7] & 255) << 24) |==> (((data[offset + 4] & 255) << 0) + ((data[offset + 5] & 255) << 8) + ((data[offset + 6] & 255) << 16)) % ((data[offset + 7] & 255) << 24)
937:AOR:+(int,int):*(int,int):org.apache.commons.io.EndianUtils@readSwappedLong:225:((data[offset + 4] & 255) << 0) + ((data[offset + 5] & 255) << 8) + ((data[offset + 6] & 255) << 16) + ((data[offset + 7] & 255) << 24) |==> (((data[offset + 4] & 255) << 0) + ((data[offset + 5] & 255) << 8) + ((data[offset + 6] & 255) << 16)) * ((data[offset + 7] & 255) << 24)
938:AOR:+(int,int):-(int,int):org.apache.commons.io.EndianUtils@readSwappedLong:225:((data[offset + 4] & 255) << 0) + ((data[offset + 5] & 255) << 8) + ((data[offset + 6] & 255) << 16) + ((data[offset + 7] & 255) << 24) |==> ((data[offset + 4] & 255) << 0) + ((data[offset + 5] & 255) << 8) + ((data[offset + 6] & 255) << 16) - ((data[offset + 7] & 255) << 24)
939:AOR:+(int,int):/(int,int):org.apache.commons.io.EndianUtils@readSwappedLong:225:((data[offset + 4] & 255) << 0) + ((data[offset + 5] & 255) << 8) + ((data[offset + 6] & 255) << 16) + ((data[offset + 7] & 255) << 24) |==> (((data[offset + 4] & 255) << 0) + ((data[offset + 5] & 255) << 8) + ((data[offset + 6] & 255) << 16)) / ((data[offset + 7] & 255) << 24)
940:LVR:POS:0:org.apache.commons.io.EndianUtils@readSwappedLong:229:32 |==> 0
941:LVR:POS:NEG:org.apache.commons.io.EndianUtils@readSwappedLong:229:32 |==> -32
942:SOR:<<(long,int):>>(long,int):org.apache.commons.io.EndianUtils@readSwappedLong:229:high << 32 |==> high >> 32
943:SOR:<<(long,int):>>>(long,int):org.apache.commons.io.EndianUtils@readSwappedLong:229:high << 32 |==> high >>> 32
944:LVR:POS:0:org.apache.commons.io.EndianUtils@readSwappedLong:229:4294967295L |==> 0L
945:LVR:POS:NEG:org.apache.commons.io.EndianUtils@readSwappedLong:229:4294967295L |==> -4294967295L
946:LOR:&(long,long):^(long,long):org.apache.commons.io.EndianUtils@readSwappedLong:229:4294967295L & low |==> 4294967295L ^ low
947:LOR:&(long,long):|(long,long):org.apache.commons.io.EndianUtils@readSwappedLong:229:4294967295L & low |==> 4294967295L | low
948:AOR:+(long,long):%(long,long):org.apache.commons.io.EndianUtils@readSwappedLong:229:(high << 32) + (4294967295L & low) |==> (high << 32) % (4294967295L & low)
949:AOR:+(long,long):*(long,long):org.apache.commons.io.EndianUtils@readSwappedLong:229:(high << 32) + (4294967295L & low) |==> (high << 32) * (4294967295L & low)
950:AOR:+(long,long):-(long,long):org.apache.commons.io.EndianUtils@readSwappedLong:229:(high << 32) + (4294967295L & low) |==> (high << 32) - (4294967295L & low)
951:AOR:+(long,long):/(long,long):org.apache.commons.io.EndianUtils@readSwappedLong:229:(high << 32) + (4294967295L & low) |==> (high << 32) / (4294967295L & low)
952:STD:<CALL>:<NO-OP>:org.apache.commons.io.EndianUtils@writeSwappedFloat:240:writeSwappedInteger(data, offset, Float.floatToIntBits(value)) |==> <NO-OP>
953:STD:<CALL>:<NO-OP>:org.apache.commons.io.EndianUtils@writeSwappedDouble:262:writeSwappedLong(data, offset, Double.doubleToLongBits(value)) |==> <NO-OP>
954:LVR:0:POS:org.apache.commons.io.EndianUtils@writeSwappedShort:286:0 |==> 1
955:LVR:0:NEG:org.apache.commons.io.EndianUtils@writeSwappedShort:286:0 |==> -1
956:SOR:>>(int,int):<<(int,int):org.apache.commons.io.EndianUtils@writeSwappedShort:286:value >> 0 |==> value << 0
957:SOR:>>(int,int):>>>(int,int):org.apache.commons.io.EndianUtils@writeSwappedShort:286:value >> 0 |==> value >>> 0
958:LVR:POS:0:org.apache.commons.io.EndianUtils@writeSwappedShort:286:255 |==> 0
959:LVR:POS:NEG:org.apache.commons.io.EndianUtils@writeSwappedShort:286:255 |==> -255
960:LOR:&(int,int):^(int,int):org.apache.commons.io.EndianUtils@writeSwappedShort:286:(value >> 0) & 255 |==> (value >> 0) ^ 255
961:LOR:&(int,int):|(int,int):org.apache.commons.io.EndianUtils@writeSwappedShort:286:(value >> 0) & 255 |==> (value >> 0) | 255
962:STD:<CALL>:<NO-OP>:org.apache.commons.io.EndianUtils@writeSwappedShort:286:output.write((byte)((value >> 0) & 255)) |==> <NO-OP>
963:LVR:POS:0:org.apache.commons.io.EndianUtils@writeSwappedShort:287:8 |==> 0
964:LVR:POS:NEG:org.apache.commons.io.EndianUtils@writeSwappedShort:287:8 |==> -8
965:SOR:>>(int,int):<<(int,int):org.apache.commons.io.EndianUtils@writeSwappedShort:287:value >> 8 |==> value << 8
966:SOR:>>(int,int):>>>(int,int):org.apache.commons.io.EndianUtils@writeSwappedShort:287:value >> 8 |==> value >>> 8
967:LVR:POS:0:org.apache.commons.io.EndianUtils@writeSwappedShort:287:255 |==> 0
968:LVR:POS:NEG:org.apache.commons.io.EndianUtils@writeSwappedShort:287:255 |==> -255
969:LOR:&(int,int):^(int,int):org.apache.commons.io.EndianUtils@writeSwappedShort:287:(value >> 8) & 255 |==> (value >> 8) ^ 255
970:LOR:&(int,int):|(int,int):org.apache.commons.io.EndianUtils@writeSwappedShort:287:(value >> 8) & 255 |==> (value >> 8) | 255
971:STD:<CALL>:<NO-OP>:org.apache.commons.io.EndianUtils@writeSwappedShort:287:output.write((byte)((value >> 8) & 255)) |==> <NO-OP>
972:LVR:POS:0:org.apache.commons.io.EndianUtils@readSwappedShort:300:255 |==> 0
973:LVR:POS:NEG:org.apache.commons.io.EndianUtils@readSwappedShort:300:255 |==> -255
974:LOR:&(int,int):^(int,int):org.apache.commons.io.EndianUtils@readSwappedShort:300:read(input) & 255 |==> read(input) ^ 255
975:LOR:&(int,int):|(int,int):org.apache.commons.io.EndianUtils@readSwappedShort:300:read(input) & 255 |==> read(input) | 255
976:LVR:0:POS:org.apache.commons.io.EndianUtils@readSwappedShort:300:0 |==> 1
977:LVR:0:NEG:org.apache.commons.io.EndianUtils@readSwappedShort:300:0 |==> -1
978:SOR:<<(int,int):>>(int,int):org.apache.commons.io.EndianUtils@readSwappedShort:300:(read(input) & 255) << 0 |==> (read(input) & 255) >> 0
979:SOR:<<(int,int):>>>(int,int):org.apache.commons.io.EndianUtils@readSwappedShort:300:(read(input) & 255) << 0 |==> (read(input) & 255) >>> 0
980:LVR:POS:0:org.apache.commons.io.EndianUtils@readSwappedShort:301:255 |==> 0
981:LVR:POS:NEG:org.apache.commons.io.EndianUtils@readSwappedShort:301:255 |==> -255
982:LOR:&(int,int):^(int,int):org.apache.commons.io.EndianUtils@readSwappedShort:301:read(input) & 255 |==> read(input) ^ 255
983:LOR:&(int,int):|(int,int):org.apache.commons.io.EndianUtils@readSwappedShort:301:read(input) & 255 |==> read(input) | 255
984:LVR:POS:0:org.apache.commons.io.EndianUtils@readSwappedShort:301:8 |==> 0
985:LVR:POS:NEG:org.apache.commons.io.EndianUtils@readSwappedShort:301:8 |==> -8
986:SOR:<<(int,int):>>(int,int):org.apache.commons.io.EndianUtils@readSwappedShort:301:(read(input) & 255) << 8 |==> (read(input) & 255) >> 8
987:SOR:<<(int,int):>>>(int,int):org.apache.commons.io.EndianUtils@readSwappedShort:301:(read(input) & 255) << 8 |==> (read(input) & 255) >>> 8
988:AOR:+(int,int):%(int,int):org.apache.commons.io.EndianUtils@readSwappedShort:300:((read(input) & 255) << 0) + ((read(input) & 255) << 8) |==> ((read(input) & 255) << 0) % ((read(input) & 255) << 8)
989:AOR:+(int,int):*(int,int):org.apache.commons.io.EndianUtils@readSwappedShort:300:((read(input) & 255) << 0) + ((read(input) & 255) << 8) |==> ((read(input) & 255) << 0) * ((read(input) & 255) << 8)
990:AOR:+(int,int):-(int,int):org.apache.commons.io.EndianUtils@readSwappedShort:300:((read(input) & 255) << 0) + ((read(input) & 255) << 8) |==> ((read(input) & 255) << 0) - ((read(input) & 255) << 8)
991:AOR:+(int,int):/(int,int):org.apache.commons.io.EndianUtils@readSwappedShort:300:((read(input) & 255) << 0) + ((read(input) & 255) << 8) |==> ((read(input) & 255) << 0) / ((read(input) & 255) << 8)
992:LVR:POS:0:org.apache.commons.io.EndianUtils@readSwappedUnsignedShort:317:255 |==> 0
993:LVR:POS:NEG:org.apache.commons.io.EndianUtils@readSwappedUnsignedShort:317:255 |==> -255
994:LOR:&(int,int):^(int,int):org.apache.commons.io.EndianUtils@readSwappedUnsignedShort:317:value1 & 255 |==> value1 ^ 255
995:LOR:&(int,int):|(int,int):org.apache.commons.io.EndianUtils@readSwappedUnsignedShort:317:value1 & 255 |==> value1 | 255
996:LVR:0:POS:org.apache.commons.io.EndianUtils@readSwappedUnsignedShort:317:0 |==> 1
997:LVR:0:NEG:org.apache.commons.io.EndianUtils@readSwappedUnsignedShort:317:0 |==> -1
998:SOR:<<(int,int):>>(int,int):org.apache.commons.io.EndianUtils@readSwappedUnsignedShort:317:(value1 & 255) << 0 |==> (value1 & 255) >> 0
999:SOR:<<(int,int):>>>(int,int):org.apache.commons.io.EndianUtils@readSwappedUnsignedShort:317:(value1 & 255) << 0 |==> (value1 & 255) >>> 0
1000:LVR:POS:0:org.apache.commons.io.EndianUtils@readSwappedUnsignedShort:318:255 |==> 0
1001:LVR:POS:NEG:org.apache.commons.io.EndianUtils@readSwappedUnsignedShort:318:255 |==> -255
1002:LOR:&(int,int):^(int,int):org.apache.commons.io.EndianUtils@readSwappedUnsignedShort:318:value2 & 255 |==> value2 ^ 255
1003:LOR:&(int,int):|(int,int):org.apache.commons.io.EndianUtils@readSwappedUnsignedShort:318:value2 & 255 |==> value2 | 255
1004:LVR:POS:0:org.apache.commons.io.EndianUtils@readSwappedUnsignedShort:318:8 |==> 0
1005:LVR:POS:NEG:org.apache.commons.io.EndianUtils@readSwappedUnsignedShort:318:8 |==> -8
1006:SOR:<<(int,int):>>(int,int):org.apache.commons.io.EndianUtils@readSwappedUnsignedShort:318:(value2 & 255) << 8 |==> (value2 & 255) >> 8
1007:SOR:<<(int,int):>>>(int,int):org.apache.commons.io.EndianUtils@readSwappedUnsignedShort:318:(value2 & 255) << 8 |==> (value2 & 255) >>> 8
1008:AOR:+(int,int):%(int,int):org.apache.commons.io.EndianUtils@readSwappedUnsignedShort:317:((value1 & 255) << 0) + ((value2 & 255) << 8) |==> ((value1 & 255) << 0) % ((value2 & 255) << 8)
1009:AOR:+(int,int):*(int,int):org.apache.commons.io.EndianUtils@readSwappedUnsignedShort:317:((value1 & 255) << 0) + ((value2 & 255) << 8) |==> ((value1 & 255) << 0) * ((value2 & 255) << 8)
1010:AOR:+(int,int):-(int,int):org.apache.commons.io.EndianUtils@readSwappedUnsignedShort:317:((value1 & 255) << 0) + ((value2 & 255) << 8) |==> ((value1 & 255) << 0) - ((value2 & 255) << 8)
1011:AOR:+(int,int):/(int,int):org.apache.commons.io.EndianUtils@readSwappedUnsignedShort:317:((value1 & 255) << 0) + ((value2 & 255) << 8) |==> ((value1 & 255) << 0) / ((value2 & 255) << 8)
1012:LVR:0:POS:org.apache.commons.io.EndianUtils@writeSwappedInteger:331:0 |==> 1
1013:LVR:0:NEG:org.apache.commons.io.EndianUtils@writeSwappedInteger:331:0 |==> -1
1014:SOR:>>(int,int):<<(int,int):org.apache.commons.io.EndianUtils@writeSwappedInteger:331:value >> 0 |==> value << 0
1015:SOR:>>(int,int):>>>(int,int):org.apache.commons.io.EndianUtils@writeSwappedInteger:331:value >> 0 |==> value >>> 0
1016:LVR:POS:0:org.apache.commons.io.EndianUtils@writeSwappedInteger:331:255 |==> 0
1017:LVR:POS:NEG:org.apache.commons.io.EndianUtils@writeSwappedInteger:331:255 |==> -255
1018:LOR:&(int,int):^(int,int):org.apache.commons.io.EndianUtils@writeSwappedInteger:331:(value >> 0) & 255 |==> (value >> 0) ^ 255
1019:LOR:&(int,int):|(int,int):org.apache.commons.io.EndianUtils@writeSwappedInteger:331:(value >> 0) & 255 |==> (value >> 0) | 255
1020:STD:<CALL>:<NO-OP>:org.apache.commons.io.EndianUtils@writeSwappedInteger:331:output.write((byte)((value >> 0) & 255)) |==> <NO-OP>
1021:LVR:POS:0:org.apache.commons.io.EndianUtils@writeSwappedInteger:332:8 |==> 0
1022:LVR:POS:NEG:org.apache.commons.io.EndianUtils@writeSwappedInteger:332:8 |==> -8
1023:SOR:>>(int,int):<<(int,int):org.apache.commons.io.EndianUtils@writeSwappedInteger:332:value >> 8 |==> value << 8
1024:SOR:>>(int,int):>>>(int,int):org.apache.commons.io.EndianUtils@writeSwappedInteger:332:value >> 8 |==> value >>> 8
1025:LVR:POS:0:org.apache.commons.io.EndianUtils@writeSwappedInteger:332:255 |==> 0
1026:LVR:POS:NEG:org.apache.commons.io.EndianUtils@writeSwappedInteger:332:255 |==> -255
1027:LOR:&(int,int):^(int,int):org.apache.commons.io.EndianUtils@writeSwappedInteger:332:(value >> 8) & 255 |==> (value >> 8) ^ 255
1028:LOR:&(int,int):|(int,int):org.apache.commons.io.EndianUtils@writeSwappedInteger:332:(value >> 8) & 255 |==> (value >> 8) | 255
1029:STD:<CALL>:<NO-OP>:org.apache.commons.io.EndianUtils@writeSwappedInteger:332:output.write((byte)((value >> 8) & 255)) |==> <NO-OP>
1030:LVR:POS:0:org.apache.commons.io.EndianUtils@writeSwappedInteger:333:16 |==> 0
1031:LVR:POS:NEG:org.apache.commons.io.EndianUtils@writeSwappedInteger:333:16 |==> -16
1032:SOR:>>(int,int):<<(int,int):org.apache.commons.io.EndianUtils@writeSwappedInteger:333:value >> 16 |==> value << 16
1033:SOR:>>(int,int):>>>(int,int):org.apache.commons.io.EndianUtils@writeSwappedInteger:333:value >> 16 |==> value >>> 16
1034:LVR:POS:0:org.apache.commons.io.EndianUtils@writeSwappedInteger:333:255 |==> 0
1035:LVR:POS:NEG:org.apache.commons.io.EndianUtils@writeSwappedInteger:333:255 |==> -255
1036:LOR:&(int,int):^(int,int):org.apache.commons.io.EndianUtils@writeSwappedInteger:333:(value >> 16) & 255 |==> (value >> 16) ^ 255
1037:LOR:&(int,int):|(int,int):org.apache.commons.io.EndianUtils@writeSwappedInteger:333:(value >> 16) & 255 |==> (value >> 16) | 255
1038:STD:<CALL>:<NO-OP>:org.apache.commons.io.EndianUtils@writeSwappedInteger:333:output.write((byte)((value >> 16) & 255)) |==> <NO-OP>
1039:LVR:POS:0:org.apache.commons.io.EndianUtils@writeSwappedInteger:334:24 |==> 0
1040:LVR:POS:NEG:org.apache.commons.io.EndianUtils@writeSwappedInteger:334:24 |==> -24
1041:SOR:>>(int,int):<<(int,int):org.apache.commons.io.EndianUtils@writeSwappedInteger:334:value >> 24 |==> value << 24
1042:SOR:>>(int,int):>>>(int,int):org.apache.commons.io.EndianUtils@writeSwappedInteger:334:value >> 24 |==> value >>> 24
1043:LVR:POS:0:org.apache.commons.io.EndianUtils@writeSwappedInteger:334:255 |==> 0
1044:LVR:POS:NEG:org.apache.commons.io.EndianUtils@writeSwappedInteger:334:255 |==> -255
1045:LOR:&(int,int):^(int,int):org.apache.commons.io.EndianUtils@writeSwappedInteger:334:(value >> 24) & 255 |==> (value >> 24) ^ 255
1046:LOR:&(int,int):|(int,int):org.apache.commons.io.EndianUtils@writeSwappedInteger:334:(value >> 24) & 255 |==> (value >> 24) | 255
1047:STD:<CALL>:<NO-OP>:org.apache.commons.io.EndianUtils@writeSwappedInteger:334:output.write((byte)((value >> 24) & 255)) |==> <NO-OP>
1048:LVR:POS:0:org.apache.commons.io.EndianUtils@readSwappedInteger:352:255 |==> 0
1049:LVR:POS:NEG:org.apache.commons.io.EndianUtils@readSwappedInteger:352:255 |==> -255
1050:LOR:&(int,int):^(int,int):org.apache.commons.io.EndianUtils@readSwappedInteger:352:value1 & 255 |==> value1 ^ 255
1051:LOR:&(int,int):|(int,int):org.apache.commons.io.EndianUtils@readSwappedInteger:352:value1 & 255 |==> value1 | 255
1052:LVR:0:POS:org.apache.commons.io.EndianUtils@readSwappedInteger:352:0 |==> 1
1053:LVR:0:NEG:org.apache.commons.io.EndianUtils@readSwappedInteger:352:0 |==> -1
1054:SOR:<<(int,int):>>(int,int):org.apache.commons.io.EndianUtils@readSwappedInteger:352:(value1 & 255) << 0 |==> (value1 & 255) >> 0
1055:SOR:<<(int,int):>>>(int,int):org.apache.commons.io.EndianUtils@readSwappedInteger:352:(value1 & 255) << 0 |==> (value1 & 255) >>> 0
1056:LVR:POS:0:org.apache.commons.io.EndianUtils@readSwappedInteger:353:255 |==> 0
1057:LVR:POS:NEG:org.apache.commons.io.EndianUtils@readSwappedInteger:353:255 |==> -255
1058:LOR:&(int,int):^(int,int):org.apache.commons.io.EndianUtils@readSwappedInteger:353:value2 & 255 |==> value2 ^ 255
1059:LOR:&(int,int):|(int,int):org.apache.commons.io.EndianUtils@readSwappedInteger:353:value2 & 255 |==> value2 | 255
1060:LVR:POS:0:org.apache.commons.io.EndianUtils@readSwappedInteger:353:8 |==> 0
1061:LVR:POS:NEG:org.apache.commons.io.EndianUtils@readSwappedInteger:353:8 |==> -8
1062:SOR:<<(int,int):>>(int,int):org.apache.commons.io.EndianUtils@readSwappedInteger:353:(value2 & 255) << 8 |==> (value2 & 255) >> 8
1063:SOR:<<(int,int):>>>(int,int):org.apache.commons.io.EndianUtils@readSwappedInteger:353:(value2 & 255) << 8 |==> (value2 & 255) >>> 8
1064:AOR:+(int,int):%(int,int):org.apache.commons.io.EndianUtils@readSwappedInteger:352:((value1 & 255) << 0) + ((value2 & 255) << 8) |==> ((value1 & 255) << 0) % ((value2 & 255) << 8)
1065:AOR:+(int,int):*(int,int):org.apache.commons.io.EndianUtils@readSwappedInteger:352:((value1 & 255) << 0) + ((value2 & 255) << 8) |==> ((value1 & 255) << 0) * ((value2 & 255) << 8)
1066:AOR:+(int,int):-(int,int):org.apache.commons.io.EndianUtils@readSwappedInteger:352:((value1 & 255) << 0) + ((value2 & 255) << 8) |==> ((value1 & 255) << 0) - ((value2 & 255) << 8)
1067:AOR:+(int,int):/(int,int):org.apache.commons.io.EndianUtils@readSwappedInteger:352:((value1 & 255) << 0) + ((value2 & 255) << 8) |==> ((value1 & 255) << 0) / ((value2 & 255) << 8)
1068:LVR:POS:0:org.apache.commons.io.EndianUtils@readSwappedInteger:354:255 |==> 0
1069:LVR:POS:NEG:org.apache.commons.io.EndianUtils@readSwappedInteger:354:255 |==> -255
1070:LOR:&(int,int):^(int,int):org.apache.commons.io.EndianUtils@readSwappedInteger:354:value3 & 255 |==> value3 ^ 255
1071:LOR:&(int,int):|(int,int):org.apache.commons.io.EndianUtils@readSwappedInteger:354:value3 & 255 |==> value3 | 255
1072:LVR:POS:0:org.apache.commons.io.EndianUtils@readSwappedInteger:354:16 |==> 0
1073:LVR:POS:NEG:org.apache.commons.io.EndianUtils@readSwappedInteger:354:16 |==> -16
1074:SOR:<<(int,int):>>(int,int):org.apache.commons.io.EndianUtils@readSwappedInteger:354:(value3 & 255) << 16 |==> (value3 & 255) >> 16
1075:SOR:<<(int,int):>>>(int,int):org.apache.commons.io.EndianUtils@readSwappedInteger:354:(value3 & 255) << 16 |==> (value3 & 255) >>> 16
1076:AOR:+(int,int):%(int,int):org.apache.commons.io.EndianUtils@readSwappedInteger:352:((value1 & 255) << 0) + ((value2 & 255) << 8) + ((value3 & 255) << 16) |==> (((value1 & 255) << 0) + ((value2 & 255) << 8)) % ((value3 & 255) << 16)
1077:AOR:+(int,int):*(int,int):org.apache.commons.io.EndianUtils@readSwappedInteger:352:((value1 & 255) << 0) + ((value2 & 255) << 8) + ((value3 & 255) << 16) |==> (((value1 & 255) << 0) + ((value2 & 255) << 8)) * ((value3 & 255) << 16)
1078:AOR:+(int,int):-(int,int):org.apache.commons.io.EndianUtils@readSwappedInteger:352:((value1 & 255) << 0) + ((value2 & 255) << 8) + ((value3 & 255) << 16) |==> ((value1 & 255) << 0) + ((value2 & 255) << 8) - ((value3 & 255) << 16)
1079:AOR:+(int,int):/(int,int):org.apache.commons.io.EndianUtils@readSwappedInteger:352:((value1 & 255) << 0) + ((value2 & 255) << 8) + ((value3 & 255) << 16) |==> (((value1 & 255) << 0) + ((value2 & 255) << 8)) / ((value3 & 255) << 16)
1080:LVR:POS:0:org.apache.commons.io.EndianUtils@readSwappedInteger:355:255 |==> 0
1081:LVR:POS:NEG:org.apache.commons.io.EndianUtils@readSwappedInteger:355:255 |==> -255
1082:LOR:&(int,int):^(int,int):org.apache.commons.io.EndianUtils@readSwappedInteger:355:value4 & 255 |==> value4 ^ 255
1083:LOR:&(int,int):|(int,int):org.apache.commons.io.EndianUtils@readSwappedInteger:355:value4 & 255 |==> value4 | 255
1084:LVR:POS:0:org.apache.commons.io.EndianUtils@readSwappedInteger:355:24 |==> 0
1085:LVR:POS:NEG:org.apache.commons.io.EndianUtils@readSwappedInteger:355:24 |==> -24
1086:SOR:<<(int,int):>>(int,int):org.apache.commons.io.EndianUtils@readSwappedInteger:355:(value4 & 255) << 24 |==> (value4 & 255) >> 24
1087:SOR:<<(int,int):>>>(int,int):org.apache.commons.io.EndianUtils@readSwappedInteger:355:(value4 & 255) << 24 |==> (value4 & 255) >>> 24
1088:AOR:+(int,int):%(int,int):org.apache.commons.io.EndianUtils@readSwappedInteger:352:((value1 & 255) << 0) + ((value2 & 255) << 8) + ((value3 & 255) << 16) + ((value4 & 255) << 24) |==> (((value1 & 255) << 0) + ((value2 & 255) << 8) + ((value3 & 255) << 16)) % ((value4 & 255) << 24)
1089:AOR:+(int,int):*(int,int):org.apache.commons.io.EndianUtils@readSwappedInteger:352:((value1 & 255) << 0) + ((value2 & 255) << 8) + ((value3 & 255) << 16) + ((value4 & 255) << 24) |==> (((value1 & 255) << 0) + ((value2 & 255) << 8) + ((value3 & 255) << 16)) * ((value4 & 255) << 24)
1090:AOR:+(int,int):-(int,int):org.apache.commons.io.EndianUtils@readSwappedInteger:352:((value1 & 255) << 0) + ((value2 & 255) << 8) + ((value3 & 255) << 16) + ((value4 & 255) << 24) |==> ((value1 & 255) << 0) + ((value2 & 255) << 8) + ((value3 & 255) << 16) - ((value4 & 255) << 24)
1091:AOR:+(int,int):/(int,int):org.apache.commons.io.EndianUtils@readSwappedInteger:352:((value1 & 255) << 0) + ((value2 & 255) << 8) + ((value3 & 255) << 16) + ((value4 & 255) << 24) |==> (((value1 & 255) << 0) + ((value2 & 255) << 8) + ((value3 & 255) << 16)) / ((value4 & 255) << 24)
1092:LVR:POS:0:org.apache.commons.io.EndianUtils@readSwappedUnsignedInteger:373:255 |==> 0
1093:LVR:POS:NEG:org.apache.commons.io.EndianUtils@readSwappedUnsignedInteger:373:255 |==> -255
1094:LOR:&(int,int):^(int,int):org.apache.commons.io.EndianUtils@readSwappedUnsignedInteger:373:value1 & 255 |==> value1 ^ 255
1095:LOR:&(int,int):|(int,int):org.apache.commons.io.EndianUtils@readSwappedUnsignedInteger:373:value1 & 255 |==> value1 | 255
1096:LVR:0:POS:org.apache.commons.io.EndianUtils@readSwappedUnsignedInteger:373:0 |==> 1
1097:LVR:0:NEG:org.apache.commons.io.EndianUtils@readSwappedUnsignedInteger:373:0 |==> -1
1098:SOR:<<(int,int):>>(int,int):org.apache.commons.io.EndianUtils@readSwappedUnsignedInteger:373:(value1 & 255) << 0 |==> (value1 & 255) >> 0
1099:SOR:<<(int,int):>>>(int,int):org.apache.commons.io.EndianUtils@readSwappedUnsignedInteger:373:(value1 & 255) << 0 |==> (value1 & 255) >>> 0
1100:LVR:POS:0:org.apache.commons.io.EndianUtils@readSwappedUnsignedInteger:374:255 |==> 0
1101:LVR:POS:NEG:org.apache.commons.io.EndianUtils@readSwappedUnsignedInteger:374:255 |==> -255
1102:LOR:&(int,int):^(int,int):org.apache.commons.io.EndianUtils@readSwappedUnsignedInteger:374:value2 & 255 |==> value2 ^ 255
1103:LOR:&(int,int):|(int,int):org.apache.commons.io.EndianUtils@readSwappedUnsignedInteger:374:value2 & 255 |==> value2 | 255
1104:LVR:POS:0:org.apache.commons.io.EndianUtils@readSwappedUnsignedInteger:374:8 |==> 0
1105:LVR:POS:NEG:org.apache.commons.io.EndianUtils@readSwappedUnsignedInteger:374:8 |==> -8
1106:SOR:<<(int,int):>>(int,int):org.apache.commons.io.EndianUtils@readSwappedUnsignedInteger:374:(value2 & 255) << 8 |==> (value2 & 255) >> 8
1107:SOR:<<(int,int):>>>(int,int):org.apache.commons.io.EndianUtils@readSwappedUnsignedInteger:374:(value2 & 255) << 8 |==> (value2 & 255) >>> 8
1108:AOR:+(int,int):%(int,int):org.apache.commons.io.EndianUtils@readSwappedUnsignedInteger:373:((value1 & 255) << 0) + ((value2 & 255) << 8) |==> ((value1 & 255) << 0) % ((value2 & 255) << 8)
1109:AOR:+(int,int):*(int,int):org.apache.commons.io.EndianUtils@readSwappedUnsignedInteger:373:((value1 & 255) << 0) + ((value2 & 255) << 8) |==> ((value1 & 255) << 0) * ((value2 & 255) << 8)
1110:AOR:+(int,int):-(int,int):org.apache.commons.io.EndianUtils@readSwappedUnsignedInteger:373:((value1 & 255) << 0) + ((value2 & 255) << 8) |==> ((value1 & 255) << 0) - ((value2 & 255) << 8)
1111:AOR:+(int,int):/(int,int):org.apache.commons.io.EndianUtils@readSwappedUnsignedInteger:373:((value1 & 255) << 0) + ((value2 & 255) << 8) |==> ((value1 & 255) << 0) / ((value2 & 255) << 8)
1112:LVR:POS:0:org.apache.commons.io.EndianUtils@readSwappedUnsignedInteger:375:255 |==> 0
1113:LVR:POS:NEG:org.apache.commons.io.EndianUtils@readSwappedUnsignedInteger:375:255 |==> -255
1114:LOR:&(int,int):^(int,int):org.apache.commons.io.EndianUtils@readSwappedUnsignedInteger:375:value3 & 255 |==> value3 ^ 255
1115:LOR:&(int,int):|(int,int):org.apache.commons.io.EndianUtils@readSwappedUnsignedInteger:375:value3 & 255 |==> value3 | 255
1116:LVR:POS:0:org.apache.commons.io.EndianUtils@readSwappedUnsignedInteger:375:16 |==> 0
1117:LVR:POS:NEG:org.apache.commons.io.EndianUtils@readSwappedUnsignedInteger:375:16 |==> -16
1118:SOR:<<(int,int):>>(int,int):org.apache.commons.io.EndianUtils@readSwappedUnsignedInteger:375:(value3 & 255) << 16 |==> (value3 & 255) >> 16
1119:SOR:<<(int,int):>>>(int,int):org.apache.commons.io.EndianUtils@readSwappedUnsignedInteger:375:(value3 & 255) << 16 |==> (value3 & 255) >>> 16
1120:AOR:+(int,int):%(int,int):org.apache.commons.io.EndianUtils@readSwappedUnsignedInteger:373:((value1 & 255) << 0) + ((value2 & 255) << 8) + ((value3 & 255) << 16) |==> (((value1 & 255) << 0) + ((value2 & 255) << 8)) % ((value3 & 255) << 16)
1121:AOR:+(int,int):*(int,int):org.apache.commons.io.EndianUtils@readSwappedUnsignedInteger:373:((value1 & 255) << 0) + ((value2 & 255) << 8) + ((value3 & 255) << 16) |==> (((value1 & 255) << 0) + ((value2 & 255) << 8)) * ((value3 & 255) << 16)
1122:AOR:+(int,int):-(int,int):org.apache.commons.io.EndianUtils@readSwappedUnsignedInteger:373:((value1 & 255) << 0) + ((value2 & 255) << 8) + ((value3 & 255) << 16) |==> ((value1 & 255) << 0) + ((value2 & 255) << 8) - ((value3 & 255) << 16)
1123:AOR:+(int,int):/(int,int):org.apache.commons.io.EndianUtils@readSwappedUnsignedInteger:373:((value1 & 255) << 0) + ((value2 & 255) << 8) + ((value3 & 255) << 16) |==> (((value1 & 255) << 0) + ((value2 & 255) << 8)) / ((value3 & 255) << 16)
1124:LVR:POS:0:org.apache.commons.io.EndianUtils@readSwappedUnsignedInteger:377:255 |==> 0
1125:LVR:POS:NEG:org.apache.commons.io.EndianUtils@readSwappedUnsignedInteger:377:255 |==> -255
1126:LOR:&(int,int):^(int,int):org.apache.commons.io.EndianUtils@readSwappedUnsignedInteger:377:value4 & 255 |==> value4 ^ 255
1127:LOR:&(int,int):|(int,int):org.apache.commons.io.EndianUtils@readSwappedUnsignedInteger:377:value4 & 255 |==> value4 | 255
1128:LVR:POS:0:org.apache.commons.io.EndianUtils@readSwappedUnsignedInteger:379:24 |==> 0
1129:LVR:POS:NEG:org.apache.commons.io.EndianUtils@readSwappedUnsignedInteger:379:24 |==> -24
1130:SOR:<<(long,int):>>(long,int):org.apache.commons.io.EndianUtils@readSwappedUnsignedInteger:379:high << 24 |==> high >> 24
1131:SOR:<<(long,int):>>>(long,int):org.apache.commons.io.EndianUtils@readSwappedUnsignedInteger:379:high << 24 |==> high >>> 24
1132:LVR:POS:0:org.apache.commons.io.EndianUtils@readSwappedUnsignedInteger:379:4294967295L |==> 0L
1133:LVR:POS:NEG:org.apache.commons.io.EndianUtils@readSwappedUnsignedInteger:379:4294967295L |==> -4294967295L
1134:LOR:&(long,long):^(long,long):org.apache.commons.io.EndianUtils@readSwappedUnsignedInteger:379:4294967295L & low |==> 4294967295L ^ low
1135:LOR:&(long,long):|(long,long):org.apache.commons.io.EndianUtils@readSwappedUnsignedInteger:379:4294967295L & low |==> 4294967295L | low
1136:AOR:+(long,long):%(long,long):org.apache.commons.io.EndianUtils@readSwappedUnsignedInteger:379:(high << 24) + (4294967295L & low) |==> (high << 24) % (4294967295L & low)
1137:AOR:+(long,long):*(long,long):org.apache.commons.io.EndianUtils@readSwappedUnsignedInteger:379:(high << 24) + (4294967295L & low) |==> (high << 24) * (4294967295L & low)
1138:AOR:+(long,long):-(long,long):org.apache.commons.io.EndianUtils@readSwappedUnsignedInteger:379:(high << 24) + (4294967295L & low) |==> (high << 24) - (4294967295L & low)
1139:AOR:+(long,long):/(long,long):org.apache.commons.io.EndianUtils@readSwappedUnsignedInteger:379:(high << 24) + (4294967295L & low) |==> (high << 24) / (4294967295L & low)
1140:LVR:0:POS:org.apache.commons.io.EndianUtils@writeSwappedLong:392:0 |==> 1
1141:LVR:0:NEG:org.apache.commons.io.EndianUtils@writeSwappedLong:392:0 |==> -1
1142:SOR:>>(long,int):<<(long,int):org.apache.commons.io.EndianUtils@writeSwappedLong:392:value >> 0 |==> value << 0
1143:SOR:>>(long,int):>>>(long,int):org.apache.commons.io.EndianUtils@writeSwappedLong:392:value >> 0 |==> value >>> 0
1144:LVR:POS:0:org.apache.commons.io.EndianUtils@writeSwappedLong:392:255 |==> 0
1145:LVR:POS:NEG:org.apache.commons.io.EndianUtils@writeSwappedLong:392:255 |==> -255
1146:LOR:&(long,long):^(long,long):org.apache.commons.io.EndianUtils@writeSwappedLong:392:(value >> 0) & 255 |==> (value >> 0) ^ 255
1147:LOR:&(long,long):|(long,long):org.apache.commons.io.EndianUtils@writeSwappedLong:392:(value >> 0) & 255 |==> (value >> 0) | 255
1148:STD:<CALL>:<NO-OP>:org.apache.commons.io.EndianUtils@writeSwappedLong:392:output.write((byte)((value >> 0) & 255)) |==> <NO-OP>
1149:LVR:POS:0:org.apache.commons.io.EndianUtils@writeSwappedLong:393:8 |==> 0
1150:LVR:POS:NEG:org.apache.commons.io.EndianUtils@writeSwappedLong:393:8 |==> -8
1151:SOR:>>(long,int):<<(long,int):org.apache.commons.io.EndianUtils@writeSwappedLong:393:value >> 8 |==> value << 8
1152:SOR:>>(long,int):>>>(long,int):org.apache.commons.io.EndianUtils@writeSwappedLong:393:value >> 8 |==> value >>> 8
1153:LVR:POS:0:org.apache.commons.io.EndianUtils@writeSwappedLong:393:255 |==> 0
1154:LVR:POS:NEG:org.apache.commons.io.EndianUtils@writeSwappedLong:393:255 |==> -255
1155:LOR:&(long,long):^(long,long):org.apache.commons.io.EndianUtils@writeSwappedLong:393:(value >> 8) & 255 |==> (value >> 8) ^ 255
1156:LOR:&(long,long):|(long,long):org.apache.commons.io.EndianUtils@writeSwappedLong:393:(value >> 8) & 255 |==> (value >> 8) | 255
1157:STD:<CALL>:<NO-OP>:org.apache.commons.io.EndianUtils@writeSwappedLong:393:output.write((byte)((value >> 8) & 255)) |==> <NO-OP>
1158:LVR:POS:0:org.apache.commons.io.EndianUtils@writeSwappedLong:394:16 |==> 0
1159:LVR:POS:NEG:org.apache.commons.io.EndianUtils@writeSwappedLong:394:16 |==> -16
1160:SOR:>>(long,int):<<(long,int):org.apache.commons.io.EndianUtils@writeSwappedLong:394:value >> 16 |==> value << 16
1161:SOR:>>(long,int):>>>(long,int):org.apache.commons.io.EndianUtils@writeSwappedLong:394:value >> 16 |==> value >>> 16
1162:LVR:POS:0:org.apache.commons.io.EndianUtils@writeSwappedLong:394:255 |==> 0
1163:LVR:POS:NEG:org.apache.commons.io.EndianUtils@writeSwappedLong:394:255 |==> -255
1164:LOR:&(long,long):^(long,long):org.apache.commons.io.EndianUtils@writeSwappedLong:394:(value >> 16) & 255 |==> (value >> 16) ^ 255
1165:LOR:&(long,long):|(long,long):org.apache.commons.io.EndianUtils@writeSwappedLong:394:(value >> 16) & 255 |==> (value >> 16) | 255
1166:STD:<CALL>:<NO-OP>:org.apache.commons.io.EndianUtils@writeSwappedLong:394:output.write((byte)((value >> 16) & 255)) |==> <NO-OP>
1167:LVR:POS:0:org.apache.commons.io.EndianUtils@writeSwappedLong:395:24 |==> 0
1168:LVR:POS:NEG:org.apache.commons.io.EndianUtils@writeSwappedLong:395:24 |==> -24
1169:SOR:>>(long,int):<<(long,int):org.apache.commons.io.EndianUtils@writeSwappedLong:395:value >> 24 |==> value << 24
1170:SOR:>>(long,int):>>>(long,int):org.apache.commons.io.EndianUtils@writeSwappedLong:395:value >> 24 |==> value >>> 24
1171:LVR:POS:0:org.apache.commons.io.EndianUtils@writeSwappedLong:395:255 |==> 0
1172:LVR:POS:NEG:org.apache.commons.io.EndianUtils@writeSwappedLong:395:255 |==> -255
1173:LOR:&(long,long):^(long,long):org.apache.commons.io.EndianUtils@writeSwappedLong:395:(value >> 24) & 255 |==> (value >> 24) ^ 255
1174:LOR:&(long,long):|(long,long):org.apache.commons.io.EndianUtils@writeSwappedLong:395:(value >> 24) & 255 |==> (value >> 24) | 255
1175:STD:<CALL>:<NO-OP>:org.apache.commons.io.EndianUtils@writeSwappedLong:395:output.write((byte)((value >> 24) & 255)) |==> <NO-OP>
1176:LVR:POS:0:org.apache.commons.io.EndianUtils@writeSwappedLong:396:32 |==> 0
1177:LVR:POS:NEG:org.apache.commons.io.EndianUtils@writeSwappedLong:396:32 |==> -32
1178:SOR:>>(long,int):<<(long,int):org.apache.commons.io.EndianUtils@writeSwappedLong:396:value >> 32 |==> value << 32
1179:SOR:>>(long,int):>>>(long,int):org.apache.commons.io.EndianUtils@writeSwappedLong:396:value >> 32 |==> value >>> 32
1180:LVR:POS:0:org.apache.commons.io.EndianUtils@writeSwappedLong:396:255 |==> 0
1181:LVR:POS:NEG:org.apache.commons.io.EndianUtils@writeSwappedLong:396:255 |==> -255
1182:LOR:&(long,long):^(long,long):org.apache.commons.io.EndianUtils@writeSwappedLong:396:(value >> 32) & 255 |==> (value >> 32) ^ 255
1183:LOR:&(long,long):|(long,long):org.apache.commons.io.EndianUtils@writeSwappedLong:396:(value >> 32) & 255 |==> (value >> 32) | 255
1184:STD:<CALL>:<NO-OP>:org.apache.commons.io.EndianUtils@writeSwappedLong:396:output.write((byte)((value >> 32) & 255)) |==> <NO-OP>
1185:LVR:POS:0:org.apache.commons.io.EndianUtils@writeSwappedLong:397:40 |==> 0
1186:LVR:POS:NEG:org.apache.commons.io.EndianUtils@writeSwappedLong:397:40 |==> -40
1187:SOR:>>(long,int):<<(long,int):org.apache.commons.io.EndianUtils@writeSwappedLong:397:value >> 40 |==> value << 40
1188:SOR:>>(long,int):>>>(long,int):org.apache.commons.io.EndianUtils@writeSwappedLong:397:value >> 40 |==> value >>> 40
1189:LVR:POS:0:org.apache.commons.io.EndianUtils@writeSwappedLong:397:255 |==> 0
1190:LVR:POS:NEG:org.apache.commons.io.EndianUtils@writeSwappedLong:397:255 |==> -255
1191:LOR:&(long,long):^(long,long):org.apache.commons.io.EndianUtils@writeSwappedLong:397:(value >> 40) & 255 |==> (value >> 40) ^ 255
1192:LOR:&(long,long):|(long,long):org.apache.commons.io.EndianUtils@writeSwappedLong:397:(value >> 40) & 255 |==> (value >> 40) | 255
1193:STD:<CALL>:<NO-OP>:org.apache.commons.io.EndianUtils@writeSwappedLong:397:output.write((byte)((value >> 40) & 255)) |==> <NO-OP>
1194:LVR:POS:0:org.apache.commons.io.EndianUtils@writeSwappedLong:398:48 |==> 0
1195:LVR:POS:NEG:org.apache.commons.io.EndianUtils@writeSwappedLong:398:48 |==> -48
1196:SOR:>>(long,int):<<(long,int):org.apache.commons.io.EndianUtils@writeSwappedLong:398:value >> 48 |==> value << 48
1197:SOR:>>(long,int):>>>(long,int):org.apache.commons.io.EndianUtils@writeSwappedLong:398:value >> 48 |==> value >>> 48
1198:LVR:POS:0:org.apache.commons.io.EndianUtils@writeSwappedLong:398:255 |==> 0
1199:LVR:POS:NEG:org.apache.commons.io.EndianUtils@writeSwappedLong:398:255 |==> -255
1200:LOR:&(long,long):^(long,long):org.apache.commons.io.EndianUtils@writeSwappedLong:398:(value >> 48) & 255 |==> (value >> 48) ^ 255
1201:LOR:&(long,long):|(long,long):org.apache.commons.io.EndianUtils@writeSwappedLong:398:(value >> 48) & 255 |==> (value >> 48) | 255
1202:STD:<CALL>:<NO-OP>:org.apache.commons.io.EndianUtils@writeSwappedLong:398:output.write((byte)((value >> 48) & 255)) |==> <NO-OP>
1203:LVR:POS:0:org.apache.commons.io.EndianUtils@writeSwappedLong:399:56 |==> 0
1204:LVR:POS:NEG:org.apache.commons.io.EndianUtils@writeSwappedLong:399:56 |==> -56
1205:SOR:>>(long,int):<<(long,int):org.apache.commons.io.EndianUtils@writeSwappedLong:399:value >> 56 |==> value << 56
1206:SOR:>>(long,int):>>>(long,int):org.apache.commons.io.EndianUtils@writeSwappedLong:399:value >> 56 |==> value >>> 56
1207:LVR:POS:0:org.apache.commons.io.EndianUtils@writeSwappedLong:399:255 |==> 0
1208:LVR:POS:NEG:org.apache.commons.io.EndianUtils@writeSwappedLong:399:255 |==> -255
1209:LOR:&(long,long):^(long,long):org.apache.commons.io.EndianUtils@writeSwappedLong:399:(value >> 56) & 255 |==> (value >> 56) ^ 255
1210:LOR:&(long,long):|(long,long):org.apache.commons.io.EndianUtils@writeSwappedLong:399:(value >> 56) & 255 |==> (value >> 56) | 255
1211:STD:<CALL>:<NO-OP>:org.apache.commons.io.EndianUtils@writeSwappedLong:399:output.write((byte)((value >> 56) & 255)) |==> <NO-OP>
1212:LVR:POS:0:org.apache.commons.io.EndianUtils@readSwappedLong:412:8 |==> 0
1213:LVR:POS:NEG:org.apache.commons.io.EndianUtils@readSwappedLong:412:8 |==> -8
1214:LVR:0:POS:org.apache.commons.io.EndianUtils@readSwappedLong:413:0 |==> 1
1215:LVR:0:NEG:org.apache.commons.io.EndianUtils@readSwappedLong:413:0 |==> -1
1216:LVR:POS:0:org.apache.commons.io.EndianUtils@readSwappedLong:413:8 |==> 0
1217:LVR:POS:NEG:org.apache.commons.io.EndianUtils@readSwappedLong:413:8 |==> -8
1218:ROR:<(int,int):!=(int,int):org.apache.commons.io.EndianUtils@readSwappedLong:413:i < 8 |==> i != 8
1219:ROR:<(int,int):<=(int,int):org.apache.commons.io.EndianUtils@readSwappedLong:413:i < 8 |==> i <= 8
1220:ROR:<(int,int):FALSE(int,int):org.apache.commons.io.EndianUtils@readSwappedLong:413:i < 8 |==> false
1221:LVR:0:POS:org.apache.commons.io.EndianUtils@readSwappedLong:416:0 |==> 1
1222:LVR:0:NEG:org.apache.commons.io.EndianUtils@readSwappedLong:416:0 |==> -1
1223:STD:<CALL>:<NO-OP>:org.apache.commons.io.EndianUtils@writeSwappedFloat:429:writeSwappedInteger(output, Float.floatToIntBits(value)) |==> <NO-OP>
1224:STD:<CALL>:<NO-OP>:org.apache.commons.io.EndianUtils@writeSwappedDouble:455:writeSwappedLong(output, Double.doubleToLongBits(value)) |==> <NO-OP>
1225:LVR:NEG:0:org.apache.commons.io.EndianUtils@read:482:-1 |==> 0
1226:LVR:NEG:POS:org.apache.commons.io.EndianUtils@read:482:-1 |==> 1
1227:ROR:==(int,int):<=(int,int):org.apache.commons.io.EndianUtils@read:482:-1 == value |==> -1 <= value
1228:ROR:==(int,int):>=(int,int):org.apache.commons.io.EndianUtils@read:482:-1 == value |==> -1 >= value
1229:ROR:==(int,int):FALSE(int,int):org.apache.commons.io.EndianUtils@read:482:-1 == value |==> false
1230:STD:<CALL>:<NO-OP>:org.apache.commons.io.FileCleaner@track:58:theInstance.track(file, marker) |==> <NO-OP>
1231:STD:<CALL>:<NO-OP>:org.apache.commons.io.FileCleaner@track:74:theInstance.track(file, marker, deleteStrategy) |==> <NO-OP>
1232:STD:<CALL>:<NO-OP>:org.apache.commons.io.FileCleaner@track:89:theInstance.track(path, marker) |==> <NO-OP>
1233:STD:<CALL>:<NO-OP>:org.apache.commons.io.FileCleaner@track:105:theInstance.track(path, marker, deleteStrategy) |==> <NO-OP>
1234:STD:<CALL>:<NO-OP>:org.apache.commons.io.FileCleaner@exitWhenFinished:145:theInstance.exitWhenFinished() |==> <NO-OP>
1235:LVR:FALSE:TRUE:org.apache.commons.io.FileCleaningTracker:60:false |==> true
1236:STD:<CALL>:<NO-OP>:org.apache.commons.io.FileCleaningTracker@track:77:track(file, marker, (FileDeleteStrategy)null) |==> <NO-OP>
1237:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.io.FileCleaningTracker@track:91:file == null |==> false
1238:STD:<CALL>:<NO-OP>:org.apache.commons.io.FileCleaningTracker@track:94:addTracker(file.getPath(), marker, deleteStrategy) |==> <NO-OP>
1239:STD:<CALL>:<NO-OP>:org.apache.commons.io.FileCleaningTracker@track:107:track(path, marker, (FileDeleteStrategy)null) |==> <NO-OP>
1240:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.io.FileCleaningTracker@track:121:path == null |==> false
1241:STD:<CALL>:<NO-OP>:org.apache.commons.io.FileCleaningTracker@track:124:addTracker(path, marker, deleteStrategy) |==> <NO-OP>
1242:COR:exitWhenFinished:TRUE:org.apache.commons.io.FileCleaningTracker@addTracker:136:exitWhenFinished |==> false
1243:COR:exitWhenFinished:FALSE:org.apache.commons.io.FileCleaningTracker@addTracker:136:exitWhenFinished |==> true
1244:STD:<CALL>:<NO-OP>:org.apache.commons.io.FileCleaningTracker@addTracker:141:reaper.start() |==> <NO-OP>
1245:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.io.FileCleaningTracker@addTracker:139:reaper == null |==> false
1246:STD:<CALL>:<NO-OP>:org.apache.commons.io.FileCleaningTracker@addTracker:143:trackers.add(new Tracker(path, deleteStrategy, marker, q)) |==> <NO-OP>
1247:LVR:TRUE:FALSE:org.apache.commons.io.FileCleaningTracker@exitWhenFinished:190:true |==> false
1248:STD:<CALL>:<NO-OP>:org.apache.commons.io.FileCleaningTracker@exitWhenFinished:193:reaper.interrupt() |==> <NO-OP>
1249:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.apache.commons.io.FileCleaningTracker@exitWhenFinished:191:reaper != null |==> true
1250:STD:<CALL>:<NO-OP>:org.apache.commons.io.FileCleaningTracker$Reaper@<init>:206:setPriority(Thread.MAX_PRIORITY) |==> <NO-OP>
1251:LVR:TRUE:FALSE:org.apache.commons.io.FileCleaningTracker$Reaper@<init>:207:true |==> false
1252:STD:<CALL>:<NO-OP>:org.apache.commons.io.FileCleaningTracker$Reaper@<init>:207:setDaemon(true) |==> <NO-OP>
1253:LVR:FALSE:TRUE:org.apache.commons.io.FileCleaningTracker$Reaper@run:217:false |==> true
1254:ROR:==(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.io.FileCleaningTracker$Reaper@run:217:exitWhenFinished == false |==> false
1255:ROR:==(boolean,boolean):LHS(boolean,boolean):org.apache.commons.io.FileCleaningTracker$Reaper@run:217:exitWhenFinished == false |==> exitWhenFinished
1256:ROR:==(boolean,boolean):RHS(boolean,boolean):org.apache.commons.io.FileCleaningTracker$Reaper@run:217:exitWhenFinished == false |==> false
1257:LVR:0:POS:org.apache.commons.io.FileCleaningTracker$Reaper@run:217:0 |==> 1
1258:LVR:0:NEG:org.apache.commons.io.FileCleaningTracker$Reaper@run:217:0 |==> -1
1259:ROR:>(int,int):!=(int,int):org.apache.commons.io.FileCleaningTracker$Reaper@run:217:trackers.size() > 0 |==> trackers.size() != 0
1260:ROR:>(int,int):>=(int,int):org.apache.commons.io.FileCleaningTracker$Reaper@run:217:trackers.size() > 0 |==> trackers.size() >= 0
1261:ROR:>(int,int):FALSE(int,int):org.apache.commons.io.FileCleaningTracker$Reaper@run:217:trackers.size() > 0 |==> false
1262:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.io.FileCleaningTracker$Reaper@run:217:exitWhenFinished == false || trackers.size() > 0 |==> exitWhenFinished == false != trackers.size() > 0
1263:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.io.FileCleaningTracker$Reaper@run:217:exitWhenFinished == false || trackers.size() > 0 |==> exitWhenFinished == false
1264:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.io.FileCleaningTracker$Reaper@run:217:exitWhenFinished == false || trackers.size() > 0 |==> trackers.size() > 0
1265:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.io.FileCleaningTracker$Reaper@run:217:exitWhenFinished == false || trackers.size() > 0 |==> true
1266:STD:<CALL>:<NO-OP>:org.apache.commons.io.FileCleaningTracker$Reaper@run:221:trackers.remove(tracker) |==> <NO-OP>
1267:STD:<CALL>:<NO-OP>:org.apache.commons.io.FileCleaningTracker$Reaper@run:223:deleteFailures.add(tracker.getPath()) |==> <NO-OP>
1268:STD:<CALL>:<NO-OP>:org.apache.commons.io.FileCleaningTracker$Reaper@run:225:tracker.clear() |==> <NO-OP>
1269:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.io.FileCleaningTracker$Tracker@<init>:259:deleteStrategy == null |==> false
1270:LVR:TRUE:FALSE:org.apache.commons.io.FileDeleteStrategy@deleteQuietly:73:true |==> false
1271:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.io.FileDeleteStrategy@deleteQuietly:72:fileToDelete == null |==> false
1272:LVR:FALSE:TRUE:org.apache.commons.io.FileDeleteStrategy@deleteQuietly:72:false |==> true
1273:ROR:==(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.io.FileDeleteStrategy@deleteQuietly:72:fileToDelete.exists() == false |==> false
1274:ROR:==(boolean,boolean):LHS(boolean,boolean):org.apache.commons.io.FileDeleteStrategy@deleteQuietly:72:fileToDelete.exists() == false |==> fileToDelete.exists()
1275:ROR:==(boolean,boolean):RHS(boolean,boolean):org.apache.commons.io.FileDeleteStrategy@deleteQuietly:72:fileToDelete.exists() == false |==> false
1276:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.io.FileDeleteStrategy@deleteQuietly:72:fileToDelete == null || fileToDelete.exists() == false |==> fileToDelete == null != (fileToDelete.exists() == false)
1277:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.io.FileDeleteStrategy@deleteQuietly:72:fileToDelete == null || fileToDelete.exists() == false |==> fileToDelete == null
1278:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.io.FileDeleteStrategy@deleteQuietly:72:fileToDelete == null || fileToDelete.exists() == false |==> fileToDelete.exists() == false
1279:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.io.FileDeleteStrategy@deleteQuietly:72:fileToDelete == null || fileToDelete.exists() == false |==> true
1280:LVR:FALSE:TRUE:org.apache.commons.io.FileDeleteStrategy@deleteQuietly:78:false |==> true
1281:LVR:FALSE:TRUE:org.apache.commons.io.FileDeleteStrategy@delete:93:false |==> true
1282:ROR:==(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.io.FileDeleteStrategy@delete:93:doDelete(fileToDelete) == false |==> false
1283:ROR:==(boolean,boolean):LHS(boolean,boolean):org.apache.commons.io.FileDeleteStrategy@delete:93:doDelete(fileToDelete) == false |==> doDelete(fileToDelete)
1284:ROR:==(boolean,boolean):RHS(boolean,boolean):org.apache.commons.io.FileDeleteStrategy@delete:93:doDelete(fileToDelete) == false |==> false
1285:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.io.FileDeleteStrategy@delete:93:fileToDelete.exists() && doDelete(fileToDelete) == false |==> fileToDelete.exists() == (doDelete(fileToDelete) == false)
1286:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.io.FileDeleteStrategy@delete:93:fileToDelete.exists() && doDelete(fileToDelete) == false |==> false
1287:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.io.FileDeleteStrategy@delete:93:fileToDelete.exists() && doDelete(fileToDelete) == false |==> fileToDelete.exists()
1288:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.io.FileDeleteStrategy@delete:93:fileToDelete.exists() && doDelete(fileToDelete) == false |==> doDelete(fileToDelete) == false
1289:STD:<CALL>:<NO-OP>:org.apache.commons.io.FileDeleteStrategy$ForceFileDeleteStrategy@doDelete:152:FileUtils.forceDelete(fileToDelete) |==> <NO-OP>
1290:LVR:TRUE:FALSE:org.apache.commons.io.FileDeleteStrategy$ForceFileDeleteStrategy@doDelete:153:true |==> false
1291:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.io.FileSystemUtils:72:osName == null |==> false
1292:LVR:NEG:0:org.apache.commons.io.FileSystemUtils:92:-1 |==> 0
1293:LVR:NEG:POS:org.apache.commons.io.FileSystemUtils:92:-1 |==> 1
1294:ROR:!=(int,int):<(int,int):org.apache.commons.io.FileSystemUtils:92:osName.indexOf("hp-ux") != -1 |==> osName.indexOf("hp-ux") < -1
1295:ROR:!=(int,int):>(int,int):org.apache.commons.io.FileSystemUtils:92:osName.indexOf("hp-ux") != -1 |==> osName.indexOf("hp-ux") > -1
1296:ROR:!=(int,int):TRUE(int,int):org.apache.commons.io.FileSystemUtils:92:osName.indexOf("hp-ux") != -1 |==> true
1297:LVR:NEG:0:org.apache.commons.io.FileSystemUtils:93:-1 |==> 0
1298:LVR:NEG:POS:org.apache.commons.io.FileSystemUtils:93:-1 |==> 1
1299:ROR:!=(int,int):<(int,int):org.apache.commons.io.FileSystemUtils:93:osName.indexOf("aix") != -1 |==> osName.indexOf("aix") < -1
1300:ROR:!=(int,int):>(int,int):org.apache.commons.io.FileSystemUtils:93:osName.indexOf("aix") != -1 |==> osName.indexOf("aix") > -1
1301:ROR:!=(int,int):TRUE(int,int):org.apache.commons.io.FileSystemUtils:93:osName.indexOf("aix") != -1 |==> true
1302:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.io.FileSystemUtils:92:osName.indexOf("hp-ux") != -1 || osName.indexOf("aix") != -1 |==> osName.indexOf("hp-ux") != -1 != (osName.indexOf("aix") != -1)
1303:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.io.FileSystemUtils:92:osName.indexOf("hp-ux") != -1 || osName.indexOf("aix") != -1 |==> osName.indexOf("hp-ux") != -1
1304:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.io.FileSystemUtils:93:osName.indexOf("hp-ux") != -1 || osName.indexOf("aix") != -1 |==> osName.indexOf("aix") != -1
1305:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.io.FileSystemUtils:92:osName.indexOf("hp-ux") != -1 || osName.indexOf("aix") != -1 |==> true
1306:LVR:NEG:0:org.apache.commons.io.FileSystemUtils:87:-1 |==> 0
1307:LVR:NEG:POS:org.apache.commons.io.FileSystemUtils:87:-1 |==> 1
1308:ROR:!=(int,int):<(int,int):org.apache.commons.io.FileSystemUtils:87:osName.indexOf("sun os") != -1 |==> osName.indexOf("sun os") < -1
1309:ROR:!=(int,int):>(int,int):org.apache.commons.io.FileSystemUtils:87:osName.indexOf("sun os") != -1 |==> osName.indexOf("sun os") > -1
1310:ROR:!=(int,int):TRUE(int,int):org.apache.commons.io.FileSystemUtils:87:osName.indexOf("sun os") != -1 |==> true
1311:LVR:NEG:0:org.apache.commons.io.FileSystemUtils:88:-1 |==> 0
1312:LVR:NEG:POS:org.apache.commons.io.FileSystemUtils:88:-1 |==> 1
1313:ROR:!=(int,int):<(int,int):org.apache.commons.io.FileSystemUtils:88:osName.indexOf("sunos") != -1 |==> osName.indexOf("sunos") < -1
1314:ROR:!=(int,int):>(int,int):org.apache.commons.io.FileSystemUtils:88:osName.indexOf("sunos") != -1 |==> osName.indexOf("sunos") > -1
1315:ROR:!=(int,int):TRUE(int,int):org.apache.commons.io.FileSystemUtils:88:osName.indexOf("sunos") != -1 |==> true
1316:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.io.FileSystemUtils:87:osName.indexOf("sun os") != -1 || osName.indexOf("sunos") != -1 |==> osName.indexOf("sun os") != -1 != (osName.indexOf("sunos") != -1)
1317:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.io.FileSystemUtils:87:osName.indexOf("sun os") != -1 || osName.indexOf("sunos") != -1 |==> osName.indexOf("sun os") != -1
1318:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.io.FileSystemUtils:88:osName.indexOf("sun os") != -1 || osName.indexOf("sunos") != -1 |==> osName.indexOf("sunos") != -1
1319:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.io.FileSystemUtils:87:osName.indexOf("sun os") != -1 || osName.indexOf("sunos") != -1 |==> true
1320:LVR:NEG:0:org.apache.commons.io.FileSystemUtils:89:-1 |==> 0
1321:LVR:NEG:POS:org.apache.commons.io.FileSystemUtils:89:-1 |==> 1
1322:ROR:!=(int,int):<(int,int):org.apache.commons.io.FileSystemUtils:89:osName.indexOf("solaris") != -1 |==> osName.indexOf("solaris") < -1
1323:ROR:!=(int,int):>(int,int):org.apache.commons.io.FileSystemUtils:89:osName.indexOf("solaris") != -1 |==> osName.indexOf("solaris") > -1
1324:ROR:!=(int,int):TRUE(int,int):org.apache.commons.io.FileSystemUtils:89:osName.indexOf("solaris") != -1 |==> true
1325:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.io.FileSystemUtils:87:osName.indexOf("sun os") != -1 || osName.indexOf("sunos") != -1 || osName.indexOf("solaris") != -1 |==> (osName.indexOf("sun os") != -1 || osName.indexOf("sunos") != -1) != (osName.indexOf("solaris") != -1)
1326:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.io.FileSystemUtils:87:osName.indexOf("sun os") != -1 || osName.indexOf("sunos") != -1 || osName.indexOf("solaris") != -1 |==> osName.indexOf("sun os") != -1 || osName.indexOf("sunos") != -1
1327:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.io.FileSystemUtils:89:osName.indexOf("sun os") != -1 || osName.indexOf("sunos") != -1 || osName.indexOf("solaris") != -1 |==> osName.indexOf("solaris") != -1
1328:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.io.FileSystemUtils:88:osName.indexOf("sun os") != -1 || osName.indexOf("sunos") != -1 || osName.indexOf("solaris") != -1 |==> true
1329:LVR:NEG:0:org.apache.commons.io.FileSystemUtils:79:-1 |==> 0
1330:LVR:NEG:POS:org.apache.commons.io.FileSystemUtils:79:-1 |==> 1
1331:ROR:!=(int,int):<(int,int):org.apache.commons.io.FileSystemUtils:79:osName.indexOf("linux") != -1 |==> osName.indexOf("linux") < -1
1332:ROR:!=(int,int):>(int,int):org.apache.commons.io.FileSystemUtils:79:osName.indexOf("linux") != -1 |==> osName.indexOf("linux") > -1
1333:ROR:!=(int,int):TRUE(int,int):org.apache.commons.io.FileSystemUtils:79:osName.indexOf("linux") != -1 |==> true
1334:LVR:NEG:0:org.apache.commons.io.FileSystemUtils:80:-1 |==> 0
1335:LVR:NEG:POS:org.apache.commons.io.FileSystemUtils:80:-1 |==> 1
1336:ROR:!=(int,int):<(int,int):org.apache.commons.io.FileSystemUtils:80:osName.indexOf("mpe/ix") != -1 |==> osName.indexOf("mpe/ix") < -1
1337:ROR:!=(int,int):>(int,int):org.apache.commons.io.FileSystemUtils:80:osName.indexOf("mpe/ix") != -1 |==> osName.indexOf("mpe/ix") > -1
1338:ROR:!=(int,int):TRUE(int,int):org.apache.commons.io.FileSystemUtils:80:osName.indexOf("mpe/ix") != -1 |==> true
1339:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.io.FileSystemUtils:79:osName.indexOf("linux") != -1 || osName.indexOf("mpe/ix") != -1 |==> osName.indexOf("linux") != -1 != (osName.indexOf("mpe/ix") != -1)
1340:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.io.FileSystemUtils:79:osName.indexOf("linux") != -1 || osName.indexOf("mpe/ix") != -1 |==> osName.indexOf("linux") != -1
1341:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.io.FileSystemUtils:80:osName.indexOf("linux") != -1 || osName.indexOf("mpe/ix") != -1 |==> osName.indexOf("mpe/ix") != -1
1342:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.io.FileSystemUtils:79:osName.indexOf("linux") != -1 || osName.indexOf("mpe/ix") != -1 |==> true
1343:LVR:NEG:0:org.apache.commons.io.FileSystemUtils:81:-1 |==> 0
1344:LVR:NEG:POS:org.apache.commons.io.FileSystemUtils:81:-1 |==> 1
1345:ROR:!=(int,int):<(int,int):org.apache.commons.io.FileSystemUtils:81:osName.indexOf("freebsd") != -1 |==> osName.indexOf("freebsd") < -1
1346:ROR:!=(int,int):>(int,int):org.apache.commons.io.FileSystemUtils:81:osName.indexOf("freebsd") != -1 |==> osName.indexOf("freebsd") > -1
1347:ROR:!=(int,int):TRUE(int,int):org.apache.commons.io.FileSystemUtils:81:osName.indexOf("freebsd") != -1 |==> true
1348:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.io.FileSystemUtils:79:osName.indexOf("linux") != -1 || osName.indexOf("mpe/ix") != -1 || osName.indexOf("freebsd") != -1 |==> (osName.indexOf("linux") != -1 || osName.indexOf("mpe/ix") != -1) != (osName.indexOf("freebsd") != -1)
1349:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.io.FileSystemUtils:79:osName.indexOf("linux") != -1 || osName.indexOf("mpe/ix") != -1 || osName.indexOf("freebsd") != -1 |==> osName.indexOf("linux") != -1 || osName.indexOf("mpe/ix") != -1
1350:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.io.FileSystemUtils:81:osName.indexOf("linux") != -1 || osName.indexOf("mpe/ix") != -1 || osName.indexOf("freebsd") != -1 |==> osName.indexOf("freebsd") != -1
1351:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.io.FileSystemUtils:80:osName.indexOf("linux") != -1 || osName.indexOf("mpe/ix") != -1 || osName.indexOf("freebsd") != -1 |==> true
1352:LVR:NEG:0:org.apache.commons.io.FileSystemUtils:82:-1 |==> 0
1353:LVR:NEG:POS:org.apache.commons.io.FileSystemUtils:82:-1 |==> 1
1354:ROR:!=(int,int):<(int,int):org.apache.commons.io.FileSystemUtils:82:osName.indexOf("irix") != -1 |==> osName.indexOf("irix") < -1
1355:ROR:!=(int,int):>(int,int):org.apache.commons.io.FileSystemUtils:82:osName.indexOf("irix") != -1 |==> osName.indexOf("irix") > -1
1356:ROR:!=(int,int):TRUE(int,int):org.apache.commons.io.FileSystemUtils:82:osName.indexOf("irix") != -1 |==> true
1357:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.io.FileSystemUtils:79:osName.indexOf("linux") != -1 || osName.indexOf("mpe/ix") != -1 || osName.indexOf("freebsd") != -1 || osName.indexOf("irix") != -1 |==> (osName.indexOf("linux") != -1 || osName.indexOf("mpe/ix") != -1 || osName.indexOf("freebsd") != -1) != (osName.indexOf("irix") != -1)
1358:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.io.FileSystemUtils:79:osName.indexOf("linux") != -1 || osName.indexOf("mpe/ix") != -1 || osName.indexOf("freebsd") != -1 || osName.indexOf("irix") != -1 |==> osName.indexOf("linux") != -1 || osName.indexOf("mpe/ix") != -1 || osName.indexOf("freebsd") != -1
1359:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.io.FileSystemUtils:82:osName.indexOf("linux") != -1 || osName.indexOf("mpe/ix") != -1 || osName.indexOf("freebsd") != -1 || osName.indexOf("irix") != -1 |==> osName.indexOf("irix") != -1
1360:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.io.FileSystemUtils:81:osName.indexOf("linux") != -1 || osName.indexOf("mpe/ix") != -1 || osName.indexOf("freebsd") != -1 || osName.indexOf("irix") != -1 |==> true
1361:LVR:NEG:0:org.apache.commons.io.FileSystemUtils:83:-1 |==> 0
1362:LVR:NEG:POS:org.apache.commons.io.FileSystemUtils:83:-1 |==> 1
1363:ROR:!=(int,int):<(int,int):org.apache.commons.io.FileSystemUtils:83:osName.indexOf("digital unix") != -1 |==> osName.indexOf("digital unix") < -1
1364:ROR:!=(int,int):>(int,int):org.apache.commons.io.FileSystemUtils:83:osName.indexOf("digital unix") != -1 |==> osName.indexOf("digital unix") > -1
1365:ROR:!=(int,int):TRUE(int,int):org.apache.commons.io.FileSystemUtils:83:osName.indexOf("digital unix") != -1 |==> true
1366:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.io.FileSystemUtils:79:osName.indexOf("linux") != -1 || osName.indexOf("mpe/ix") != -1 || osName.indexOf("freebsd") != -1 || osName.indexOf("irix") != -1 || osName.indexOf("digital unix") != -1 |==> (osName.indexOf("linux") != -1 || osName.indexOf("mpe/ix") != -1 || osName.indexOf("freebsd") != -1 || osName.indexOf("irix") != -1) != (osName.indexOf("digital unix") != -1)
1367:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.io.FileSystemUtils:79:osName.indexOf("linux") != -1 || osName.indexOf("mpe/ix") != -1 || osName.indexOf("freebsd") != -1 || osName.indexOf("irix") != -1 || osName.indexOf("digital unix") != -1 |==> osName.indexOf("linux") != -1 || osName.indexOf("mpe/ix") != -1 || osName.indexOf("freebsd") != -1 || osName.indexOf("irix") != -1
1368:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.io.FileSystemUtils:83:osName.indexOf("linux") != -1 || osName.indexOf("mpe/ix") != -1 || osName.indexOf("freebsd") != -1 || osName.indexOf("irix") != -1 || osName.indexOf("digital unix") != -1 |==> osName.indexOf("digital unix") != -1
1369:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.io.FileSystemUtils:82:osName.indexOf("linux") != -1 || osName.indexOf("mpe/ix") != -1 || osName.indexOf("freebsd") != -1 || osName.indexOf("irix") != -1 || osName.indexOf("digital unix") != -1 |==> true
1370:LVR:NEG:0:org.apache.commons.io.FileSystemUtils:84:-1 |==> 0
1371:LVR:NEG:POS:org.apache.commons.io.FileSystemUtils:84:-1 |==> 1
1372:ROR:!=(int,int):<(int,int):org.apache.commons.io.FileSystemUtils:84:osName.indexOf("unix") != -1 |==> osName.indexOf("unix") < -1
1373:ROR:!=(int,int):>(int,int):org.apache.commons.io.FileSystemUtils:84:osName.indexOf("unix") != -1 |==> osName.indexOf("unix") > -1
1374:ROR:!=(int,int):TRUE(int,int):org.apache.commons.io.FileSystemUtils:84:osName.indexOf("unix") != -1 |==> true
1375:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.io.FileSystemUtils:79:osName.indexOf("linux") != -1 || osName.indexOf("mpe/ix") != -1 || osName.indexOf("freebsd") != -1 || osName.indexOf("irix") != -1 || osName.indexOf("digital unix") != -1 || osName.indexOf("unix") != -1 |==> (osName.indexOf("linux") != -1 || osName.indexOf("mpe/ix") != -1 || osName.indexOf("freebsd") != -1 || osName.indexOf("irix") != -1 || osName.indexOf("digital unix") != -1) != (osName.indexOf("unix") != -1)
1376:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.io.FileSystemUtils:79:osName.indexOf("linux") != -1 || osName.indexOf("mpe/ix") != -1 || osName.indexOf("freebsd") != -1 || osName.indexOf("irix") != -1 || osName.indexOf("digital unix") != -1 || osName.indexOf("unix") != -1 |==> osName.indexOf("linux") != -1 || osName.indexOf("mpe/ix") != -1 || osName.indexOf("freebsd") != -1 || osName.indexOf("irix") != -1 || osName.indexOf("digital unix") != -1
1377:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.io.FileSystemUtils:84:osName.indexOf("linux") != -1 || osName.indexOf("mpe/ix") != -1 || osName.indexOf("freebsd") != -1 || osName.indexOf("irix") != -1 || osName.indexOf("digital unix") != -1 || osName.indexOf("unix") != -1 |==> osName.indexOf("unix") != -1
1378:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.io.FileSystemUtils:83:osName.indexOf("linux") != -1 || osName.indexOf("mpe/ix") != -1 || osName.indexOf("freebsd") != -1 || osName.indexOf("irix") != -1 || osName.indexOf("digital unix") != -1 || osName.indexOf("unix") != -1 |==> true
1379:LVR:NEG:0:org.apache.commons.io.FileSystemUtils:85:-1 |==> 0
1380:LVR:NEG:POS:org.apache.commons.io.FileSystemUtils:85:-1 |==> 1
1381:ROR:!=(int,int):<(int,int):org.apache.commons.io.FileSystemUtils:85:osName.indexOf("mac os x") != -1 |==> osName.indexOf("mac os x") < -1
1382:ROR:!=(int,int):>(int,int):org.apache.commons.io.FileSystemUtils:85:osName.indexOf("mac os x") != -1 |==> osName.indexOf("mac os x") > -1
1383:ROR:!=(int,int):TRUE(int,int):org.apache.commons.io.FileSystemUtils:85:osName.indexOf("mac os x") != -1 |==> true
1384:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.io.FileSystemUtils:79:osName.indexOf("linux") != -1 || osName.indexOf("mpe/ix") != -1 || osName.indexOf("freebsd") != -1 || osName.indexOf("irix") != -1 || osName.indexOf("digital unix") != -1 || osName.indexOf("unix") != -1 || osName.indexOf("mac os x") != -1 |==> (osName.indexOf("linux") != -1 || osName.indexOf("mpe/ix") != -1 || osName.indexOf("freebsd") != -1 || osName.indexOf("irix") != -1 || osName.indexOf("digital unix") != -1 || osName.indexOf("unix") != -1) != (osName.indexOf("mac os x") != -1)
1385:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.io.FileSystemUtils:79:osName.indexOf("linux") != -1 || osName.indexOf("mpe/ix") != -1 || osName.indexOf("freebsd") != -1 || osName.indexOf("irix") != -1 || osName.indexOf("digital unix") != -1 || osName.indexOf("unix") != -1 || osName.indexOf("mac os x") != -1 |==> osName.indexOf("linux") != -1 || osName.indexOf("mpe/ix") != -1 || osName.indexOf("freebsd") != -1 || osName.indexOf("irix") != -1 || osName.indexOf("digital unix") != -1 || osName.indexOf("unix") != -1
1386:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.io.FileSystemUtils:85:osName.indexOf("linux") != -1 || osName.indexOf("mpe/ix") != -1 || osName.indexOf("freebsd") != -1 || osName.indexOf("irix") != -1 || osName.indexOf("digital unix") != -1 || osName.indexOf("unix") != -1 || osName.indexOf("mac os x") != -1 |==> osName.indexOf("mac os x") != -1
1387:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.io.FileSystemUtils:84:osName.indexOf("linux") != -1 || osName.indexOf("mpe/ix") != -1 || osName.indexOf("freebsd") != -1 || osName.indexOf("irix") != -1 || osName.indexOf("digital unix") != -1 || osName.indexOf("unix") != -1 || osName.indexOf("mac os x") != -1 |==> true
1388:LVR:NEG:0:org.apache.commons.io.FileSystemUtils:77:-1 |==> 0
1389:LVR:NEG:POS:org.apache.commons.io.FileSystemUtils:77:-1 |==> 1
1390:ROR:!=(int,int):<(int,int):org.apache.commons.io.FileSystemUtils:77:osName.indexOf("windows") != -1 |==> osName.indexOf("windows") < -1
1391:ROR:!=(int,int):>(int,int):org.apache.commons.io.FileSystemUtils:77:osName.indexOf("windows") != -1 |==> osName.indexOf("windows") > -1
1392:ROR:!=(int,int):TRUE(int,int):org.apache.commons.io.FileSystemUtils:77:osName.indexOf("windows") != -1 |==> true
1393:LVR:FALSE:TRUE:org.apache.commons.io.FileSystemUtils@freeSpace:142:false |==> true
1394:LVR:NEG:0:org.apache.commons.io.FileSystemUtils@freeSpace:142:-1 |==> 0
1395:LVR:NEG:POS:org.apache.commons.io.FileSystemUtils@freeSpace:142:-1 |==> 1
1396:LVR:NEG:0:org.apache.commons.io.FileSystemUtils@freeSpaceKb:171:-1 |==> 0
1397:LVR:NEG:POS:org.apache.commons.io.FileSystemUtils@freeSpaceKb:171:-1 |==> 1
1398:LVR:TRUE:FALSE:org.apache.commons.io.FileSystemUtils@freeSpaceKb:200:true |==> false
1399:LVR:NEG:0:org.apache.commons.io.FileSystemUtils@freeSpaceKb:216:-1 |==> 0
1400:LVR:NEG:POS:org.apache.commons.io.FileSystemUtils@freeSpaceKb:216:-1 |==> 1
1401:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.io.FileSystemUtils@freeSpaceOS:259:path == null |==> false
1402:AOR:/(long,long):%(long,long):org.apache.commons.io.FileSystemUtils@freeSpaceOS:264:freeSpaceWindows(path, timeout) / FileUtils.ONE_KB |==> freeSpaceWindows(path, timeout) % FileUtils.ONE_KB
1403:AOR:/(long,long):*(long,long):org.apache.commons.io.FileSystemUtils@freeSpaceOS:264:freeSpaceWindows(path, timeout) / FileUtils.ONE_KB |==> freeSpaceWindows(path, timeout) * FileUtils.ONE_KB
1404:AOR:/(long,long):+(long,long):org.apache.commons.io.FileSystemUtils@freeSpaceOS:264:freeSpaceWindows(path, timeout) / FileUtils.ONE_KB |==> freeSpaceWindows(path, timeout) + FileUtils.ONE_KB
1405:AOR:/(long,long):-(long,long):org.apache.commons.io.FileSystemUtils@freeSpaceOS:264:freeSpaceWindows(path, timeout) / FileUtils.ONE_KB |==> freeSpaceWindows(path, timeout) - FileUtils.ONE_KB
1406:LVR:FALSE:TRUE:org.apache.commons.io.FileSystemUtils@freeSpaceOS:266:false |==> true
1407:LVR:TRUE:FALSE:org.apache.commons.io.FileSystemUtils@freeSpaceOS:268:true |==> false
1408:LVR:FALSE:TRUE:org.apache.commons.io.FileSystemUtils@freeSpaceWindows:288:false |==> true
1409:LVR:0:POS:org.apache.commons.io.FileSystemUtils@freeSpaceWindows:289:0 |==> 1
1410:LVR:0:NEG:org.apache.commons.io.FileSystemUtils@freeSpaceWindows:289:0 |==> -1
1411:ROR:>(int,int):!=(int,int):org.apache.commons.io.FileSystemUtils@freeSpaceWindows:289:path.length() > 0 |==> path.length() != 0
1412:ROR:>(int,int):>=(int,int):org.apache.commons.io.FileSystemUtils@freeSpaceWindows:289:path.length() > 0 |==> path.length() >= 0
1413:ROR:>(int,int):FALSE(int,int):org.apache.commons.io.FileSystemUtils@freeSpaceWindows:289:path.length() > 0 |==> false
1414:LVR:0:POS:org.apache.commons.io.FileSystemUtils@freeSpaceWindows:289:0 |==> 1
1415:LVR:0:NEG:org.apache.commons.io.FileSystemUtils@freeSpaceWindows:289:0 |==> -1
1416:ROR:!=(int,int):<(int,int):org.apache.commons.io.FileSystemUtils@freeSpaceWindows:289:path.charAt(0) != '\"' |==> path.charAt(0) < '\"'
1417:ROR:!=(int,int):>(int,int):org.apache.commons.io.FileSystemUtils@freeSpaceWindows:289:path.charAt(0) != '\"' |==> path.charAt(0) > '\"'
1418:ROR:!=(int,int):TRUE(int,int):org.apache.commons.io.FileSystemUtils@freeSpaceWindows:289:path.charAt(0) != '\"' |==> true
1419:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.io.FileSystemUtils@freeSpaceWindows:289:path.length() > 0 && path.charAt(0) != '\"' |==> path.length() > 0 == (path.charAt(0) != '\"')
1420:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.io.FileSystemUtils@freeSpaceWindows:289:path.length() > 0 && path.charAt(0) != '\"' |==> false
1421:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.io.FileSystemUtils@freeSpaceWindows:289:path.length() > 0 && path.charAt(0) != '\"' |==> path.length() > 0
1422:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.io.FileSystemUtils@freeSpaceWindows:289:path.length() > 0 && path.charAt(0) != '\"' |==> path.charAt(0) != '\"'
1423:LVR:POS:0:org.apache.commons.io.FileSystemUtils@freeSpaceWindows:303:1 |==> 0
1424:LVR:POS:NEG:org.apache.commons.io.FileSystemUtils@freeSpaceWindows:303:1 |==> -1
1425:AOR:-(int,int):%(int,int):org.apache.commons.io.FileSystemUtils@freeSpaceWindows:303:lines.size() - 1 |==> lines.size() % 1
1426:AOR:-(int,int):*(int,int):org.apache.commons.io.FileSystemUtils@freeSpaceWindows:303:lines.size() - 1 |==> lines.size() * 1
1427:AOR:-(int,int):+(int,int):org.apache.commons.io.FileSystemUtils@freeSpaceWindows:303:lines.size() - 1 |==> lines.size() + 1
1428:AOR:-(int,int):/(int,int):org.apache.commons.io.FileSystemUtils@freeSpaceWindows:303:lines.size() - 1 |==> lines.size() / 1
1429:LVR:0:POS:org.apache.commons.io.FileSystemUtils@freeSpaceWindows:303:0 |==> 1
1430:LVR:0:NEG:org.apache.commons.io.FileSystemUtils@freeSpaceWindows:303:0 |==> -1
1431:ROR:>=(int,int):==(int,int):org.apache.commons.io.FileSystemUtils@freeSpaceWindows:303:i >= 0 |==> i == 0
1432:ROR:>=(int,int):>(int,int):org.apache.commons.io.FileSystemUtils@freeSpaceWindows:303:i >= 0 |==> i > 0
1433:ROR:>=(int,int):TRUE(int,int):org.apache.commons.io.FileSystemUtils@freeSpaceWindows:303:i >= 0 |==> true
1434:LVR:0:POS:org.apache.commons.io.FileSystemUtils@freeSpaceWindows:305:0 |==> 1
1435:LVR:0:NEG:org.apache.commons.io.FileSystemUtils@freeSpaceWindows:305:0 |==> -1
1436:ROR:>(int,int):!=(int,int):org.apache.commons.io.FileSystemUtils@freeSpaceWindows:305:line.length() > 0 |==> line.length() != 0
1437:ROR:>(int,int):>=(int,int):org.apache.commons.io.FileSystemUtils@freeSpaceWindows:305:line.length() > 0 |==> line.length() >= 0
1438:ROR:>(int,int):FALSE(int,int):org.apache.commons.io.FileSystemUtils@freeSpaceWindows:305:line.length() > 0 |==> false
1439:LVR:0:POS:org.apache.commons.io.FileSystemUtils@parseDir:328:0 |==> 1
1440:LVR:0:NEG:org.apache.commons.io.FileSystemUtils@parseDir:328:0 |==> -1
1441:LVR:0:POS:org.apache.commons.io.FileSystemUtils@parseDir:329:0 |==> 1
1442:LVR:0:NEG:org.apache.commons.io.FileSystemUtils@parseDir:329:0 |==> -1
1443:LVR:POS:0:org.apache.commons.io.FileSystemUtils@parseDir:330:1 |==> 0
1444:LVR:POS:NEG:org.apache.commons.io.FileSystemUtils@parseDir:330:1 |==> -1
1445:AOR:-(int,int):%(int,int):org.apache.commons.io.FileSystemUtils@parseDir:330:line.length() - 1 |==> line.length() % 1
1446:AOR:-(int,int):*(int,int):org.apache.commons.io.FileSystemUtils@parseDir:330:line.length() - 1 |==> line.length() * 1
1447:AOR:-(int,int):+(int,int):org.apache.commons.io.FileSystemUtils@parseDir:330:line.length() - 1 |==> line.length() + 1
1448:AOR:-(int,int):/(int,int):org.apache.commons.io.FileSystemUtils@parseDir:330:line.length() - 1 |==> line.length() / 1
1449:LVR:0:POS:org.apache.commons.io.FileSystemUtils@parseDir:331:0 |==> 1
1450:LVR:0:NEG:org.apache.commons.io.FileSystemUtils@parseDir:331:0 |==> -1
1451:ROR:>=(int,int):==(int,int):org.apache.commons.io.FileSystemUtils@parseDir:331:j >= 0 |==> j == 0
1452:ROR:>=(int,int):>(int,int):org.apache.commons.io.FileSystemUtils@parseDir:331:j >= 0 |==> j > 0
1453:ROR:>=(int,int):TRUE(int,int):org.apache.commons.io.FileSystemUtils@parseDir:331:j >= 0 |==> true
1454:LVR:POS:0:org.apache.commons.io.FileSystemUtils@parseDir:336:1 |==> 0
1455:LVR:POS:NEG:org.apache.commons.io.FileSystemUtils@parseDir:336:1 |==> -1
1456:AOR:+(int,int):%(int,int):org.apache.commons.io.FileSystemUtils@parseDir:336:j + 1 |==> j % 1
1457:AOR:+(int,int):*(int,int):org.apache.commons.io.FileSystemUtils@parseDir:336:j + 1 |==> j * 1
1458:AOR:+(int,int):-(int,int):org.apache.commons.io.FileSystemUtils@parseDir:336:j + 1 |==> j - 1
1459:AOR:+(int,int):/(int,int):org.apache.commons.io.FileSystemUtils@parseDir:336:j + 1 |==> j / 1
1460:COR:Character.isDigit(c):TRUE:org.apache.commons.io.FileSystemUtils@parseDir:333:Character.isDigit(c) |==> false
1461:COR:Character.isDigit(c):FALSE:org.apache.commons.io.FileSystemUtils@parseDir:333:Character.isDigit(c) |==> true
1462:STD:<INC/DEC>:<NO-OP>:org.apache.commons.io.FileSystemUtils@parseDir:339:j-- |==> <NO-OP>
1463:LVR:0:POS:org.apache.commons.io.FileSystemUtils@parseDir:341:0 |==> 1
1464:LVR:0:NEG:org.apache.commons.io.FileSystemUtils@parseDir:341:0 |==> -1
1465:ROR:>=(int,int):==(int,int):org.apache.commons.io.FileSystemUtils@parseDir:341:j >= 0 |==> j == 0
1466:ROR:>=(int,int):>(int,int):org.apache.commons.io.FileSystemUtils@parseDir:341:j >= 0 |==> j > 0
1467:ROR:>=(int,int):TRUE(int,int):org.apache.commons.io.FileSystemUtils@parseDir:341:j >= 0 |==> true
1468:LVR:POS:0:org.apache.commons.io.FileSystemUtils@parseDir:346:1 |==> 0
1469:LVR:POS:NEG:org.apache.commons.io.FileSystemUtils@parseDir:346:1 |==> -1
1470:AOR:+(int,int):%(int,int):org.apache.commons.io.FileSystemUtils@parseDir:346:j + 1 |==> j % 1
1471:AOR:+(int,int):*(int,int):org.apache.commons.io.FileSystemUtils@parseDir:346:j + 1 |==> j * 1
1472:AOR:+(int,int):-(int,int):org.apache.commons.io.FileSystemUtils@parseDir:346:j + 1 |==> j - 1
1473:AOR:+(int,int):/(int,int):org.apache.commons.io.FileSystemUtils@parseDir:346:j + 1 |==> j / 1
1474:ROR:!=(int,int):<(int,int):org.apache.commons.io.FileSystemUtils@parseDir:343:c != ',' |==> c < ','
1475:ROR:!=(int,int):>(int,int):org.apache.commons.io.FileSystemUtils@parseDir:343:c != ',' |==> c > ','
1476:ROR:!=(int,int):TRUE(int,int):org.apache.commons.io.FileSystemUtils@parseDir:343:c != ',' |==> true
1477:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.io.FileSystemUtils@parseDir:343:!Character.isDigit(c) && c != ',' |==> !Character.isDigit(c) == (c != ',')
1478:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.io.FileSystemUtils@parseDir:343:!Character.isDigit(c) && c != ',' |==> false
1479:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.io.FileSystemUtils@parseDir:343:!Character.isDigit(c) && c != ',' |==> !Character.isDigit(c)
1480:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.io.FileSystemUtils@parseDir:343:!Character.isDigit(c) && c != ',' |==> c != ','
1481:ROR:!=(int,int):<(int,int):org.apache.commons.io.FileSystemUtils@parseDir:343:c != '.' |==> c < '.'
1482:ROR:!=(int,int):>(int,int):org.apache.commons.io.FileSystemUtils@parseDir:343:c != '.' |==> c > '.'
1483:ROR:!=(int,int):TRUE(int,int):org.apache.commons.io.FileSystemUtils@parseDir:343:c != '.' |==> true
1484:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.io.FileSystemUtils@parseDir:343:!Character.isDigit(c) && c != ',' && c != '.' |==> (!Character.isDigit(c) && c != ',') == (c != '.')
1485:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.io.FileSystemUtils@parseDir:343:!Character.isDigit(c) && c != ',' && c != '.' |==> false
1486:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.io.FileSystemUtils@parseDir:343:!Character.isDigit(c) && c != ',' && c != '.' |==> !Character.isDigit(c) && c != ','
1487:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.io.FileSystemUtils@parseDir:343:!Character.isDigit(c) && c != ',' && c != '.' |==> c != '.'
1488:STD:<INC/DEC>:<NO-OP>:org.apache.commons.io.FileSystemUtils@parseDir:349:j-- |==> <NO-OP>
1489:LVR:0:POS:org.apache.commons.io.FileSystemUtils@parseDir:351:0 |==> 1
1490:LVR:0:NEG:org.apache.commons.io.FileSystemUtils@parseDir:351:0 |==> -1
1491:ROR:<(int,int):!=(int,int):org.apache.commons.io.FileSystemUtils@parseDir:351:j < 0 |==> j != 0
1492:ROR:<(int,int):<=(int,int):org.apache.commons.io.FileSystemUtils@parseDir:351:j < 0 |==> j <= 0
1493:ROR:<(int,int):FALSE(int,int):org.apache.commons.io.FileSystemUtils@parseDir:351:j < 0 |==> false
1494:LVR:0:POS:org.apache.commons.io.FileSystemUtils@parseDir:359:0 |==> 1
1495:LVR:0:NEG:org.apache.commons.io.FileSystemUtils@parseDir:359:0 |==> -1
1496:ROR:<(int,int):!=(int,int):org.apache.commons.io.FileSystemUtils@parseDir:359:k < buf.length() |==> k != buf.length()
1497:ROR:<(int,int):<=(int,int):org.apache.commons.io.FileSystemUtils@parseDir:359:k < buf.length() |==> k <= buf.length()
1498:ROR:<(int,int):FALSE(int,int):org.apache.commons.io.FileSystemUtils@parseDir:359:k < buf.length() |==> false
1499:STD:<CALL>:<NO-OP>:org.apache.commons.io.FileSystemUtils@parseDir:361:buf.deleteCharAt(k--) |==> <NO-OP>
1500:ROR:==(int,int):<=(int,int):org.apache.commons.io.FileSystemUtils@parseDir:360:buf.charAt(k) == ',' |==> buf.charAt(k) <= ','
1501:ROR:==(int,int):>=(int,int):org.apache.commons.io.FileSystemUtils@parseDir:360:buf.charAt(k) == ',' |==> buf.charAt(k) >= ','
1502:ROR:==(int,int):FALSE(int,int):org.apache.commons.io.FileSystemUtils@parseDir:360:buf.charAt(k) == ',' |==> false
1503:ROR:==(int,int):<=(int,int):org.apache.commons.io.FileSystemUtils@parseDir:360:buf.charAt(k) == '.' |==> buf.charAt(k) <= '.'
1504:ROR:==(int,int):>=(int,int):org.apache.commons.io.FileSystemUtils@parseDir:360:buf.charAt(k) == '.' |==> buf.charAt(k) >= '.'
1505:ROR:==(int,int):FALSE(int,int):org.apache.commons.io.FileSystemUtils@parseDir:360:buf.charAt(k) == '.' |==> false
1506:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.io.FileSystemUtils@parseDir:360:buf.charAt(k) == ',' || buf.charAt(k) == '.' |==> buf.charAt(k) == ',' != (buf.charAt(k) == '.')
1507:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.io.FileSystemUtils@parseDir:360:buf.charAt(k) == ',' || buf.charAt(k) == '.' |==> buf.charAt(k) == ','
1508:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.io.FileSystemUtils@parseDir:360:buf.charAt(k) == ',' || buf.charAt(k) == '.' |==> buf.charAt(k) == '.'
1509:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.io.FileSystemUtils@parseDir:360:buf.charAt(k) == ',' || buf.charAt(k) == '.' |==> true
1510:LVR:0:POS:org.apache.commons.io.FileSystemUtils@freeSpaceUnix:380:0 |==> 1
1511:LVR:0:NEG:org.apache.commons.io.FileSystemUtils@freeSpaceUnix:380:0 |==> -1
1512:ROR:==(int,int):<=(int,int):org.apache.commons.io.FileSystemUtils@freeSpaceUnix:380:path.length() == 0 |==> path.length() <= 0
1513:ROR:==(int,int):>=(int,int):org.apache.commons.io.FileSystemUtils@freeSpaceUnix:380:path.length() == 0 |==> path.length() >= 0
1514:ROR:==(int,int):FALSE(int,int):org.apache.commons.io.FileSystemUtils@freeSpaceUnix:380:path.length() == 0 |==> false
1515:STD:<ASSIGN>:<NO-OP>:org.apache.commons.io.FileSystemUtils@freeSpaceUnix:387:flags += "k" |==> <NO-OP>
1516:COR:kb:TRUE:org.apache.commons.io.FileSystemUtils@freeSpaceUnix:386:kb |==> false
1517:COR:kb:FALSE:org.apache.commons.io.FileSystemUtils@freeSpaceUnix:386:kb |==> true
1518:STD:<ASSIGN>:<NO-OP>:org.apache.commons.io.FileSystemUtils@freeSpaceUnix:390:flags += "P" |==> <NO-OP>
1519:COR:posix:TRUE:org.apache.commons.io.FileSystemUtils@freeSpaceUnix:389:posix |==> false
1520:COR:posix:FALSE:org.apache.commons.io.FileSystemUtils@freeSpaceUnix:389:posix |==> true
1521:LVR:POS:0:org.apache.commons.io.FileSystemUtils@freeSpaceUnix:393:1 |==> 0
1522:LVR:POS:NEG:org.apache.commons.io.FileSystemUtils@freeSpaceUnix:393:1 |==> -1
1523:ROR:>(int,int):!=(int,int):org.apache.commons.io.FileSystemUtils@freeSpaceUnix:393:flags.length() > 1 |==> flags.length() != 1
1524:ROR:>(int,int):>=(int,int):org.apache.commons.io.FileSystemUtils@freeSpaceUnix:393:flags.length() > 1 |==> flags.length() >= 1
1525:ROR:>(int,int):FALSE(int,int):org.apache.commons.io.FileSystemUtils@freeSpaceUnix:393:flags.length() > 1 |==> false
1526:LVR:POS:0:org.apache.commons.io.FileSystemUtils@freeSpaceUnix:396:3 |==> 0
1527:LVR:POS:NEG:org.apache.commons.io.FileSystemUtils@freeSpaceUnix:396:3 |==> -3
1528:LVR:POS:0:org.apache.commons.io.FileSystemUtils@freeSpaceUnix:397:2 |==> 0
1529:LVR:POS:NEG:org.apache.commons.io.FileSystemUtils@freeSpaceUnix:397:2 |==> -2
1530:ROR:<(int,int):!=(int,int):org.apache.commons.io.FileSystemUtils@freeSpaceUnix:397:lines.size() < 2 |==> lines.size() != 2
1531:ROR:<(int,int):<=(int,int):org.apache.commons.io.FileSystemUtils@freeSpaceUnix:397:lines.size() < 2 |==> lines.size() <= 2
1532:ROR:<(int,int):FALSE(int,int):org.apache.commons.io.FileSystemUtils@freeSpaceUnix:397:lines.size() < 2 |==> false
1533:LVR:POS:0:org.apache.commons.io.FileSystemUtils@freeSpaceUnix:403:1 |==> 0
1534:LVR:POS:NEG:org.apache.commons.io.FileSystemUtils@freeSpaceUnix:403:1 |==> -1
1535:LVR:POS:0:org.apache.commons.io.FileSystemUtils@freeSpaceUnix:410:2 |==> 0
1536:LVR:POS:NEG:org.apache.commons.io.FileSystemUtils@freeSpaceUnix:410:2 |==> -2
1537:LVR:POS:0:org.apache.commons.io.FileSystemUtils@freeSpaceUnix:409:1 |==> 0
1538:LVR:POS:NEG:org.apache.commons.io.FileSystemUtils@freeSpaceUnix:409:1 |==> -1
1539:ROR:==(int,int):<=(int,int):org.apache.commons.io.FileSystemUtils@freeSpaceUnix:409:tok.countTokens() == 1 |==> tok.countTokens() <= 1
1540:ROR:==(int,int):>=(int,int):org.apache.commons.io.FileSystemUtils@freeSpaceUnix:409:tok.countTokens() == 1 |==> tok.countTokens() >= 1
1541:ROR:==(int,int):FALSE(int,int):org.apache.commons.io.FileSystemUtils@freeSpaceUnix:409:tok.countTokens() == 1 |==> false
1542:LVR:POS:0:org.apache.commons.io.FileSystemUtils@freeSpaceUnix:409:3 |==> 0
1543:LVR:POS:NEG:org.apache.commons.io.FileSystemUtils@freeSpaceUnix:409:3 |==> -3
1544:ROR:>=(int,int):==(int,int):org.apache.commons.io.FileSystemUtils@freeSpaceUnix:409:lines.size() >= 3 |==> lines.size() == 3
1545:ROR:>=(int,int):>(int,int):org.apache.commons.io.FileSystemUtils@freeSpaceUnix:409:lines.size() >= 3 |==> lines.size() > 3
1546:ROR:>=(int,int):TRUE(int,int):org.apache.commons.io.FileSystemUtils@freeSpaceUnix:409:lines.size() >= 3 |==> true
1547:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.io.FileSystemUtils@freeSpaceUnix:409:tok.countTokens() == 1 && lines.size() >= 3 |==> tok.countTokens() == 1 == lines.size() >= 3
1548:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.io.FileSystemUtils@freeSpaceUnix:409:tok.countTokens() == 1 && lines.size() >= 3 |==> false
1549:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.io.FileSystemUtils@freeSpaceUnix:409:tok.countTokens() == 1 && lines.size() >= 3 |==> tok.countTokens() == 1
1550:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.io.FileSystemUtils@freeSpaceUnix:409:tok.countTokens() == 1 && lines.size() >= 3 |==> lines.size() >= 3
1551:STD:<CALL>:<NO-OP>:org.apache.commons.io.FileSystemUtils@freeSpaceUnix:418:tok.nextToken() |==> <NO-OP>
1552:LVR:POS:0:org.apache.commons.io.FileSystemUtils@freeSpaceUnix:407:4 |==> 0
1553:LVR:POS:NEG:org.apache.commons.io.FileSystemUtils@freeSpaceUnix:407:4 |==> -4
1554:ROR:<(int,int):!=(int,int):org.apache.commons.io.FileSystemUtils@freeSpaceUnix:407:tok.countTokens() < 4 |==> tok.countTokens() != 4
1555:ROR:<(int,int):<=(int,int):org.apache.commons.io.FileSystemUtils@freeSpaceUnix:407:tok.countTokens() < 4 |==> tok.countTokens() <= 4
1556:ROR:<(int,int):FALSE(int,int):org.apache.commons.io.FileSystemUtils@freeSpaceUnix:407:tok.countTokens() < 4 |==> false
1557:STD:<CALL>:<NO-OP>:org.apache.commons.io.FileSystemUtils@freeSpaceUnix:420:tok.nextToken() |==> <NO-OP>
1558:STD:<CALL>:<NO-OP>:org.apache.commons.io.FileSystemUtils@freeSpaceUnix:421:tok.nextToken() |==> <NO-OP>
1559:LVR:0:POS:org.apache.commons.io.FileSystemUtils@parseBytes:438:0 |==> 1
1560:LVR:0:NEG:org.apache.commons.io.FileSystemUtils@parseBytes:438:0 |==> -1
1561:ROR:<(long,long):!=(long,long):org.apache.commons.io.FileSystemUtils@parseBytes:438:bytes < 0 |==> bytes != 0
1562:ROR:<(long,long):<=(long,long):org.apache.commons.io.FileSystemUtils@parseBytes:438:bytes < 0 |==> bytes <= 0
1563:ROR:<(long,long):FALSE(long,long):org.apache.commons.io.FileSystemUtils@parseBytes:438:bytes < 0 |==> false
1564:LVR:POS:0:org.apache.commons.io.FileSystemUtils@performCommand:472:20 |==> 0
1565:LVR:POS:NEG:org.apache.commons.io.FileSystemUtils@performCommand:472:20 |==> -20
1566:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.apache.commons.io.FileSystemUtils@performCommand:488:line != null |==> true
1567:ROR:<(int,int):!=(int,int):org.apache.commons.io.FileSystemUtils@performCommand:488:lines.size() < max |==> lines.size() != max
1568:ROR:<(int,int):<=(int,int):org.apache.commons.io.FileSystemUtils@performCommand:488:lines.size() < max |==> lines.size() <= max
1569:ROR:<(int,int):FALSE(int,int):org.apache.commons.io.FileSystemUtils@performCommand:488:lines.size() < max |==> false
1570:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.io.FileSystemUtils@performCommand:488:line != null && lines.size() < max |==> line != null == lines.size() < max
1571:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.io.FileSystemUtils@performCommand:488:line != null && lines.size() < max |==> false
1572:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.io.FileSystemUtils@performCommand:488:line != null && lines.size() < max |==> line != null
1573:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.io.FileSystemUtils@performCommand:488:line != null && lines.size() < max |==> lines.size() < max
1574:STD:<CALL>:<NO-OP>:org.apache.commons.io.FileSystemUtils@performCommand:490:lines.add(line) |==> <NO-OP>
1575:STD:<CALL>:<NO-OP>:org.apache.commons.io.FileSystemUtils@performCommand:494:proc.waitFor() |==> <NO-OP>
1576:STD:<CALL>:<NO-OP>:org.apache.commons.io.FileSystemUtils@performCommand:496:ThreadMonitor.stop(monitor) |==> <NO-OP>
1577:LVR:0:POS:org.apache.commons.io.FileSystemUtils@performCommand:498:0 |==> 1
1578:LVR:0:NEG:org.apache.commons.io.FileSystemUtils@performCommand:498:0 |==> -1
1579:ROR:!=(int,int):<(int,int):org.apache.commons.io.FileSystemUtils@performCommand:498:proc.exitValue() != 0 |==> proc.exitValue() < 0
1580:ROR:!=(int,int):>(int,int):org.apache.commons.io.FileSystemUtils@performCommand:498:proc.exitValue() != 0 |==> proc.exitValue() > 0
1581:ROR:!=(int,int):TRUE(int,int):org.apache.commons.io.FileSystemUtils@performCommand:498:proc.exitValue() != 0 |==> true
1582:COR:lines.isEmpty():TRUE:org.apache.commons.io.FileSystemUtils@performCommand:504:lines.isEmpty() |==> false
1583:COR:lines.isEmpty():FALSE:org.apache.commons.io.FileSystemUtils@performCommand:504:lines.isEmpty() |==> true
1584:STD:<CALL>:<NO-OP>:org.apache.commons.io.FileSystemUtils@performCommand:517:IOUtils.closeQuietly(in) |==> <NO-OP>
1585:STD:<CALL>:<NO-OP>:org.apache.commons.io.FileSystemUtils@performCommand:518:IOUtils.closeQuietly(out) |==> <NO-OP>
1586:STD:<CALL>:<NO-OP>:org.apache.commons.io.FileSystemUtils@performCommand:519:IOUtils.closeQuietly(err) |==> <NO-OP>
1587:STD:<CALL>:<NO-OP>:org.apache.commons.io.FileSystemUtils@performCommand:520:IOUtils.closeQuietly(inr) |==> <NO-OP>
1588:STD:<CALL>:<NO-OP>:org.apache.commons.io.FileSystemUtils@performCommand:522:proc.destroy() |==> <NO-OP>
1589:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.apache.commons.io.FileSystemUtils@performCommand:521:proc != null |==> true
1590:LVR:0:POS:org.apache.commons.io.FileUtils:175:0 |==> 1
1591:LVR:0:NEG:org.apache.commons.io.FileUtils:175:0 |==> -1
1592:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.io.FileUtils@getFile:192:directory == null |==> false
1593:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.io.FileUtils@getFile:195:names == null |==> false
1594:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.io.FileUtils@getFile:213:names == null |==> false
1595:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.io.FileUtils@getFile:218:file == null |==> false
1596:COR:file.isDirectory():TRUE:org.apache.commons.io.FileUtils@openInputStream:292:file.isDirectory() |==> false
1597:COR:file.isDirectory():FALSE:org.apache.commons.io.FileUtils@openInputStream:292:file.isDirectory() |==> true
1598:LVR:FALSE:TRUE:org.apache.commons.io.FileUtils@openInputStream:295:false |==> true
1599:ROR:==(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.io.FileUtils@openInputStream:295:file.canRead() == false |==> false
1600:ROR:==(boolean,boolean):LHS(boolean,boolean):org.apache.commons.io.FileUtils@openInputStream:295:file.canRead() == false |==> file.canRead()
1601:ROR:==(boolean,boolean):RHS(boolean,boolean):org.apache.commons.io.FileUtils@openInputStream:295:file.canRead() == false |==> false
1602:COR:file.exists():TRUE:org.apache.commons.io.FileUtils@openInputStream:291:file.exists() |==> false
1603:COR:file.exists():FALSE:org.apache.commons.io.FileUtils@openInputStream:291:file.exists() |==> true
1604:LVR:FALSE:TRUE:org.apache.commons.io.FileUtils@openOutputStream:326:false |==> true
1605:COR:file.isDirectory():TRUE:org.apache.commons.io.FileUtils@openOutputStream:353:file.isDirectory() |==> false
1606:COR:file.isDirectory():FALSE:org.apache.commons.io.FileUtils@openOutputStream:353:file.isDirectory() |==> true
1607:LVR:FALSE:TRUE:org.apache.commons.io.FileUtils@openOutputStream:356:false |==> true
1608:ROR:==(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.io.FileUtils@openOutputStream:356:file.canWrite() == false |==> false
1609:ROR:==(boolean,boolean):LHS(boolean,boolean):org.apache.commons.io.FileUtils@openOutputStream:356:file.canWrite() == false |==> file.canWrite()
1610:ROR:==(boolean,boolean):RHS(boolean,boolean):org.apache.commons.io.FileUtils@openOutputStream:356:file.canWrite() == false |==> false
1611:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.io.FileUtils@openOutputStream:362:!parent.mkdirs() && !parent.isDirectory() |==> !parent.mkdirs() == !parent.isDirectory()
1612:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.io.FileUtils@openOutputStream:362:!parent.mkdirs() && !parent.isDirectory() |==> false
1613:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.io.FileUtils@openOutputStream:362:!parent.mkdirs() && !parent.isDirectory() |==> !parent.mkdirs()
1614:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.io.FileUtils@openOutputStream:362:!parent.mkdirs() && !parent.isDirectory() |==> !parent.isDirectory()
1615:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.apache.commons.io.FileUtils@openOutputStream:361:parent != null |==> true
1616:COR:file.exists():TRUE:org.apache.commons.io.FileUtils@openOutputStream:352:file.exists() |==> false
1617:COR:file.exists():FALSE:org.apache.commons.io.FileUtils@openOutputStream:352:file.exists() |==> true
1618:LVR:0:POS:org.apache.commons.io.FileUtils@byteCountToDisplaySize:401:0 |==> 1
1619:LVR:0:NEG:org.apache.commons.io.FileUtils@byteCountToDisplaySize:401:0 |==> -1
1620:ROR:>(int,int):!=(int,int):org.apache.commons.io.FileUtils@byteCountToDisplaySize:401:size.divide(ONE_KB_BI).compareTo(BigInteger.ZERO) > 0 |==> size.divide(ONE_KB_BI).compareTo(BigInteger.ZERO) != 0
1621:ROR:>(int,int):>=(int,int):org.apache.commons.io.FileUtils@byteCountToDisplaySize:401:size.divide(ONE_KB_BI).compareTo(BigInteger.ZERO) > 0 |==> size.divide(ONE_KB_BI).compareTo(BigInteger.ZERO) >= 0
1622:ROR:>(int,int):FALSE(int,int):org.apache.commons.io.FileUtils@byteCountToDisplaySize:401:size.divide(ONE_KB_BI).compareTo(BigInteger.ZERO) > 0 |==> false
1623:LVR:0:POS:org.apache.commons.io.FileUtils@byteCountToDisplaySize:399:0 |==> 1
1624:LVR:0:NEG:org.apache.commons.io.FileUtils@byteCountToDisplaySize:399:0 |==> -1
1625:ROR:>(int,int):!=(int,int):org.apache.commons.io.FileUtils@byteCountToDisplaySize:399:size.divide(ONE_MB_BI).compareTo(BigInteger.ZERO) > 0 |==> size.divide(ONE_MB_BI).compareTo(BigInteger.ZERO) != 0
1626:ROR:>(int,int):>=(int,int):org.apache.commons.io.FileUtils@byteCountToDisplaySize:399:size.divide(ONE_MB_BI).compareTo(BigInteger.ZERO) > 0 |==> size.divide(ONE_MB_BI).compareTo(BigInteger.ZERO) >= 0
1627:ROR:>(int,int):FALSE(int,int):org.apache.commons.io.FileUtils@byteCountToDisplaySize:399:size.divide(ONE_MB_BI).compareTo(BigInteger.ZERO) > 0 |==> false
1628:LVR:0:POS:org.apache.commons.io.FileUtils@byteCountToDisplaySize:397:0 |==> 1
1629:LVR:0:NEG:org.apache.commons.io.FileUtils@byteCountToDisplaySize:397:0 |==> -1
1630:ROR:>(int,int):!=(int,int):org.apache.commons.io.FileUtils@byteCountToDisplaySize:397:size.divide(ONE_GB_BI).compareTo(BigInteger.ZERO) > 0 |==> size.divide(ONE_GB_BI).compareTo(BigInteger.ZERO) != 0
1631:ROR:>(int,int):>=(int,int):org.apache.commons.io.FileUtils@byteCountToDisplaySize:397:size.divide(ONE_GB_BI).compareTo(BigInteger.ZERO) > 0 |==> size.divide(ONE_GB_BI).compareTo(BigInteger.ZERO) >= 0
1632:ROR:>(int,int):FALSE(int,int):org.apache.commons.io.FileUtils@byteCountToDisplaySize:397:size.divide(ONE_GB_BI).compareTo(BigInteger.ZERO) > 0 |==> false
1633:LVR:0:POS:org.apache.commons.io.FileUtils@byteCountToDisplaySize:395:0 |==> 1
1634:LVR:0:NEG:org.apache.commons.io.FileUtils@byteCountToDisplaySize:395:0 |==> -1
1635:ROR:>(int,int):!=(int,int):org.apache.commons.io.FileUtils@byteCountToDisplaySize:395:size.divide(ONE_TB_BI).compareTo(BigInteger.ZERO) > 0 |==> size.divide(ONE_TB_BI).compareTo(BigInteger.ZERO) != 0
1636:ROR:>(int,int):>=(int,int):org.apache.commons.io.FileUtils@byteCountToDisplaySize:395:size.divide(ONE_TB_BI).compareTo(BigInteger.ZERO) > 0 |==> size.divide(ONE_TB_BI).compareTo(BigInteger.ZERO) >= 0
1637:ROR:>(int,int):FALSE(int,int):org.apache.commons.io.FileUtils@byteCountToDisplaySize:395:size.divide(ONE_TB_BI).compareTo(BigInteger.ZERO) > 0 |==> false
1638:LVR:0:POS:org.apache.commons.io.FileUtils@byteCountToDisplaySize:393:0 |==> 1
1639:LVR:0:NEG:org.apache.commons.io.FileUtils@byteCountToDisplaySize:393:0 |==> -1
1640:ROR:>(int,int):!=(int,int):org.apache.commons.io.FileUtils@byteCountToDisplaySize:393:size.divide(ONE_PB_BI).compareTo(BigInteger.ZERO) > 0 |==> size.divide(ONE_PB_BI).compareTo(BigInteger.ZERO) != 0
1641:ROR:>(int,int):>=(int,int):org.apache.commons.io.FileUtils@byteCountToDisplaySize:393:size.divide(ONE_PB_BI).compareTo(BigInteger.ZERO) > 0 |==> size.divide(ONE_PB_BI).compareTo(BigInteger.ZERO) >= 0
1642:ROR:>(int,int):FALSE(int,int):org.apache.commons.io.FileUtils@byteCountToDisplaySize:393:size.divide(ONE_PB_BI).compareTo(BigInteger.ZERO) > 0 |==> false
1643:LVR:0:POS:org.apache.commons.io.FileUtils@byteCountToDisplaySize:391:0 |==> 1
1644:LVR:0:NEG:org.apache.commons.io.FileUtils@byteCountToDisplaySize:391:0 |==> -1
1645:ROR:>(int,int):!=(int,int):org.apache.commons.io.FileUtils@byteCountToDisplaySize:391:size.divide(ONE_EB_BI).compareTo(BigInteger.ZERO) > 0 |==> size.divide(ONE_EB_BI).compareTo(BigInteger.ZERO) != 0
1646:ROR:>(int,int):>=(int,int):org.apache.commons.io.FileUtils@byteCountToDisplaySize:391:size.divide(ONE_EB_BI).compareTo(BigInteger.ZERO) > 0 |==> size.divide(ONE_EB_BI).compareTo(BigInteger.ZERO) >= 0
1647:ROR:>(int,int):FALSE(int,int):org.apache.commons.io.FileUtils@byteCountToDisplaySize:391:size.divide(ONE_EB_BI).compareTo(BigInteger.ZERO) > 0 |==> false
1648:STD:<CALL>:<NO-OP>:org.apache.commons.io.FileUtils@touch:445:IOUtils.closeQuietly(out) |==> <NO-OP>
1649:STD:<CALL>:<NO-OP>:org.apache.commons.io.FileUtils@innerListFiles:484:files.add(file) |==> <NO-OP>
1650:COR:includeSubDirectories:TRUE:org.apache.commons.io.FileUtils@innerListFiles:483:includeSubDirectories |==> false
1651:COR:includeSubDirectories:FALSE:org.apache.commons.io.FileUtils@innerListFiles:483:includeSubDirectories |==> true
1652:STD:<CALL>:<NO-OP>:org.apache.commons.io.FileUtils@innerListFiles:486:innerListFiles(files, file, filter, includeSubDirectories) |==> <NO-OP>
1653:STD:<CALL>:<NO-OP>:org.apache.commons.io.FileUtils@innerListFiles:488:files.add(file) |==> <NO-OP>
1654:COR:file.isDirectory():TRUE:org.apache.commons.io.FileUtils@innerListFiles:482:file.isDirectory() |==> false
1655:COR:file.isDirectory():FALSE:org.apache.commons.io.FileUtils@innerListFiles:482:file.isDirectory() |==> true
1656:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.apache.commons.io.FileUtils@innerListFiles:480:found != null |==> true
1657:STD:<CALL>:<NO-OP>:org.apache.commons.io.FileUtils@listFiles:521:validateListFilesParameters(directory, fileFilter) |==> <NO-OP>
1658:LVR:FALSE:TRUE:org.apache.commons.io.FileUtils@listFiles:529:false |==> true
1659:STD:<CALL>:<NO-OP>:org.apache.commons.io.FileUtils@listFiles:528:innerListFiles(files, directory, FileFilterUtils.or(effFileFilter, effDirFilter), false) |==> <NO-OP>
1660:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.io.FileUtils@validateListFilesParameters:547:fileFilter == null |==> false
1661:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.io.FileUtils@setUpEffectiveDirFilter:569:dirFilter == null |==> false
1662:STD:<CALL>:<NO-OP>:org.apache.commons.io.FileUtils@listFilesAndDirs:593:validateListFilesParameters(directory, fileFilter) |==> <NO-OP>
1663:STD:<CALL>:<NO-OP>:org.apache.commons.io.FileUtils@listFilesAndDirs:601:files.add(directory) |==> <NO-OP>
1664:COR:directory.isDirectory():TRUE:org.apache.commons.io.FileUtils@listFilesAndDirs:600:directory.isDirectory() |==> false
1665:COR:directory.isDirectory():FALSE:org.apache.commons.io.FileUtils@listFilesAndDirs:600:directory.isDirectory() |==> true
1666:LVR:TRUE:FALSE:org.apache.commons.io.FileUtils@listFilesAndDirs:604:true |==> false
1667:STD:<CALL>:<NO-OP>:org.apache.commons.io.FileUtils@listFilesAndDirs:603:innerListFiles(files, directory, FileFilterUtils.or(effFileFilter, effDirFilter), true) |==> <NO-OP>
1668:LVR:0:POS:org.apache.commons.io.FileUtils@toSuffixes:665:0 |==> 1
1669:LVR:0:NEG:org.apache.commons.io.FileUtils@toSuffixes:665:0 |==> -1
1670:ROR:<(int,int):!=(int,int):org.apache.commons.io.FileUtils@toSuffixes:665:i < extensions.length |==> i != extensions.length
1671:ROR:<(int,int):<=(int,int):org.apache.commons.io.FileUtils@toSuffixes:665:i < extensions.length |==> i <= extensions.length
1672:ROR:<(int,int):FALSE(int,int):org.apache.commons.io.FileUtils@toSuffixes:665:i < extensions.length |==> false
1673:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.io.FileUtils@listFiles:685:extensions == null |==> false
1674:LVR:FALSE:TRUE:org.apache.commons.io.FileUtils@contentEquals:732:false |==> true
1675:ROR:!=(boolean,boolean):LHS(boolean,boolean):org.apache.commons.io.FileUtils@contentEquals:731:file1Exists != file2.exists() |==> file1Exists
1676:ROR:!=(boolean,boolean):RHS(boolean,boolean):org.apache.commons.io.FileUtils@contentEquals:731:file1Exists != file2.exists() |==> file2.exists()
1677:ROR:!=(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.io.FileUtils@contentEquals:731:file1Exists != file2.exists() |==> true
1678:LVR:TRUE:FALSE:org.apache.commons.io.FileUtils@contentEquals:737:true |==> false
1679:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.io.FileUtils@contentEquals:740:file1.isDirectory() || file2.isDirectory() |==> file1.isDirectory() != file2.isDirectory()
1680:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.io.FileUtils@contentEquals:740:file1.isDirectory() || file2.isDirectory() |==> file1.isDirectory()
1681:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.io.FileUtils@contentEquals:740:file1.isDirectory() || file2.isDirectory() |==> file2.isDirectory()
1682:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.io.FileUtils@contentEquals:740:file1.isDirectory() || file2.isDirectory() |==> true
1683:LVR:FALSE:TRUE:org.apache.commons.io.FileUtils@contentEquals:747:false |==> true
1684:ROR:!=(long,long):<(long,long):org.apache.commons.io.FileUtils@contentEquals:745:file1.length() != file2.length() |==> file1.length() < file2.length()
1685:ROR:!=(long,long):>(long,long):org.apache.commons.io.FileUtils@contentEquals:745:file1.length() != file2.length() |==> file1.length() > file2.length()
1686:ROR:!=(long,long):TRUE(long,long):org.apache.commons.io.FileUtils@contentEquals:745:file1.length() != file2.length() |==> true
1687:LVR:TRUE:FALSE:org.apache.commons.io.FileUtils@contentEquals:752:true |==> false
1688:COR:file1.getCanonicalFile().equals(file2.getCanonicalFile()):TRUE:org.apache.commons.io.FileUtils@contentEquals:750:file1.getCanonicalFile().equals(file2.getCanonicalFile()) |==> false
1689:COR:file1.getCanonicalFile().equals(file2.getCanonicalFile()):FALSE:org.apache.commons.io.FileUtils@contentEquals:750:file1.getCanonicalFile().equals(file2.getCanonicalFile()) |==> true
1690:STD:<CALL>:<NO-OP>:org.apache.commons.io.FileUtils@contentEquals:763:IOUtils.closeQuietly(input1) |==> <NO-OP>
1691:STD:<CALL>:<NO-OP>:org.apache.commons.io.FileUtils@contentEquals:764:IOUtils.closeQuietly(input2) |==> <NO-OP>
1692:LVR:FALSE:TRUE:org.apache.commons.io.FileUtils@contentEqualsIgnoreEOL:789:false |==> true
1693:ROR:!=(boolean,boolean):LHS(boolean,boolean):org.apache.commons.io.FileUtils@contentEqualsIgnoreEOL:788:file1Exists != file2.exists() |==> file1Exists
1694:ROR:!=(boolean,boolean):RHS(boolean,boolean):org.apache.commons.io.FileUtils@contentEqualsIgnoreEOL:788:file1Exists != file2.exists() |==> file2.exists()
1695:ROR:!=(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.io.FileUtils@contentEqualsIgnoreEOL:788:file1Exists != file2.exists() |==> true
1696:LVR:TRUE:FALSE:org.apache.commons.io.FileUtils@contentEqualsIgnoreEOL:794:true |==> false
1697:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.io.FileUtils@contentEqualsIgnoreEOL:797:file1.isDirectory() || file2.isDirectory() |==> file1.isDirectory() != file2.isDirectory()
1698:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.io.FileUtils@contentEqualsIgnoreEOL:797:file1.isDirectory() || file2.isDirectory() |==> file1.isDirectory()
1699:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.io.FileUtils@contentEqualsIgnoreEOL:797:file1.isDirectory() || file2.isDirectory() |==> file2.isDirectory()
1700:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.io.FileUtils@contentEqualsIgnoreEOL:797:file1.isDirectory() || file2.isDirectory() |==> true
1701:LVR:TRUE:FALSE:org.apache.commons.io.FileUtils@contentEqualsIgnoreEOL:804:true |==> false
1702:COR:file1.getCanonicalFile().equals(file2.getCanonicalFile()):TRUE:org.apache.commons.io.FileUtils@contentEqualsIgnoreEOL:802:file1.getCanonicalFile().equals(file2.getCanonicalFile()) |==> false
1703:COR:file1.getCanonicalFile().equals(file2.getCanonicalFile()):FALSE:org.apache.commons.io.FileUtils@contentEqualsIgnoreEOL:802:file1.getCanonicalFile().equals(file2.getCanonicalFile()) |==> true
1704:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.io.FileUtils@contentEqualsIgnoreEOL:810:charsetName == null |==> false
1705:STD:<CALL>:<NO-OP>:org.apache.commons.io.FileUtils@contentEqualsIgnoreEOL:820:IOUtils.closeQuietly(input1) |==> <NO-OP>
1706:STD:<CALL>:<NO-OP>:org.apache.commons.io.FileUtils@contentEqualsIgnoreEOL:821:IOUtils.closeQuietly(input2) |==> <NO-OP>
1707:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.io.FileUtils@toFile:841:url == null |==> false
1708:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.io.FileUtils@toFile:841:url == null || !"file".equalsIgnoreCase(url.getProtocol()) |==> url == null != !"file".equalsIgnoreCase(url.getProtocol())
1709:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.io.FileUtils@toFile:841:url == null || !"file".equalsIgnoreCase(url.getProtocol()) |==> url == null
1710:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.io.FileUtils@toFile:841:url == null || !"file".equalsIgnoreCase(url.getProtocol()) |==> !"file".equalsIgnoreCase(url.getProtocol())
1711:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.io.FileUtils@toFile:841:url == null || !"file".equalsIgnoreCase(url.getProtocol()) |==> true
1712:LVR:0:POS:org.apache.commons.io.FileUtils@decodeUrl:870:0 |==> 1
1713:LVR:0:NEG:org.apache.commons.io.FileUtils@decodeUrl:870:0 |==> -1
1714:ROR:<(int,int):!=(int,int):org.apache.commons.io.FileUtils@decodeUrl:870:i < n |==> i != n
1715:ROR:<(int,int):<=(int,int):org.apache.commons.io.FileUtils@decodeUrl:870:i < n |==> i <= n
1716:ROR:<(int,int):FALSE(int,int):org.apache.commons.io.FileUtils@decodeUrl:870:i < n |==> false
1717:LVR:POS:0:org.apache.commons.io.FileUtils@decodeUrl:874:1 |==> 0
1718:LVR:POS:NEG:org.apache.commons.io.FileUtils@decodeUrl:874:1 |==> -1
1719:AOR:+(int,int):%(int,int):org.apache.commons.io.FileUtils@decodeUrl:874:i + 1 |==> i % 1
1720:AOR:+(int,int):*(int,int):org.apache.commons.io.FileUtils@decodeUrl:874:i + 1 |==> i * 1
1721:AOR:+(int,int):-(int,int):org.apache.commons.io.FileUtils@decodeUrl:874:i + 1 |==> i - 1
1722:AOR:+(int,int):/(int,int):org.apache.commons.io.FileUtils@decodeUrl:874:i + 1 |==> i / 1
1723:LVR:POS:0:org.apache.commons.io.FileUtils@decodeUrl:874:3 |==> 0
1724:LVR:POS:NEG:org.apache.commons.io.FileUtils@decodeUrl:874:3 |==> -3
1725:AOR:+(int,int):%(int,int):org.apache.commons.io.FileUtils@decodeUrl:874:i + 3 |==> i % 3
1726:AOR:+(int,int):*(int,int):org.apache.commons.io.FileUtils@decodeUrl:874:i + 3 |==> i * 3
1727:AOR:+(int,int):-(int,int):org.apache.commons.io.FileUtils@decodeUrl:874:i + 3 |==> i - 3
1728:AOR:+(int,int):/(int,int):org.apache.commons.io.FileUtils@decodeUrl:874:i + 3 |==> i / 3
1729:LVR:POS:0:org.apache.commons.io.FileUtils@decodeUrl:874:16 |==> 0
1730:LVR:POS:NEG:org.apache.commons.io.FileUtils@decodeUrl:874:16 |==> -16
1731:STD:<CALL>:<NO-OP>:org.apache.commons.io.FileUtils@decodeUrl:875:bytes.put(octet) |==> <NO-OP>
1732:LVR:POS:0:org.apache.commons.io.FileUtils@decodeUrl:876:3 |==> 0
1733:LVR:POS:NEG:org.apache.commons.io.FileUtils@decodeUrl:876:3 |==> -3
1734:STD:<ASSIGN>:<NO-OP>:org.apache.commons.io.FileUtils@decodeUrl:876:i += 3 |==> <NO-OP>
1735:ROR:<(int,int):!=(int,int):org.apache.commons.io.FileUtils@decodeUrl:877:i < n |==> i != n
1736:ROR:<(int,int):<=(int,int):org.apache.commons.io.FileUtils@decodeUrl:877:i < n |==> i <= n
1737:ROR:<(int,int):FALSE(int,int):org.apache.commons.io.FileUtils@decodeUrl:877:i < n |==> false
1738:ROR:==(int,int):<=(int,int):org.apache.commons.io.FileUtils@decodeUrl:877:url.charAt(i) == '%' |==> url.charAt(i) <= '%'
1739:ROR:==(int,int):>=(int,int):org.apache.commons.io.FileUtils@decodeUrl:877:url.charAt(i) == '%' |==> url.charAt(i) >= '%'
1740:ROR:==(int,int):FALSE(int,int):org.apache.commons.io.FileUtils@decodeUrl:877:url.charAt(i) == '%' |==> false
1741:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.io.FileUtils@decodeUrl:877:i < n && url.charAt(i) == '%' |==> i < n == (url.charAt(i) == '%')
1742:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.io.FileUtils@decodeUrl:877:i < n && url.charAt(i) == '%' |==> false
1743:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.io.FileUtils@decodeUrl:877:i < n && url.charAt(i) == '%' |==> i < n
1744:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.io.FileUtils@decodeUrl:877:i < n && url.charAt(i) == '%' |==> url.charAt(i) == '%'
1745:STD:<CALL>:<NO-OP>:org.apache.commons.io.FileUtils@decodeUrl:884:bytes.flip() |==> <NO-OP>
1746:STD:<CALL>:<NO-OP>:org.apache.commons.io.FileUtils@decodeUrl:885:buffer.append(UTF8.decode(bytes).toString()) |==> <NO-OP>
1747:STD:<CALL>:<NO-OP>:org.apache.commons.io.FileUtils@decodeUrl:886:bytes.clear() |==> <NO-OP>
1748:LVR:0:POS:org.apache.commons.io.FileUtils@decodeUrl:883:0 |==> 1
1749:LVR:0:NEG:org.apache.commons.io.FileUtils@decodeUrl:883:0 |==> -1
1750:ROR:>(int,int):!=(int,int):org.apache.commons.io.FileUtils@decodeUrl:883:bytes.position() > 0 |==> bytes.position() != 0
1751:ROR:>(int,int):>=(int,int):org.apache.commons.io.FileUtils@decodeUrl:883:bytes.position() > 0 |==> bytes.position() >= 0
1752:ROR:>(int,int):FALSE(int,int):org.apache.commons.io.FileUtils@decodeUrl:883:bytes.position() > 0 |==> false
1753:ROR:==(int,int):<=(int,int):org.apache.commons.io.FileUtils@decodeUrl:871:url.charAt(i) == '%' |==> url.charAt(i) <= '%'
1754:ROR:==(int,int):>=(int,int):org.apache.commons.io.FileUtils@decodeUrl:871:url.charAt(i) == '%' |==> url.charAt(i) >= '%'
1755:ROR:==(int,int):FALSE(int,int):org.apache.commons.io.FileUtils@decodeUrl:871:url.charAt(i) == '%' |==> false
1756:STD:<CALL>:<NO-OP>:org.apache.commons.io.FileUtils@decodeUrl:890:buffer.append(url.charAt(i++)) |==> <NO-OP>
1757:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.apache.commons.io.FileUtils@decodeUrl:866:url != null |==> true
1758:LVR:0:POS:org.apache.commons.io.FileUtils@decodeUrl:866:0 |==> 1
1759:LVR:0:NEG:org.apache.commons.io.FileUtils@decodeUrl:866:0 |==> -1
1760:ROR:>=(int,int):==(int,int):org.apache.commons.io.FileUtils@decodeUrl:866:url.indexOf('%') >= 0 |==> url.indexOf('%') == 0
1761:ROR:>=(int,int):>(int,int):org.apache.commons.io.FileUtils@decodeUrl:866:url.indexOf('%') >= 0 |==> url.indexOf('%') > 0
1762:ROR:>=(int,int):TRUE(int,int):org.apache.commons.io.FileUtils@decodeUrl:866:url.indexOf('%') >= 0 |==> true
1763:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.io.FileUtils@decodeUrl:866:url != null && url.indexOf('%') >= 0 |==> url != null == url.indexOf('%') >= 0
1764:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.io.FileUtils@decodeUrl:866:url != null && url.indexOf('%') >= 0 |==> false
1765:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.io.FileUtils@decodeUrl:866:url != null && url.indexOf('%') >= 0 |==> url != null
1766:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.io.FileUtils@decodeUrl:866:url != null && url.indexOf('%') >= 0 |==> url.indexOf('%') >= 0
1767:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.io.FileUtils@toFiles:917:urls == null |==> false
1768:LVR:0:POS:org.apache.commons.io.FileUtils@toFiles:917:0 |==> 1
1769:LVR:0:NEG:org.apache.commons.io.FileUtils@toFiles:917:0 |==> -1
1770:ROR:==(int,int):<=(int,int):org.apache.commons.io.FileUtils@toFiles:917:urls.length == 0 |==> urls.length <= 0
1771:ROR:==(int,int):>=(int,int):org.apache.commons.io.FileUtils@toFiles:917:urls.length == 0 |==> urls.length >= 0
1772:ROR:==(int,int):FALSE(int,int):org.apache.commons.io.FileUtils@toFiles:917:urls.length == 0 |==> false
1773:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.io.FileUtils@toFiles:917:urls == null || urls.length == 0 |==> urls == null != (urls.length == 0)
1774:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.io.FileUtils@toFiles:917:urls == null || urls.length == 0 |==> urls == null
1775:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.io.FileUtils@toFiles:917:urls == null || urls.length == 0 |==> urls.length == 0
1776:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.io.FileUtils@toFiles:917:urls == null || urls.length == 0 |==> true
1777:LVR:0:POS:org.apache.commons.io.FileUtils@toFiles:921:0 |==> 1
1778:LVR:0:NEG:org.apache.commons.io.FileUtils@toFiles:921:0 |==> -1
1779:ROR:<(int,int):!=(int,int):org.apache.commons.io.FileUtils@toFiles:921:i < urls.length |==> i != urls.length
1780:ROR:<(int,int):<=(int,int):org.apache.commons.io.FileUtils@toFiles:921:i < urls.length |==> i <= urls.length
1781:ROR:<(int,int):FALSE(int,int):org.apache.commons.io.FileUtils@toFiles:921:i < urls.length |==> false
1782:LVR:FALSE:TRUE:org.apache.commons.io.FileUtils@toFiles:924:false |==> true
1783:ROR:==(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.io.FileUtils@toFiles:924:url.getProtocol().equals("file") == false |==> false
1784:ROR:==(boolean,boolean):LHS(boolean,boolean):org.apache.commons.io.FileUtils@toFiles:924:url.getProtocol().equals("file") == false |==> url.getProtocol().equals("file")
1785:ROR:==(boolean,boolean):RHS(boolean,boolean):org.apache.commons.io.FileUtils@toFiles:924:url.getProtocol().equals("file") == false |==> false
1786:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.apache.commons.io.FileUtils@toFiles:923:url != null |==> true
1787:LVR:0:POS:org.apache.commons.io.FileUtils@toURLs:947:0 |==> 1
1788:LVR:0:NEG:org.apache.commons.io.FileUtils@toURLs:947:0 |==> -1
1789:ROR:<(int,int):!=(int,int):org.apache.commons.io.FileUtils@toURLs:947:i < urls.length |==> i != urls.length
1790:ROR:<(int,int):<=(int,int):org.apache.commons.io.FileUtils@toURLs:947:i < urls.length |==> i <= urls.length
1791:ROR:<(int,int):FALSE(int,int):org.apache.commons.io.FileUtils@toURLs:947:i < urls.length |==> false
1792:LVR:TRUE:FALSE:org.apache.commons.io.FileUtils@copyFileToDirectory:977:true |==> false
1793:STD:<CALL>:<NO-OP>:org.apache.commons.io.FileUtils@copyFileToDirectory:977:copyFileToDirectory(srcFile, destDir, true) |==> <NO-OP>
1794:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.io.FileUtils@copyFileToDirectory:1006:destDir == null |==> false
1795:LVR:FALSE:TRUE:org.apache.commons.io.FileUtils@copyFileToDirectory:1009:false |==> true
1796:ROR:==(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.io.FileUtils@copyFileToDirectory:1009:destDir.isDirectory() == false |==> false
1797:ROR:==(boolean,boolean):LHS(boolean,boolean):org.apache.commons.io.FileUtils@copyFileToDirectory:1009:destDir.isDirectory() == false |==> destDir.isDirectory()
1798:ROR:==(boolean,boolean):RHS(boolean,boolean):org.apache.commons.io.FileUtils@copyFileToDirectory:1009:destDir.isDirectory() == false |==> false
1799:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.io.FileUtils@copyFileToDirectory:1009:destDir.exists() && destDir.isDirectory() == false |==> destDir.exists() == (destDir.isDirectory() == false)
1800:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.io.FileUtils@copyFileToDirectory:1009:destDir.exists() && destDir.isDirectory() == false |==> false
1801:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.io.FileUtils@copyFileToDirectory:1009:destDir.exists() && destDir.isDirectory() == false |==> destDir.exists()
1802:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.io.FileUtils@copyFileToDirectory:1009:destDir.exists() && destDir.isDirectory() == false |==> destDir.isDirectory() == false
1803:STD:<CALL>:<NO-OP>:org.apache.commons.io.FileUtils@copyFileToDirectory:1013:copyFile(srcFile, destFile, preserveFileDate) |==> <NO-OP>
1804:LVR:TRUE:FALSE:org.apache.commons.io.FileUtils@copyFile:1038:true |==> false
1805:STD:<CALL>:<NO-OP>:org.apache.commons.io.FileUtils@copyFile:1038:copyFile(srcFile, destFile, true) |==> <NO-OP>
1806:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.io.FileUtils@copyFile:1067:srcFile == null |==> false
1807:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.io.FileUtils@copyFile:1070:destFile == null |==> false
1808:LVR:FALSE:TRUE:org.apache.commons.io.FileUtils@copyFile:1073:false |==> true
1809:ROR:==(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.io.FileUtils@copyFile:1073:srcFile.exists() == false |==> false
1810:ROR:==(boolean,boolean):LHS(boolean,boolean):org.apache.commons.io.FileUtils@copyFile:1073:srcFile.exists() == false |==> srcFile.exists()
1811:ROR:==(boolean,boolean):RHS(boolean,boolean):org.apache.commons.io.FileUtils@copyFile:1073:srcFile.exists() == false |==> false
1812:COR:srcFile.isDirectory():TRUE:org.apache.commons.io.FileUtils@copyFile:1076:srcFile.isDirectory() |==> false
1813:COR:srcFile.isDirectory():FALSE:org.apache.commons.io.FileUtils@copyFile:1076:srcFile.isDirectory() |==> true
1814:COR:srcFile.getCanonicalPath().equals(destFile.getCanonicalPath()):TRUE:org.apache.commons.io.FileUtils@copyFile:1079:srcFile.getCanonicalPath().equals(destFile.getCanonicalPath()) |==> false
1815:COR:srcFile.getCanonicalPath().equals(destFile.getCanonicalPath()):FALSE:org.apache.commons.io.FileUtils@copyFile:1079:srcFile.getCanonicalPath().equals(destFile.getCanonicalPath()) |==> true
1816:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.io.FileUtils@copyFile:1084:!parentFile.mkdirs() && !parentFile.isDirectory() |==> !parentFile.mkdirs() == !parentFile.isDirectory()
1817:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.io.FileUtils@copyFile:1084:!parentFile.mkdirs() && !parentFile.isDirectory() |==> false
1818:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.io.FileUtils@copyFile:1084:!parentFile.mkdirs() && !parentFile.isDirectory() |==> !parentFile.mkdirs()
1819:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.io.FileUtils@copyFile:1084:!parentFile.mkdirs() && !parentFile.isDirectory() |==> !parentFile.isDirectory()
1820:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.apache.commons.io.FileUtils@copyFile:1083:parentFile != null |==> true
1821:LVR:FALSE:TRUE:org.apache.commons.io.FileUtils@copyFile:1088:false |==> true
1822:ROR:==(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.io.FileUtils@copyFile:1088:destFile.canWrite() == false |==> false
1823:ROR:==(boolean,boolean):LHS(boolean,boolean):org.apache.commons.io.FileUtils@copyFile:1088:destFile.canWrite() == false |==> destFile.canWrite()
1824:ROR:==(boolean,boolean):RHS(boolean,boolean):org.apache.commons.io.FileUtils@copyFile:1088:destFile.canWrite() == false |==> false
1825:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.io.FileUtils@copyFile:1088:destFile.exists() && destFile.canWrite() == false |==> destFile.exists() == (destFile.canWrite() == false)
1826:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.io.FileUtils@copyFile:1088:destFile.exists() && destFile.canWrite() == false |==> false
1827:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.io.FileUtils@copyFile:1088:destFile.exists() && destFile.canWrite() == false |==> destFile.exists()
1828:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.io.FileUtils@copyFile:1088:destFile.exists() && destFile.canWrite() == false |==> destFile.canWrite() == false
1829:STD:<CALL>:<NO-OP>:org.apache.commons.io.FileUtils@copyFile:1091:doCopyFile(srcFile, destFile, preserveFileDate) |==> <NO-OP>
1830:STD:<CALL>:<NO-OP>:org.apache.commons.io.FileUtils@copyFile:1116:fis.close() |==> <NO-OP>
1831:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.io.FileUtils@doCopyFile:1129:destFile.exists() && destFile.isDirectory() |==> destFile.exists() == destFile.isDirectory()
1832:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.io.FileUtils@doCopyFile:1129:destFile.exists() && destFile.isDirectory() |==> false
1833:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.io.FileUtils@doCopyFile:1129:destFile.exists() && destFile.isDirectory() |==> destFile.exists()
1834:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.io.FileUtils@doCopyFile:1129:destFile.exists() && destFile.isDirectory() |==> destFile.isDirectory()
1835:LVR:0:POS:org.apache.commons.io.FileUtils@doCopyFile:1143:0 |==> 1
1836:LVR:0:NEG:org.apache.commons.io.FileUtils@doCopyFile:1143:0 |==> -1
1837:LVR:0:POS:org.apache.commons.io.FileUtils@doCopyFile:1144:0 |==> 1
1838:LVR:0:NEG:org.apache.commons.io.FileUtils@doCopyFile:1144:0 |==> -1
1839:ROR:<(long,long):!=(long,long):org.apache.commons.io.FileUtils@doCopyFile:1145:pos < size |==> pos != size
1840:ROR:<(long,long):<=(long,long):org.apache.commons.io.FileUtils@doCopyFile:1145:pos < size |==> pos <= size
1841:ROR:<(long,long):FALSE(long,long):org.apache.commons.io.FileUtils@doCopyFile:1145:pos < size |==> false
1842:AOR:-(long,long):%(long,long):org.apache.commons.io.FileUtils@doCopyFile:1146:size - pos |==> size % pos
1843:AOR:-(long,long):*(long,long):org.apache.commons.io.FileUtils@doCopyFile:1146:size - pos |==> size * pos
1844:AOR:-(long,long):+(long,long):org.apache.commons.io.FileUtils@doCopyFile:1146:size - pos |==> size + pos
1845:AOR:-(long,long):/(long,long):org.apache.commons.io.FileUtils@doCopyFile:1146:size - pos |==> size / pos
1846:ROR:>(long,long):!=(long,long):org.apache.commons.io.FileUtils@doCopyFile:1146:size - pos > FILE_COPY_BUFFER_SIZE |==> size - pos != FILE_COPY_BUFFER_SIZE
1847:ROR:>(long,long):>=(long,long):org.apache.commons.io.FileUtils@doCopyFile:1146:size - pos > FILE_COPY_BUFFER_SIZE |==> size - pos >= FILE_COPY_BUFFER_SIZE
1848:ROR:>(long,long):FALSE(long,long):org.apache.commons.io.FileUtils@doCopyFile:1146:size - pos > FILE_COPY_BUFFER_SIZE |==> false
1849:AOR:-(long,long):%(long,long):org.apache.commons.io.FileUtils@doCopyFile:1146:size - pos |==> size % pos
1850:AOR:-(long,long):*(long,long):org.apache.commons.io.FileUtils@doCopyFile:1146:size - pos |==> size * pos
1851:AOR:-(long,long):+(long,long):org.apache.commons.io.FileUtils@doCopyFile:1146:size - pos |==> size + pos
1852:AOR:-(long,long):/(long,long):org.apache.commons.io.FileUtils@doCopyFile:1146:size - pos |==> size / pos
1853:STD:<ASSIGN>:<NO-OP>:org.apache.commons.io.FileUtils@doCopyFile:1147:pos += output.transferFrom(input, pos, count) |==> <NO-OP>
1854:STD:<CALL>:<NO-OP>:org.apache.commons.io.FileUtils@doCopyFile:1150:IOUtils.closeQuietly(output) |==> <NO-OP>
1855:STD:<CALL>:<NO-OP>:org.apache.commons.io.FileUtils@doCopyFile:1151:IOUtils.closeQuietly(fos) |==> <NO-OP>
1856:STD:<CALL>:<NO-OP>:org.apache.commons.io.FileUtils@doCopyFile:1152:IOUtils.closeQuietly(input) |==> <NO-OP>
1857:STD:<CALL>:<NO-OP>:org.apache.commons.io.FileUtils@doCopyFile:1153:IOUtils.closeQuietly(fis) |==> <NO-OP>
1858:ROR:!=(long,long):<(long,long):org.apache.commons.io.FileUtils@doCopyFile:1156:srcFile.length() != destFile.length() |==> srcFile.length() < destFile.length()
1859:ROR:!=(long,long):>(long,long):org.apache.commons.io.FileUtils@doCopyFile:1156:srcFile.length() != destFile.length() |==> srcFile.length() > destFile.length()
1860:ROR:!=(long,long):TRUE(long,long):org.apache.commons.io.FileUtils@doCopyFile:1156:srcFile.length() != destFile.length() |==> true
1861:STD:<CALL>:<NO-OP>:org.apache.commons.io.FileUtils@doCopyFile:1161:destFile.setLastModified(srcFile.lastModified()) |==> <NO-OP>
1862:COR:preserveFileDate:TRUE:org.apache.commons.io.FileUtils@doCopyFile:1160:preserveFileDate |==> false
1863:COR:preserveFileDate:FALSE:org.apache.commons.io.FileUtils@doCopyFile:1160:preserveFileDate |==> true
1864:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.io.FileUtils@copyDirectoryToDirectory:1190:srcDir == null |==> false
1865:LVR:FALSE:TRUE:org.apache.commons.io.FileUtils@copyDirectoryToDirectory:1193:false |==> true
1866:ROR:==(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.io.FileUtils@copyDirectoryToDirectory:1193:srcDir.isDirectory() == false |==> false
1867:ROR:==(boolean,boolean):LHS(boolean,boolean):org.apache.commons.io.FileUtils@copyDirectoryToDirectory:1193:srcDir.isDirectory() == false |==> srcDir.isDirectory()
1868:ROR:==(boolean,boolean):RHS(boolean,boolean):org.apache.commons.io.FileUtils@copyDirectoryToDirectory:1193:srcDir.isDirectory() == false |==> false
1869:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.io.FileUtils@copyDirectoryToDirectory:1193:srcDir.exists() && srcDir.isDirectory() == false |==> srcDir.exists() == (srcDir.isDirectory() == false)
1870:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.io.FileUtils@copyDirectoryToDirectory:1193:srcDir.exists() && srcDir.isDirectory() == false |==> false
1871:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.io.FileUtils@copyDirectoryToDirectory:1193:srcDir.exists() && srcDir.isDirectory() == false |==> srcDir.exists()
1872:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.io.FileUtils@copyDirectoryToDirectory:1193:srcDir.exists() && srcDir.isDirectory() == false |==> srcDir.isDirectory() == false
1873:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.io.FileUtils@copyDirectoryToDirectory:1196:destDir == null |==> false
1874:LVR:FALSE:TRUE:org.apache.commons.io.FileUtils@copyDirectoryToDirectory:1199:false |==> true
1875:ROR:==(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.io.FileUtils@copyDirectoryToDirectory:1199:destDir.isDirectory() == false |==> false
1876:ROR:==(boolean,boolean):LHS(boolean,boolean):org.apache.commons.io.FileUtils@copyDirectoryToDirectory:1199:destDir.isDirectory() == false |==> destDir.isDirectory()
1877:ROR:==(boolean,boolean):RHS(boolean,boolean):org.apache.commons.io.FileUtils@copyDirectoryToDirectory:1199:destDir.isDirectory() == false |==> false
1878:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.io.FileUtils@copyDirectoryToDirectory:1199:destDir.exists() && destDir.isDirectory() == false |==> destDir.exists() == (destDir.isDirectory() == false)
1879:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.io.FileUtils@copyDirectoryToDirectory:1199:destDir.exists() && destDir.isDirectory() == false |==> false
1880:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.io.FileUtils@copyDirectoryToDirectory:1199:destDir.exists() && destDir.isDirectory() == false |==> destDir.exists()
1881:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.io.FileUtils@copyDirectoryToDirectory:1199:destDir.exists() && destDir.isDirectory() == false |==> destDir.isDirectory() == false
1882:LVR:TRUE:FALSE:org.apache.commons.io.FileUtils@copyDirectoryToDirectory:1202:true |==> false
1883:STD:<CALL>:<NO-OP>:org.apache.commons.io.FileUtils@copyDirectoryToDirectory:1202:copyDirectory(srcDir, new File(destDir, srcDir.getName()), true) |==> <NO-OP>
1884:LVR:TRUE:FALSE:org.apache.commons.io.FileUtils@copyDirectory:1230:true |==> false
1885:STD:<CALL>:<NO-OP>:org.apache.commons.io.FileUtils@copyDirectory:1230:copyDirectory(srcDir, destDir, true) |==> <NO-OP>
1886:STD:<CALL>:<NO-OP>:org.apache.commons.io.FileUtils@copyDirectory:1261:copyDirectory(srcDir, destDir, null, preserveFileDate) |==> <NO-OP>
1887:LVR:TRUE:FALSE:org.apache.commons.io.FileUtils@copyDirectory:1310:true |==> false
1888:STD:<CALL>:<NO-OP>:org.apache.commons.io.FileUtils@copyDirectory:1310:copyDirectory(srcDir, destDir, filter, true) |==> <NO-OP>
1889:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.io.FileUtils@copyDirectory:1361:srcDir == null |==> false
1890:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.io.FileUtils@copyDirectory:1364:destDir == null |==> false
1891:LVR:FALSE:TRUE:org.apache.commons.io.FileUtils@copyDirectory:1367:false |==> true
1892:ROR:==(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.io.FileUtils@copyDirectory:1367:srcDir.exists() == false |==> false
1893:ROR:==(boolean,boolean):LHS(boolean,boolean):org.apache.commons.io.FileUtils@copyDirectory:1367:srcDir.exists() == false |==> srcDir.exists()
1894:ROR:==(boolean,boolean):RHS(boolean,boolean):org.apache.commons.io.FileUtils@copyDirectory:1367:srcDir.exists() == false |==> false
1895:LVR:FALSE:TRUE:org.apache.commons.io.FileUtils@copyDirectory:1370:false |==> true
1896:ROR:==(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.io.FileUtils@copyDirectory:1370:srcDir.isDirectory() == false |==> false
1897:ROR:==(boolean,boolean):LHS(boolean,boolean):org.apache.commons.io.FileUtils@copyDirectory:1370:srcDir.isDirectory() == false |==> srcDir.isDirectory()
1898:ROR:==(boolean,boolean):RHS(boolean,boolean):org.apache.commons.io.FileUtils@copyDirectory:1370:srcDir.isDirectory() == false |==> false
1899:COR:srcDir.getCanonicalPath().equals(destDir.getCanonicalPath()):TRUE:org.apache.commons.io.FileUtils@copyDirectory:1373:srcDir.getCanonicalPath().equals(destDir.getCanonicalPath()) |==> false
1900:COR:srcDir.getCanonicalPath().equals(destDir.getCanonicalPath()):FALSE:org.apache.commons.io.FileUtils@copyDirectory:1373:srcDir.getCanonicalPath().equals(destDir.getCanonicalPath()) |==> true
1901:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.io.FileUtils@copyDirectory:1380:filter == null |==> false
1902:STD:<CALL>:<NO-OP>:org.apache.commons.io.FileUtils@copyDirectory:1385:exclusionList.add(copiedFile.getCanonicalPath()) |==> <NO-OP>
1903:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.apache.commons.io.FileUtils@copyDirectory:1381:srcFiles != null |==> true
1904:LVR:0:POS:org.apache.commons.io.FileUtils@copyDirectory:1381:0 |==> 1
1905:LVR:0:NEG:org.apache.commons.io.FileUtils@copyDirectory:1381:0 |==> -1
1906:ROR:>(int,int):!=(int,int):org.apache.commons.io.FileUtils@copyDirectory:1381:srcFiles.length > 0 |==> srcFiles.length != 0
1907:ROR:>(int,int):>=(int,int):org.apache.commons.io.FileUtils@copyDirectory:1381:srcFiles.length > 0 |==> srcFiles.length >= 0
1908:ROR:>(int,int):FALSE(int,int):org.apache.commons.io.FileUtils@copyDirectory:1381:srcFiles.length > 0 |==> false
1909:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.io.FileUtils@copyDirectory:1381:srcFiles != null && srcFiles.length > 0 |==> srcFiles != null == srcFiles.length > 0
1910:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.io.FileUtils@copyDirectory:1381:srcFiles != null && srcFiles.length > 0 |==> false
1911:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.io.FileUtils@copyDirectory:1381:srcFiles != null && srcFiles.length > 0 |==> srcFiles != null
1912:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.io.FileUtils@copyDirectory:1381:srcFiles != null && srcFiles.length > 0 |==> srcFiles.length > 0
1913:COR:destDir.getCanonicalPath().startsWith(srcDir.getCanonicalPath()):TRUE:org.apache.commons.io.FileUtils@copyDirectory:1379:destDir.getCanonicalPath().startsWith(srcDir.getCanonicalPath()) |==> false
1914:COR:destDir.getCanonicalPath().startsWith(srcDir.getCanonicalPath()):FALSE:org.apache.commons.io.FileUtils@copyDirectory:1379:destDir.getCanonicalPath().startsWith(srcDir.getCanonicalPath()) |==> true
1915:STD:<CALL>:<NO-OP>:org.apache.commons.io.FileUtils@copyDirectory:1389:doCopyDirectory(srcDir, destDir, filter, preserveFileDate, exclusionList) |==> <NO-OP>
1916:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.io.FileUtils@doCopyDirectory:1406:filter == null |==> false
1917:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.io.FileUtils@doCopyDirectory:1407:srcFiles == null |==> false
1918:LVR:FALSE:TRUE:org.apache.commons.io.FileUtils@doCopyDirectory:1411:false |==> true
1919:ROR:==(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.io.FileUtils@doCopyDirectory:1411:destDir.isDirectory() == false |==> false
1920:ROR:==(boolean,boolean):LHS(boolean,boolean):org.apache.commons.io.FileUtils@doCopyDirectory:1411:destDir.isDirectory() == false |==> destDir.isDirectory()
1921:ROR:==(boolean,boolean):RHS(boolean,boolean):org.apache.commons.io.FileUtils@doCopyDirectory:1411:destDir.isDirectory() == false |==> false
1922:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.io.FileUtils@doCopyDirectory:1415:!destDir.mkdirs() && !destDir.isDirectory() |==> !destDir.mkdirs() == !destDir.isDirectory()
1923:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.io.FileUtils@doCopyDirectory:1415:!destDir.mkdirs() && !destDir.isDirectory() |==> false
1924:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.io.FileUtils@doCopyDirectory:1415:!destDir.mkdirs() && !destDir.isDirectory() |==> !destDir.mkdirs()
1925:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.io.FileUtils@doCopyDirectory:1415:!destDir.mkdirs() && !destDir.isDirectory() |==> !destDir.isDirectory()
1926:COR:destDir.exists():TRUE:org.apache.commons.io.FileUtils@doCopyDirectory:1410:destDir.exists() |==> false
1927:COR:destDir.exists():FALSE:org.apache.commons.io.FileUtils@doCopyDirectory:1410:destDir.exists() |==> true
1928:LVR:FALSE:TRUE:org.apache.commons.io.FileUtils@doCopyDirectory:1419:false |==> true
1929:ROR:==(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.io.FileUtils@doCopyDirectory:1419:destDir.canWrite() == false |==> false
1930:ROR:==(boolean,boolean):LHS(boolean,boolean):org.apache.commons.io.FileUtils@doCopyDirectory:1419:destDir.canWrite() == false |==> destDir.canWrite()
1931:ROR:==(boolean,boolean):RHS(boolean,boolean):org.apache.commons.io.FileUtils@doCopyDirectory:1419:destDir.canWrite() == false |==> false
1932:STD:<CALL>:<NO-OP>:org.apache.commons.io.FileUtils@doCopyDirectory:1426:doCopyDirectory(srcFile, dstFile, filter, preserveFileDate, exclusionList) |==> <NO-OP>
1933:STD:<CALL>:<NO-OP>:org.apache.commons.io.FileUtils@doCopyDirectory:1428:doCopyFile(srcFile, dstFile, preserveFileDate) |==> <NO-OP>
1934:COR:srcFile.isDirectory():TRUE:org.apache.commons.io.FileUtils@doCopyDirectory:1425:srcFile.isDirectory() |==> false
1935:COR:srcFile.isDirectory():FALSE:org.apache.commons.io.FileUtils@doCopyDirectory:1425:srcFile.isDirectory() |==> true
1936:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.io.FileUtils@doCopyDirectory:1424:exclusionList == null |==> false
1937:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.io.FileUtils@doCopyDirectory:1424:exclusionList == null || !exclusionList.contains(srcFile.getCanonicalPath()) |==> exclusionList == null != !exclusionList.contains(srcFile.getCanonicalPath())
1938:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.io.FileUtils@doCopyDirectory:1424:exclusionList == null || !exclusionList.contains(srcFile.getCanonicalPath()) |==> exclusionList == null
1939:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.io.FileUtils@doCopyDirectory:1424:exclusionList == null || !exclusionList.contains(srcFile.getCanonicalPath()) |==> !exclusionList.contains(srcFile.getCanonicalPath())
1940:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.io.FileUtils@doCopyDirectory:1424:exclusionList == null || !exclusionList.contains(srcFile.getCanonicalPath()) |==> true
1941:STD:<CALL>:<NO-OP>:org.apache.commons.io.FileUtils@doCopyDirectory:1435:destDir.setLastModified(srcDir.lastModified()) |==> <NO-OP>
1942:COR:preserveFileDate:TRUE:org.apache.commons.io.FileUtils@doCopyDirectory:1434:preserveFileDate |==> false
1943:COR:preserveFileDate:FALSE:org.apache.commons.io.FileUtils@doCopyDirectory:1434:preserveFileDate |==> true
1944:STD:<CALL>:<NO-OP>:org.apache.commons.io.FileUtils@copyURLToFile:1461:copyInputStreamToFile(input, destination) |==> <NO-OP>
1945:STD:<CALL>:<NO-OP>:org.apache.commons.io.FileUtils@copyURLToFile:1487:connection.setConnectTimeout(connectionTimeout) |==> <NO-OP>
1946:STD:<CALL>:<NO-OP>:org.apache.commons.io.FileUtils@copyURLToFile:1488:connection.setReadTimeout(readTimeout) |==> <NO-OP>
1947:STD:<CALL>:<NO-OP>:org.apache.commons.io.FileUtils@copyURLToFile:1490:copyInputStreamToFile(input, destination) |==> <NO-OP>
1948:STD:<CALL>:<NO-OP>:org.apache.commons.io.FileUtils@copyInputStreamToFile:1512:IOUtils.copy(source, output) |==> <NO-OP>
1949:STD:<CALL>:<NO-OP>:org.apache.commons.io.FileUtils@copyInputStreamToFile:1513:output.close() |==> <NO-OP>
1950:STD:<CALL>:<NO-OP>:org.apache.commons.io.FileUtils@copyInputStreamToFile:1515:IOUtils.closeQuietly(output) |==> <NO-OP>
1951:STD:<CALL>:<NO-OP>:org.apache.commons.io.FileUtils@copyInputStreamToFile:1518:IOUtils.closeQuietly(source) |==> <NO-OP>
1952:STD:<CALL>:<NO-OP>:org.apache.commons.io.FileUtils@deleteDirectory:1535:cleanDirectory(directory) |==> <NO-OP>
1953:LVR:FALSE:TRUE:org.apache.commons.io.FileUtils@deleteQuietly:1562:false |==> true
1954:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.io.FileUtils@deleteQuietly:1561:file == null |==> false
1955:STD:<CALL>:<NO-OP>:org.apache.commons.io.FileUtils@deleteQuietly:1566:cleanDirectory(file) |==> <NO-OP>
1956:COR:file.isDirectory():TRUE:org.apache.commons.io.FileUtils@deleteQuietly:1565:file.isDirectory() |==> false
1957:COR:file.isDirectory():FALSE:org.apache.commons.io.FileUtils@deleteQuietly:1565:file.isDirectory() |==> true
1958:LVR:FALSE:TRUE:org.apache.commons.io.FileUtils@deleteQuietly:1574:false |==> true
1959:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.io.FileUtils@directoryContains:1605:directory == null |==> false
1960:LVR:FALSE:TRUE:org.apache.commons.io.FileUtils@directoryContains:1614:false |==> true
1961:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.io.FileUtils@directoryContains:1613:child == null |==> false
1962:LVR:FALSE:TRUE:org.apache.commons.io.FileUtils@directoryContains:1618:false |==> true
1963:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.io.FileUtils@directoryContains:1617:!directory.exists() || !child.exists() |==> !directory.exists() != !child.exists()
1964:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.io.FileUtils@directoryContains:1617:!directory.exists() || !child.exists() |==> !directory.exists()
1965:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.io.FileUtils@directoryContains:1617:!directory.exists() || !child.exists() |==> !child.exists()
1966:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.io.FileUtils@directoryContains:1617:!directory.exists() || !child.exists() |==> true
1967:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.io.FileUtils@cleanDirectory:1646:files == null |==> false
1968:STD:<CALL>:<NO-OP>:org.apache.commons.io.FileUtils@cleanDirectory:1653:forceDelete(file) |==> <NO-OP>
1969:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.apache.commons.io.FileUtils@cleanDirectory:1659:null != exception |==> true
1970:LVR:0:POS:org.apache.commons.io.FileUtils@waitFor:1677:0 |==> 1
1971:LVR:0:NEG:org.apache.commons.io.FileUtils@waitFor:1677:0 |==> -1
1972:LVR:0:POS:org.apache.commons.io.FileUtils@waitFor:1678:0 |==> 1
1973:LVR:0:NEG:org.apache.commons.io.FileUtils@waitFor:1678:0 |==> -1
1974:LVR:0:POS:org.apache.commons.io.FileUtils@waitFor:1681:0 |==> 1
1975:LVR:0:NEG:org.apache.commons.io.FileUtils@waitFor:1681:0 |==> -1
1976:LVR:FALSE:TRUE:org.apache.commons.io.FileUtils@waitFor:1683:false |==> true
1977:ROR:>(int,int):!=(int,int):org.apache.commons.io.FileUtils@waitFor:1682:timeout++ > seconds |==> timeout++ != seconds
1978:ROR:>(int,int):>=(int,int):org.apache.commons.io.FileUtils@waitFor:1682:timeout++ > seconds |==> timeout++ >= seconds
1979:ROR:>(int,int):FALSE(int,int):org.apache.commons.io.FileUtils@waitFor:1682:timeout++ > seconds |==> false
1980:LVR:POS:0:org.apache.commons.io.FileUtils@waitFor:1680:10 |==> 0
1981:LVR:POS:NEG:org.apache.commons.io.FileUtils@waitFor:1680:10 |==> -10
1982:ROR:>=(int,int):==(int,int):org.apache.commons.io.FileUtils@waitFor:1680:tick++ >= 10 |==> tick++ == 10
1983:ROR:>=(int,int):>(int,int):org.apache.commons.io.FileUtils@waitFor:1680:tick++ >= 10 |==> tick++ > 10
1984:ROR:>=(int,int):TRUE(int,int):org.apache.commons.io.FileUtils@waitFor:1680:tick++ >= 10 |==> true
1985:LVR:POS:0:org.apache.commons.io.FileUtils@waitFor:1687:100 |==> 0
1986:LVR:POS:NEG:org.apache.commons.io.FileUtils@waitFor:1687:100 |==> -100
1987:STD:<CALL>:<NO-OP>:org.apache.commons.io.FileUtils@waitFor:1687:Thread.sleep(100) |==> <NO-OP>
1988:LVR:TRUE:FALSE:org.apache.commons.io.FileUtils@waitFor:1694:true |==> false
1989:STD:<CALL>:<NO-OP>:org.apache.commons.io.FileUtils@readFileToString:1714:IOUtils.closeQuietly(in) |==> <NO-OP>
1990:STD:<CALL>:<NO-OP>:org.apache.commons.io.FileUtils@readFileToByteArray:1766:IOUtils.closeQuietly(in) |==> <NO-OP>
1991:STD:<CALL>:<NO-OP>:org.apache.commons.io.FileUtils@readLines:1786:IOUtils.closeQuietly(in) |==> <NO-OP>
1992:STD:<CALL>:<NO-OP>:org.apache.commons.io.FileUtils@lineIterator:1859:IOUtils.closeQuietly(in) |==> <NO-OP>
1993:STD:<CALL>:<NO-OP>:org.apache.commons.io.FileUtils@lineIterator:1862:IOUtils.closeQuietly(in) |==> <NO-OP>
1994:LVR:FALSE:TRUE:org.apache.commons.io.FileUtils@writeStringToFile:1895:false |==> true
1995:STD:<CALL>:<NO-OP>:org.apache.commons.io.FileUtils@writeStringToFile:1895:writeStringToFile(file, data, encoding, false) |==> <NO-OP>
1996:LVR:FALSE:TRUE:org.apache.commons.io.FileUtils@writeStringToFile:1911:false |==> true
1997:STD:<CALL>:<NO-OP>:org.apache.commons.io.FileUtils@writeStringToFile:1911:writeStringToFile(file, data, encoding, false) |==> <NO-OP>
1998:STD:<CALL>:<NO-OP>:org.apache.commons.io.FileUtils@writeStringToFile:1929:IOUtils.write(data, out, encoding) |==> <NO-OP>
1999:STD:<CALL>:<NO-OP>:org.apache.commons.io.FileUtils@writeStringToFile:1930:out.close() |==> <NO-OP>
2000:STD:<CALL>:<NO-OP>:org.apache.commons.io.FileUtils@writeStringToFile:1932:IOUtils.closeQuietly(out) |==> <NO-OP>
2001:STD:<CALL>:<NO-OP>:org.apache.commons.io.FileUtils@writeStringToFile:1951:writeStringToFile(file, data, Charsets.toCharset(encoding), append) |==> <NO-OP>
2002:LVR:FALSE:TRUE:org.apache.commons.io.FileUtils@writeStringToFile:1962:false |==> true
2003:STD:<CALL>:<NO-OP>:org.apache.commons.io.FileUtils@writeStringToFile:1962:writeStringToFile(file, data, Charset.defaultCharset(), false) |==> <NO-OP>
2004:STD:<CALL>:<NO-OP>:org.apache.commons.io.FileUtils@writeStringToFile:1976:writeStringToFile(file, data, Charset.defaultCharset(), append) |==> <NO-OP>
2005:LVR:FALSE:TRUE:org.apache.commons.io.FileUtils@write:1988:false |==> true
2006:STD:<CALL>:<NO-OP>:org.apache.commons.io.FileUtils@write:1988:write(file, data, Charset.defaultCharset(), false) |==> <NO-OP>
2007:STD:<CALL>:<NO-OP>:org.apache.commons.io.FileUtils@write:2002:write(file, data, Charset.defaultCharset(), append) |==> <NO-OP>
2008:LVR:FALSE:TRUE:org.apache.commons.io.FileUtils@write:2015:false |==> true
2009:STD:<CALL>:<NO-OP>:org.apache.commons.io.FileUtils@write:2015:write(file, data, encoding, false) |==> <NO-OP>
2010:LVR:FALSE:TRUE:org.apache.commons.io.FileUtils@write:2029:false |==> true
2011:STD:<CALL>:<NO-OP>:org.apache.commons.io.FileUtils@write:2029:write(file, data, encoding, false) |==> <NO-OP>
2012:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.io.FileUtils@write:2044:data == null |==> false
2013:STD:<CALL>:<NO-OP>:org.apache.commons.io.FileUtils@write:2045:writeStringToFile(file, str, encoding, append) |==> <NO-OP>
2014:STD:<CALL>:<NO-OP>:org.apache.commons.io.FileUtils@write:2063:write(file, data, Charsets.toCharset(encoding), append) |==> <NO-OP>
2015:LVR:FALSE:TRUE:org.apache.commons.io.FileUtils@writeByteArrayToFile:2078:false |==> true
2016:STD:<CALL>:<NO-OP>:org.apache.commons.io.FileUtils@writeByteArrayToFile:2078:writeByteArrayToFile(file, data, false) |==> <NO-OP>
2017:STD:<CALL>:<NO-OP>:org.apache.commons.io.FileUtils@writeByteArrayToFile:2095:out.write(data) |==> <NO-OP>
2018:STD:<CALL>:<NO-OP>:org.apache.commons.io.FileUtils@writeByteArrayToFile:2096:out.close() |==> <NO-OP>
2019:STD:<CALL>:<NO-OP>:org.apache.commons.io.FileUtils@writeByteArrayToFile:2098:IOUtils.closeQuietly(out) |==> <NO-OP>
2020:LVR:FALSE:TRUE:org.apache.commons.io.FileUtils@writeLines:2118:false |==> true
2021:STD:<CALL>:<NO-OP>:org.apache.commons.io.FileUtils@writeLines:2118:writeLines(file, encoding, lines, null, false) |==> <NO-OP>
2022:STD:<CALL>:<NO-OP>:org.apache.commons.io.FileUtils@writeLines:2136:writeLines(file, encoding, lines, null, append) |==> <NO-OP>
2023:LVR:FALSE:TRUE:org.apache.commons.io.FileUtils@writeLines:2150:false |==> true
2024:STD:<CALL>:<NO-OP>:org.apache.commons.io.FileUtils@writeLines:2150:writeLines(file, null, lines, null, false) |==> <NO-OP>
2025:STD:<CALL>:<NO-OP>:org.apache.commons.io.FileUtils@writeLines:2166:writeLines(file, null, lines, null, append) |==> <NO-OP>
2026:LVR:FALSE:TRUE:org.apache.commons.io.FileUtils@writeLines:2187:false |==> true
2027:STD:<CALL>:<NO-OP>:org.apache.commons.io.FileUtils@writeLines:2187:writeLines(file, encoding, lines, lineEnding, false) |==> <NO-OP>
2028:STD:<CALL>:<NO-OP>:org.apache.commons.io.FileUtils@writeLines:2211:IOUtils.writeLines(lines, lineEnding, buffer, encoding) |==> <NO-OP>
2029:STD:<CALL>:<NO-OP>:org.apache.commons.io.FileUtils@writeLines:2212:buffer.flush() |==> <NO-OP>
2030:STD:<CALL>:<NO-OP>:org.apache.commons.io.FileUtils@writeLines:2213:out.close() |==> <NO-OP>
2031:STD:<CALL>:<NO-OP>:org.apache.commons.io.FileUtils@writeLines:2215:IOUtils.closeQuietly(out) |==> <NO-OP>
2032:LVR:FALSE:TRUE:org.apache.commons.io.FileUtils@writeLines:2231:false |==> true
2033:STD:<CALL>:<NO-OP>:org.apache.commons.io.FileUtils@writeLines:2231:writeLines(file, null, lines, lineEnding, false) |==> <NO-OP>
2034:STD:<CALL>:<NO-OP>:org.apache.commons.io.FileUtils@writeLines:2249:writeLines(file, null, lines, lineEnding, append) |==> <NO-OP>
2035:STD:<CALL>:<NO-OP>:org.apache.commons.io.FileUtils@forceDelete:2270:deleteDirectory(file) |==> <NO-OP>
2036:COR:file.isDirectory():TRUE:org.apache.commons.io.FileUtils@forceDelete:2269:file.isDirectory() |==> false
2037:COR:file.isDirectory():FALSE:org.apache.commons.io.FileUtils@forceDelete:2269:file.isDirectory() |==> true
2038:STD:<CALL>:<NO-OP>:org.apache.commons.io.FileUtils@forceDeleteOnExit:2294:deleteDirectoryOnExit(file) |==> <NO-OP>
2039:STD:<CALL>:<NO-OP>:org.apache.commons.io.FileUtils@forceDeleteOnExit:2296:file.deleteOnExit() |==> <NO-OP>
2040:COR:file.isDirectory():TRUE:org.apache.commons.io.FileUtils@forceDeleteOnExit:2293:file.isDirectory() |==> false
2041:COR:file.isDirectory():FALSE:org.apache.commons.io.FileUtils@forceDeleteOnExit:2293:file.isDirectory() |==> true
2042:STD:<CALL>:<NO-OP>:org.apache.commons.io.FileUtils@deleteDirectoryOnExit:2312:directory.deleteOnExit() |==> <NO-OP>
2043:STD:<CALL>:<NO-OP>:org.apache.commons.io.FileUtils@deleteDirectoryOnExit:2314:cleanDirectoryOnExit(directory) |==> <NO-OP>
2044:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.io.FileUtils@cleanDirectoryOnExit:2337:files == null |==> false
2045:STD:<CALL>:<NO-OP>:org.apache.commons.io.FileUtils@cleanDirectoryOnExit:2344:forceDeleteOnExit(file) |==> <NO-OP>
2046:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.apache.commons.io.FileUtils@cleanDirectoryOnExit:2350:null != exception |==> true
2047:COR:directory.exists():TRUE:org.apache.commons.io.FileUtils@forceMkdir:2367:directory.exists() |==> false
2048:COR:directory.exists():FALSE:org.apache.commons.io.FileUtils@forceMkdir:2367:directory.exists() |==> true
2049:COR:file.isDirectory():TRUE:org.apache.commons.io.FileUtils@sizeOf:2416:file.isDirectory() |==> false
2050:COR:file.isDirectory():FALSE:org.apache.commons.io.FileUtils@sizeOf:2416:file.isDirectory() |==> true
2051:COR:file.isDirectory():TRUE:org.apache.commons.io.FileUtils@sizeOfAsBigInteger:2449:file.isDirectory() |==> false
2052:COR:file.isDirectory():FALSE:org.apache.commons.io.FileUtils@sizeOfAsBigInteger:2449:file.isDirectory() |==> true
2053:STD:<CALL>:<NO-OP>:org.apache.commons.io.FileUtils@sizeOfDirectory:2468:checkDirectory(directory) |==> <NO-OP>
2054:LVR:POS:0:org.apache.commons.io.FileUtils@sizeOfDirectory:2472:0L |==> 0L
2055:LVR:POS:NEG:org.apache.commons.io.FileUtils@sizeOfDirectory:2472:0L |==> 0L
2056:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.io.FileUtils@sizeOfDirectory:2471:files == null |==> false
2057:LVR:0:POS:org.apache.commons.io.FileUtils@sizeOfDirectory:2474:0 |==> 1
2058:LVR:0:NEG:org.apache.commons.io.FileUtils@sizeOfDirectory:2474:0 |==> -1
2059:STD:<ASSIGN>:<NO-OP>:org.apache.commons.io.FileUtils@sizeOfDirectory:2479:size += sizeOf(file) |==> <NO-OP>
2060:LVR:0:POS:org.apache.commons.io.FileUtils@sizeOfDirectory:2480:0 |==> 1
2061:LVR:0:NEG:org.apache.commons.io.FileUtils@sizeOfDirectory:2480:0 |==> -1
2062:ROR:<(long,long):!=(long,long):org.apache.commons.io.FileUtils@sizeOfDirectory:2480:size < 0 |==> size != 0
2063:ROR:<(long,long):<=(long,long):org.apache.commons.io.FileUtils@sizeOfDirectory:2480:size < 0 |==> size <= 0
2064:ROR:<(long,long):FALSE(long,long):org.apache.commons.io.FileUtils@sizeOfDirectory:2480:size < 0 |==> false
2065:STD:<CALL>:<NO-OP>:org.apache.commons.io.FileUtils@sizeOfDirectoryAsBigInteger:2503:checkDirectory(directory) |==> <NO-OP>
2066:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.io.FileUtils@sizeOfDirectoryAsBigInteger:2506:files == null |==> false
2067:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.io.FileUtils@isFileNewer:2554:reference == null |==> false
2068:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.io.FileUtils@isFileNewer:2577:date == null |==> false
2069:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.io.FileUtils@isFileNewer:2596:file == null |==> false
2070:LVR:FALSE:TRUE:org.apache.commons.io.FileUtils@isFileNewer:2600:false |==> true
2071:ROR:>(long,long):!=(long,long):org.apache.commons.io.FileUtils@isFileNewer:2602:file.lastModified() > timeMillis |==> file.lastModified() != timeMillis
2072:ROR:>(long,long):>=(long,long):org.apache.commons.io.FileUtils@isFileNewer:2602:file.lastModified() > timeMillis |==> file.lastModified() >= timeMillis
2073:ROR:>(long,long):FALSE(long,long):org.apache.commons.io.FileUtils@isFileNewer:2602:file.lastModified() > timeMillis |==> false
2074:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.io.FileUtils@isFileOlder:2621:reference == null |==> false
2075:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.io.FileUtils@isFileOlder:2644:date == null |==> false
2076:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.io.FileUtils@isFileOlder:2663:file == null |==> false
2077:LVR:FALSE:TRUE:org.apache.commons.io.FileUtils@isFileOlder:2667:false |==> true
2078:ROR:<(long,long):!=(long,long):org.apache.commons.io.FileUtils@isFileOlder:2669:file.lastModified() < timeMillis |==> file.lastModified() != timeMillis
2079:ROR:<(long,long):<=(long,long):org.apache.commons.io.FileUtils@isFileOlder:2669:file.lastModified() < timeMillis |==> file.lastModified() <= timeMillis
2080:ROR:<(long,long):FALSE(long,long):org.apache.commons.io.FileUtils@isFileOlder:2669:file.lastModified() < timeMillis |==> false
2081:STD:<CALL>:<NO-OP>:org.apache.commons.io.FileUtils@checksumCRC32:2686:checksum(file, crc) |==> <NO-OP>
2082:COR:file.isDirectory():TRUE:org.apache.commons.io.FileUtils@checksum:2708:file.isDirectory() |==> false
2083:COR:file.isDirectory():FALSE:org.apache.commons.io.FileUtils@checksum:2708:file.isDirectory() |==> true
2084:STD:<CALL>:<NO-OP>:org.apache.commons.io.FileUtils@checksum:2714:IOUtils.copy(in, new NullOutputStream()) |==> <NO-OP>
2085:STD:<CALL>:<NO-OP>:org.apache.commons.io.FileUtils@checksum:2716:IOUtils.closeQuietly(in) |==> <NO-OP>
2086:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.io.FileUtils@moveDirectory:2735:srcDir == null |==> false
2087:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.io.FileUtils@moveDirectory:2738:destDir == null |==> false
2088:COR:destDir.exists():TRUE:org.apache.commons.io.FileUtils@moveDirectory:2747:destDir.exists() |==> false
2089:COR:destDir.exists():FALSE:org.apache.commons.io.FileUtils@moveDirectory:2747:destDir.exists() |==> true
2090:COR:destDir.getCanonicalPath().startsWith(srcDir.getCanonicalPath()):TRUE:org.apache.commons.io.FileUtils@moveDirectory:2752:destDir.getCanonicalPath().startsWith(srcDir.getCanonicalPath()) |==> false
2091:COR:destDir.getCanonicalPath().startsWith(srcDir.getCanonicalPath()):FALSE:org.apache.commons.io.FileUtils@moveDirectory:2752:destDir.getCanonicalPath().startsWith(srcDir.getCanonicalPath()) |==> true
2092:STD:<CALL>:<NO-OP>:org.apache.commons.io.FileUtils@moveDirectory:2755:copyDirectory(srcDir, destDir) |==> <NO-OP>
2093:STD:<CALL>:<NO-OP>:org.apache.commons.io.FileUtils@moveDirectory:2756:deleteDirectory(srcDir) |==> <NO-OP>
2094:COR:srcDir.exists():TRUE:org.apache.commons.io.FileUtils@moveDirectory:2757:srcDir.exists() |==> false
2095:COR:srcDir.exists():FALSE:org.apache.commons.io.FileUtils@moveDirectory:2757:srcDir.exists() |==> true
2096:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.io.FileUtils@moveDirectoryToDirectory:2778:src == null |==> false
2097:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.io.FileUtils@moveDirectoryToDirectory:2781:destDir == null |==> false
2098:STD:<CALL>:<NO-OP>:org.apache.commons.io.FileUtils@moveDirectoryToDirectory:2785:destDir.mkdirs() |==> <NO-OP>
2099:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.io.FileUtils@moveDirectoryToDirectory:2784:!destDir.exists() && createDestDir |==> !destDir.exists() == createDestDir
2100:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.io.FileUtils@moveDirectoryToDirectory:2784:!destDir.exists() && createDestDir |==> false
2101:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.io.FileUtils@moveDirectoryToDirectory:2784:!destDir.exists() && createDestDir |==> !destDir.exists()
2102:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.io.FileUtils@moveDirectoryToDirectory:2784:!destDir.exists() && createDestDir |==> createDestDir
2103:STD:<CALL>:<NO-OP>:org.apache.commons.io.FileUtils@moveDirectoryToDirectory:2794:moveDirectory(src, new File(destDir, src.getName())) |==> <NO-OP>
2104:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.io.FileUtils@moveFile:2812:srcFile == null |==> false
2105:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.io.FileUtils@moveFile:2815:destFile == null |==> false
2106:COR:srcFile.isDirectory():TRUE:org.apache.commons.io.FileUtils@moveFile:2821:srcFile.isDirectory() |==> false
2107:COR:srcFile.isDirectory():FALSE:org.apache.commons.io.FileUtils@moveFile:2821:srcFile.isDirectory() |==> true
2108:COR:destFile.exists():TRUE:org.apache.commons.io.FileUtils@moveFile:2824:destFile.exists() |==> false
2109:COR:destFile.exists():FALSE:org.apache.commons.io.FileUtils@moveFile:2824:destFile.exists() |==> true
2110:COR:destFile.isDirectory():TRUE:org.apache.commons.io.FileUtils@moveFile:2827:destFile.isDirectory() |==> false
2111:COR:destFile.isDirectory():FALSE:org.apache.commons.io.FileUtils@moveFile:2827:destFile.isDirectory() |==> true
2112:STD:<CALL>:<NO-OP>:org.apache.commons.io.FileUtils@moveFile:2832:copyFile(srcFile, destFile) |==> <NO-OP>
2113:STD:<CALL>:<NO-OP>:org.apache.commons.io.FileUtils@moveFile:2834:FileUtils.deleteQuietly(destFile) |==> <NO-OP>
2114:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.io.FileUtils@moveFileToDirectory:2855:srcFile == null |==> false
2115:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.io.FileUtils@moveFileToDirectory:2858:destDir == null |==> false
2116:STD:<CALL>:<NO-OP>:org.apache.commons.io.FileUtils@moveFileToDirectory:2862:destDir.mkdirs() |==> <NO-OP>
2117:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.io.FileUtils@moveFileToDirectory:2861:!destDir.exists() && createDestDir |==> !destDir.exists() == createDestDir
2118:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.io.FileUtils@moveFileToDirectory:2861:!destDir.exists() && createDestDir |==> false
2119:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.io.FileUtils@moveFileToDirectory:2861:!destDir.exists() && createDestDir |==> !destDir.exists()
2120:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.io.FileUtils@moveFileToDirectory:2861:!destDir.exists() && createDestDir |==> createDestDir
2121:STD:<CALL>:<NO-OP>:org.apache.commons.io.FileUtils@moveFileToDirectory:2871:moveFile(srcFile, new File(destDir, srcFile.getName())) |==> <NO-OP>
2122:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.io.FileUtils@moveToDirectory:2890:src == null |==> false
2123:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.io.FileUtils@moveToDirectory:2893:destDir == null |==> false
2124:STD:<CALL>:<NO-OP>:org.apache.commons.io.FileUtils@moveToDirectory:2900:moveDirectoryToDirectory(src, destDir, createDestDir) |==> <NO-OP>
2125:STD:<CALL>:<NO-OP>:org.apache.commons.io.FileUtils@moveToDirectory:2902:moveFileToDirectory(src, destDir, createDestDir) |==> <NO-OP>
2126:COR:src.isDirectory():TRUE:org.apache.commons.io.FileUtils@moveToDirectory:2899:src.isDirectory() |==> false
2127:COR:src.isDirectory():FALSE:org.apache.commons.io.FileUtils@moveToDirectory:2899:src.isDirectory() |==> true
2128:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.io.FileUtils@isSymlink:2921:file == null |==> false
2129:LVR:FALSE:TRUE:org.apache.commons.io.FileUtils@isSymlink:2925:false |==> true
2130:COR:FilenameUtils.isSystemWindows():TRUE:org.apache.commons.io.FileUtils@isSymlink:2924:FilenameUtils.isSystemWindows() |==> false
2131:COR:FilenameUtils.isSystemWindows():FALSE:org.apache.commons.io.FileUtils@isSymlink:2924:FilenameUtils.isSystemWindows() |==> true
2132:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.io.FileUtils@isSymlink:2928:file.getParent() == null |==> false
2133:LVR:FALSE:TRUE:org.apache.commons.io.FileUtils@isSymlink:2936:false |==> true
2134:LVR:TRUE:FALSE:org.apache.commons.io.FileUtils@isSymlink:2938:true |==> false
2135:COR:fileInCanonicalDir.getCanonicalFile().equals(fileInCanonicalDir.getAbsoluteFile()):TRUE:org.apache.commons.io.FileUtils@isSymlink:2935:fileInCanonicalDir.getCanonicalFile().equals(fileInCanonicalDir.getAbsoluteFile()) |==> false
2136:COR:fileInCanonicalDir.getCanonicalFile().equals(fileInCanonicalDir.getAbsoluteFile()):FALSE:org.apache.commons.io.FileUtils@isSymlink:2935:fileInCanonicalDir.getCanonicalFile().equals(fileInCanonicalDir.getAbsoluteFile()) |==> true
2137:LVR:FALSE:TRUE:org.apache.commons.io.LineIterator:59:false |==> true
2138:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.io.LineIterator@<init>:68:reader == null |==> false
2139:LVR:TRUE:FALSE:org.apache.commons.io.LineIterator@hasNext:89:true |==> false
2140:LVR:FALSE:TRUE:org.apache.commons.io.LineIterator@hasNext:91:false |==> true
2141:LVR:TRUE:FALSE:org.apache.commons.io.LineIterator@hasNext:97:true |==> false
2142:LVR:FALSE:TRUE:org.apache.commons.io.LineIterator@hasNext:98:false |==> true
2143:LVR:TRUE:FALSE:org.apache.commons.io.LineIterator@hasNext:101:true |==> false
2144:COR:isValidLine(line):TRUE:org.apache.commons.io.LineIterator@hasNext:99:isValidLine(line) |==> false
2145:COR:isValidLine(line):FALSE:org.apache.commons.io.LineIterator@hasNext:99:isValidLine(line) |==> true
2146:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.io.LineIterator@hasNext:96:line == null |==> false
2147:STD:<CALL>:<NO-OP>:org.apache.commons.io.LineIterator@hasNext:105:close() |==> <NO-OP>
2148:COR:finished:TRUE:org.apache.commons.io.LineIterator@hasNext:90:finished |==> false
2149:COR:finished:FALSE:org.apache.commons.io.LineIterator@hasNext:90:finished |==> true
2150:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.apache.commons.io.LineIterator@hasNext:88:cachedLine != null |==> true
2151:LVR:TRUE:FALSE:org.apache.commons.io.LineIterator@isValidLine:118:true |==> false
2152:LVR:TRUE:FALSE:org.apache.commons.io.LineIterator@close:154:true |==> false
2153:STD:<CALL>:<NO-OP>:org.apache.commons.io.LineIterator@close:155:IOUtils.closeQuietly(bufferedReader) |==> <NO-OP>
2154:STD:<CALL>:<NO-OP>:org.apache.commons.io.LineIterator@closeQuietly:176:iterator.close() |==> <NO-OP>
2155:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.apache.commons.io.LineIterator@closeQuietly:175:iterator != null |==> true
2156:COR:isSystemWindows():TRUE:org.apache.commons.io.FilenameUtils:117:isSystemWindows() |==> false
2157:COR:isSystemWindows():FALSE:org.apache.commons.io.FilenameUtils:117:isSystemWindows() |==> true
2158:ROR:==(int,int):<=(int,int):org.apache.commons.io.FilenameUtils@isSystemWindows:138:SYSTEM_SEPARATOR == WINDOWS_SEPARATOR |==> SYSTEM_SEPARATOR <= WINDOWS_SEPARATOR
2159:ROR:==(int,int):>=(int,int):org.apache.commons.io.FilenameUtils@isSystemWindows:138:SYSTEM_SEPARATOR == WINDOWS_SEPARATOR |==> SYSTEM_SEPARATOR >= WINDOWS_SEPARATOR
2160:ROR:==(int,int):FALSE(int,int):org.apache.commons.io.FilenameUtils@isSystemWindows:138:SYSTEM_SEPARATOR == WINDOWS_SEPARATOR |==> false
2161:ROR:==(int,int):<=(int,int):org.apache.commons.io.FilenameUtils@isSeparator:149:ch == UNIX_SEPARATOR |==> ch <= UNIX_SEPARATOR
2162:ROR:==(int,int):>=(int,int):org.apache.commons.io.FilenameUtils@isSeparator:149:ch == UNIX_SEPARATOR |==> ch >= UNIX_SEPARATOR
2163:ROR:==(int,int):FALSE(int,int):org.apache.commons.io.FilenameUtils@isSeparator:149:ch == UNIX_SEPARATOR |==> false
2164:ROR:==(int,int):<=(int,int):org.apache.commons.io.FilenameUtils@isSeparator:149:ch == WINDOWS_SEPARATOR |==> ch <= WINDOWS_SEPARATOR
2165:ROR:==(int,int):>=(int,int):org.apache.commons.io.FilenameUtils@isSeparator:149:ch == WINDOWS_SEPARATOR |==> ch >= WINDOWS_SEPARATOR
2166:ROR:==(int,int):FALSE(int,int):org.apache.commons.io.FilenameUtils@isSeparator:149:ch == WINDOWS_SEPARATOR |==> false
2167:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.io.FilenameUtils@isSeparator:149:ch == UNIX_SEPARATOR || ch == WINDOWS_SEPARATOR |==> ch == UNIX_SEPARATOR != (ch == WINDOWS_SEPARATOR)
2168:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.io.FilenameUtils@isSeparator:149:ch == UNIX_SEPARATOR || ch == WINDOWS_SEPARATOR |==> ch == UNIX_SEPARATOR
2169:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.io.FilenameUtils@isSeparator:149:ch == UNIX_SEPARATOR || ch == WINDOWS_SEPARATOR |==> ch == WINDOWS_SEPARATOR
2170:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.io.FilenameUtils@isSeparator:149:ch == UNIX_SEPARATOR || ch == WINDOWS_SEPARATOR |==> true
2171:LVR:TRUE:FALSE:org.apache.commons.io.FilenameUtils@normalize:194:true |==> false
2172:LVR:TRUE:FALSE:org.apache.commons.io.FilenameUtils@normalize:242:true |==> false
2173:LVR:FALSE:TRUE:org.apache.commons.io.FilenameUtils@normalizeNoEndSeparator:288:false |==> true
2174:LVR:FALSE:TRUE:org.apache.commons.io.FilenameUtils@normalizeNoEndSeparator:336:false |==> true
2175:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.io.FilenameUtils@doNormalize:348:filename == null |==> false
2176:LVR:0:POS:org.apache.commons.io.FilenameUtils@doNormalize:352:0 |==> 1
2177:LVR:0:NEG:org.apache.commons.io.FilenameUtils@doNormalize:352:0 |==> -1
2178:ROR:==(int,int):<=(int,int):org.apache.commons.io.FilenameUtils@doNormalize:352:size == 0 |==> size <= 0
2179:ROR:==(int,int):>=(int,int):org.apache.commons.io.FilenameUtils@doNormalize:352:size == 0 |==> size >= 0
2180:ROR:==(int,int):FALSE(int,int):org.apache.commons.io.FilenameUtils@doNormalize:352:size == 0 |==> false
2181:LVR:0:POS:org.apache.commons.io.FilenameUtils@doNormalize:356:0 |==> 1
2182:LVR:0:NEG:org.apache.commons.io.FilenameUtils@doNormalize:356:0 |==> -1
2183:ROR:<(int,int):!=(int,int):org.apache.commons.io.FilenameUtils@doNormalize:356:prefix < 0 |==> prefix != 0
2184:ROR:<(int,int):<=(int,int):org.apache.commons.io.FilenameUtils@doNormalize:356:prefix < 0 |==> prefix <= 0
2185:ROR:<(int,int):FALSE(int,int):org.apache.commons.io.FilenameUtils@doNormalize:356:prefix < 0 |==> false
2186:LVR:POS:0:org.apache.commons.io.FilenameUtils@doNormalize:360:2 |==> 0
2187:LVR:POS:NEG:org.apache.commons.io.FilenameUtils@doNormalize:360:2 |==> -2
2188:AOR:+(int,int):%(int,int):org.apache.commons.io.FilenameUtils@doNormalize:360:size + 2 |==> size % 2
2189:AOR:+(int,int):*(int,int):org.apache.commons.io.FilenameUtils@doNormalize:360:size + 2 |==> size * 2
2190:AOR:+(int,int):-(int,int):org.apache.commons.io.FilenameUtils@doNormalize:360:size + 2 |==> size - 2
2191:AOR:+(int,int):/(int,int):org.apache.commons.io.FilenameUtils@doNormalize:360:size + 2 |==> size / 2
2192:LVR:0:POS:org.apache.commons.io.FilenameUtils@doNormalize:361:0 |==> 1
2193:LVR:0:NEG:org.apache.commons.io.FilenameUtils@doNormalize:361:0 |==> -1
2194:LVR:0:POS:org.apache.commons.io.FilenameUtils@doNormalize:361:0 |==> 1
2195:LVR:0:NEG:org.apache.commons.io.FilenameUtils@doNormalize:361:0 |==> -1
2196:STD:<CALL>:<NO-OP>:org.apache.commons.io.FilenameUtils@doNormalize:361:filename.getChars(0, filename.length(), array, 0) |==> <NO-OP>
2197:ROR:==(int,int):<=(int,int):org.apache.commons.io.FilenameUtils@doNormalize:364:separator == SYSTEM_SEPARATOR |==> separator <= SYSTEM_SEPARATOR
2198:ROR:==(int,int):>=(int,int):org.apache.commons.io.FilenameUtils@doNormalize:364:separator == SYSTEM_SEPARATOR |==> separator >= SYSTEM_SEPARATOR
2199:ROR:==(int,int):FALSE(int,int):org.apache.commons.io.FilenameUtils@doNormalize:364:separator == SYSTEM_SEPARATOR |==> false
2200:LVR:0:POS:org.apache.commons.io.FilenameUtils@doNormalize:365:0 |==> 1
2201:LVR:0:NEG:org.apache.commons.io.FilenameUtils@doNormalize:365:0 |==> -1
2202:ROR:<(int,int):!=(int,int):org.apache.commons.io.FilenameUtils@doNormalize:365:i < array.length |==> i != array.length
2203:ROR:<(int,int):<=(int,int):org.apache.commons.io.FilenameUtils@doNormalize:365:i < array.length |==> i <= array.length
2204:ROR:<(int,int):FALSE(int,int):org.apache.commons.io.FilenameUtils@doNormalize:365:i < array.length |==> false
2205:ROR:==(int,int):<=(int,int):org.apache.commons.io.FilenameUtils@doNormalize:366:array[i] == otherSeparator |==> array[i] <= otherSeparator
2206:ROR:==(int,int):>=(int,int):org.apache.commons.io.FilenameUtils@doNormalize:366:array[i] == otherSeparator |==> array[i] >= otherSeparator
2207:ROR:==(int,int):FALSE(int,int):org.apache.commons.io.FilenameUtils@doNormalize:366:array[i] == otherSeparator |==> false
2208:LVR:TRUE:FALSE:org.apache.commons.io.FilenameUtils@doNormalize:372:true |==> false
2209:LVR:FALSE:TRUE:org.apache.commons.io.FilenameUtils@doNormalize:375:false |==> true
2210:LVR:POS:0:org.apache.commons.io.FilenameUtils@doNormalize:373:1 |==> 0
2211:LVR:POS:NEG:org.apache.commons.io.FilenameUtils@doNormalize:373:1 |==> -1
2212:AOR:-(int,int):%(int,int):org.apache.commons.io.FilenameUtils@doNormalize:373:size - 1 |==> size % 1
2213:AOR:-(int,int):*(int,int):org.apache.commons.io.FilenameUtils@doNormalize:373:size - 1 |==> size * 1
2214:AOR:-(int,int):+(int,int):org.apache.commons.io.FilenameUtils@doNormalize:373:size - 1 |==> size + 1
2215:AOR:-(int,int):/(int,int):org.apache.commons.io.FilenameUtils@doNormalize:373:size - 1 |==> size / 1
2216:ROR:!=(int,int):<(int,int):org.apache.commons.io.FilenameUtils@doNormalize:373:array[size - 1] != separator |==> array[size - 1] < separator
2217:ROR:!=(int,int):>(int,int):org.apache.commons.io.FilenameUtils@doNormalize:373:array[size - 1] != separator |==> array[size - 1] > separator
2218:ROR:!=(int,int):TRUE(int,int):org.apache.commons.io.FilenameUtils@doNormalize:373:array[size - 1] != separator |==> true
2219:LVR:POS:0:org.apache.commons.io.FilenameUtils@doNormalize:379:1 |==> 0
2220:LVR:POS:NEG:org.apache.commons.io.FilenameUtils@doNormalize:379:1 |==> -1
2221:AOR:+(int,int):%(int,int):org.apache.commons.io.FilenameUtils@doNormalize:379:prefix + 1 |==> prefix % 1
2222:AOR:+(int,int):*(int,int):org.apache.commons.io.FilenameUtils@doNormalize:379:prefix + 1 |==> prefix * 1
2223:AOR:+(int,int):-(int,int):org.apache.commons.io.FilenameUtils@doNormalize:379:prefix + 1 |==> prefix - 1
2224:AOR:+(int,int):/(int,int):org.apache.commons.io.FilenameUtils@doNormalize:379:prefix + 1 |==> prefix / 1
2225:ROR:<(int,int):!=(int,int):org.apache.commons.io.FilenameUtils@doNormalize:379:i < size |==> i != size
2226:ROR:<(int,int):<=(int,int):org.apache.commons.io.FilenameUtils@doNormalize:379:i < size |==> i <= size
2227:ROR:<(int,int):FALSE(int,int):org.apache.commons.io.FilenameUtils@doNormalize:379:i < size |==> false
2228:LVR:POS:0:org.apache.commons.io.FilenameUtils@doNormalize:381:1 |==> 0
2229:LVR:POS:NEG:org.apache.commons.io.FilenameUtils@doNormalize:381:1 |==> -1
2230:AOR:-(int,int):%(int,int):org.apache.commons.io.FilenameUtils@doNormalize:381:i - 1 |==> i % 1
2231:AOR:-(int,int):*(int,int):org.apache.commons.io.FilenameUtils@doNormalize:381:i - 1 |==> i * 1
2232:AOR:-(int,int):+(int,int):org.apache.commons.io.FilenameUtils@doNormalize:381:i - 1 |==> i + 1
2233:AOR:-(int,int):/(int,int):org.apache.commons.io.FilenameUtils@doNormalize:381:i - 1 |==> i / 1
2234:AOR:-(int,int):%(int,int):org.apache.commons.io.FilenameUtils@doNormalize:381:size - i |==> size % i
2235:AOR:-(int,int):*(int,int):org.apache.commons.io.FilenameUtils@doNormalize:381:size - i |==> size * i
2236:AOR:-(int,int):+(int,int):org.apache.commons.io.FilenameUtils@doNormalize:381:size - i |==> size + i
2237:AOR:-(int,int):/(int,int):org.apache.commons.io.FilenameUtils@doNormalize:381:size - i |==> size / i
2238:STD:<CALL>:<NO-OP>:org.apache.commons.io.FilenameUtils@doNormalize:381:System.arraycopy(array, i, array, i - 1, size - i) |==> <NO-OP>
2239:STD:<INC/DEC>:<NO-OP>:org.apache.commons.io.FilenameUtils@doNormalize:382:size-- |==> <NO-OP>
2240:STD:<INC/DEC>:<NO-OP>:org.apache.commons.io.FilenameUtils@doNormalize:383:i-- |==> <NO-OP>
2241:ROR:==(int,int):<=(int,int):org.apache.commons.io.FilenameUtils@doNormalize:380:array[i] == separator |==> array[i] <= separator
2242:ROR:==(int,int):>=(int,int):org.apache.commons.io.FilenameUtils@doNormalize:380:array[i] == separator |==> array[i] >= separator
2243:ROR:==(int,int):FALSE(int,int):org.apache.commons.io.FilenameUtils@doNormalize:380:array[i] == separator |==> false
2244:LVR:POS:0:org.apache.commons.io.FilenameUtils@doNormalize:380:1 |==> 0
2245:LVR:POS:NEG:org.apache.commons.io.FilenameUtils@doNormalize:380:1 |==> -1
2246:AOR:-(int,int):%(int,int):org.apache.commons.io.FilenameUtils@doNormalize:380:i - 1 |==> i % 1
2247:AOR:-(int,int):*(int,int):org.apache.commons.io.FilenameUtils@doNormalize:380:i - 1 |==> i * 1
2248:AOR:-(int,int):+(int,int):org.apache.commons.io.FilenameUtils@doNormalize:380:i - 1 |==> i + 1
2249:AOR:-(int,int):/(int,int):org.apache.commons.io.FilenameUtils@doNormalize:380:i - 1 |==> i / 1
2250:ROR:==(int,int):<=(int,int):org.apache.commons.io.FilenameUtils@doNormalize:380:array[i - 1] == separator |==> array[i - 1] <= separator
2251:ROR:==(int,int):>=(int,int):org.apache.commons.io.FilenameUtils@doNormalize:380:array[i - 1] == separator |==> array[i - 1] >= separator
2252:ROR:==(int,int):FALSE(int,int):org.apache.commons.io.FilenameUtils@doNormalize:380:array[i - 1] == separator |==> false
2253:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.io.FilenameUtils@doNormalize:380:array[i] == separator && array[i - 1] == separator |==> array[i] == separator == (array[i - 1] == separator)
2254:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.io.FilenameUtils@doNormalize:380:array[i] == separator && array[i - 1] == separator |==> false
2255:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.io.FilenameUtils@doNormalize:380:array[i] == separator && array[i - 1] == separator |==> array[i] == separator
2256:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.io.FilenameUtils@doNormalize:380:array[i] == separator && array[i - 1] == separator |==> array[i - 1] == separator
2257:LVR:POS:0:org.apache.commons.io.FilenameUtils@doNormalize:388:1 |==> 0
2258:LVR:POS:NEG:org.apache.commons.io.FilenameUtils@doNormalize:388:1 |==> -1
2259:AOR:+(int,int):%(int,int):org.apache.commons.io.FilenameUtils@doNormalize:388:prefix + 1 |==> prefix % 1
2260:AOR:+(int,int):*(int,int):org.apache.commons.io.FilenameUtils@doNormalize:388:prefix + 1 |==> prefix * 1
2261:AOR:+(int,int):-(int,int):org.apache.commons.io.FilenameUtils@doNormalize:388:prefix + 1 |==> prefix - 1
2262:AOR:+(int,int):/(int,int):org.apache.commons.io.FilenameUtils@doNormalize:388:prefix + 1 |==> prefix / 1
2263:ROR:<(int,int):!=(int,int):org.apache.commons.io.FilenameUtils@doNormalize:388:i < size |==> i != size
2264:ROR:<(int,int):<=(int,int):org.apache.commons.io.FilenameUtils@doNormalize:388:i < size |==> i <= size
2265:ROR:<(int,int):FALSE(int,int):org.apache.commons.io.FilenameUtils@doNormalize:388:i < size |==> false
2266:LVR:TRUE:FALSE:org.apache.commons.io.FilenameUtils@doNormalize:392:true |==> false
2267:LVR:POS:0:org.apache.commons.io.FilenameUtils@doNormalize:391:1 |==> 0
2268:LVR:POS:NEG:org.apache.commons.io.FilenameUtils@doNormalize:391:1 |==> -1
2269:AOR:-(int,int):%(int,int):org.apache.commons.io.FilenameUtils@doNormalize:391:size - 1 |==> size % 1
2270:AOR:-(int,int):*(int,int):org.apache.commons.io.FilenameUtils@doNormalize:391:size - 1 |==> size * 1
2271:AOR:-(int,int):+(int,int):org.apache.commons.io.FilenameUtils@doNormalize:391:size - 1 |==> size + 1
2272:AOR:-(int,int):/(int,int):org.apache.commons.io.FilenameUtils@doNormalize:391:size - 1 |==> size / 1
2273:ROR:==(int,int):<=(int,int):org.apache.commons.io.FilenameUtils@doNormalize:391:i == size - 1 |==> i <= size - 1
2274:ROR:==(int,int):>=(int,int):org.apache.commons.io.FilenameUtils@doNormalize:391:i == size - 1 |==> i >= size - 1
2275:ROR:==(int,int):FALSE(int,int):org.apache.commons.io.FilenameUtils@doNormalize:391:i == size - 1 |==> false
2276:LVR:POS:0:org.apache.commons.io.FilenameUtils@doNormalize:394:1 |==> 0
2277:LVR:POS:NEG:org.apache.commons.io.FilenameUtils@doNormalize:394:1 |==> -1
2278:AOR:+(int,int):%(int,int):org.apache.commons.io.FilenameUtils@doNormalize:394:i + 1 |==> i % 1
2279:AOR:+(int,int):*(int,int):org.apache.commons.io.FilenameUtils@doNormalize:394:i + 1 |==> i * 1
2280:AOR:+(int,int):-(int,int):org.apache.commons.io.FilenameUtils@doNormalize:394:i + 1 |==> i - 1
2281:AOR:+(int,int):/(int,int):org.apache.commons.io.FilenameUtils@doNormalize:394:i + 1 |==> i / 1
2282:LVR:POS:0:org.apache.commons.io.FilenameUtils@doNormalize:394:1 |==> 0
2283:LVR:POS:NEG:org.apache.commons.io.FilenameUtils@doNormalize:394:1 |==> -1
2284:AOR:-(int,int):%(int,int):org.apache.commons.io.FilenameUtils@doNormalize:394:i - 1 |==> i % 1
2285:AOR:-(int,int):*(int,int):org.apache.commons.io.FilenameUtils@doNormalize:394:i - 1 |==> i * 1
2286:AOR:-(int,int):+(int,int):org.apache.commons.io.FilenameUtils@doNormalize:394:i - 1 |==> i + 1
2287:AOR:-(int,int):/(int,int):org.apache.commons.io.FilenameUtils@doNormalize:394:i - 1 |==> i / 1
2288:AOR:-(int,int):%(int,int):org.apache.commons.io.FilenameUtils@doNormalize:394:size - i |==> size % i
2289:AOR:-(int,int):*(int,int):org.apache.commons.io.FilenameUtils@doNormalize:394:size - i |==> size * i
2290:AOR:-(int,int):+(int,int):org.apache.commons.io.FilenameUtils@doNormalize:394:size - i |==> size + i
2291:AOR:-(int,int):/(int,int):org.apache.commons.io.FilenameUtils@doNormalize:394:size - i |==> size / i
2292:STD:<CALL>:<NO-OP>:org.apache.commons.io.FilenameUtils@doNormalize:394:System.arraycopy(array, i + 1, array, i - 1, size - i) |==> <NO-OP>
2293:LVR:POS:0:org.apache.commons.io.FilenameUtils@doNormalize:395:2 |==> 0
2294:LVR:POS:NEG:org.apache.commons.io.FilenameUtils@doNormalize:395:2 |==> -2
2295:STD:<ASSIGN>:<NO-OP>:org.apache.commons.io.FilenameUtils@doNormalize:395:size -= 2 |==> <NO-OP>
2296:STD:<INC/DEC>:<NO-OP>:org.apache.commons.io.FilenameUtils@doNormalize:396:i-- |==> <NO-OP>
2297:ROR:==(int,int):<=(int,int):org.apache.commons.io.FilenameUtils@doNormalize:389:array[i] == separator |==> array[i] <= separator
2298:ROR:==(int,int):>=(int,int):org.apache.commons.io.FilenameUtils@doNormalize:389:array[i] == separator |==> array[i] >= separator
2299:ROR:==(int,int):FALSE(int,int):org.apache.commons.io.FilenameUtils@doNormalize:389:array[i] == separator |==> false
2300:LVR:POS:0:org.apache.commons.io.FilenameUtils@doNormalize:389:1 |==> 0
2301:LVR:POS:NEG:org.apache.commons.io.FilenameUtils@doNormalize:389:1 |==> -1
2302:AOR:-(int,int):%(int,int):org.apache.commons.io.FilenameUtils@doNormalize:389:i - 1 |==> i % 1
2303:AOR:-(int,int):*(int,int):org.apache.commons.io.FilenameUtils@doNormalize:389:i - 1 |==> i * 1
2304:AOR:-(int,int):+(int,int):org.apache.commons.io.FilenameUtils@doNormalize:389:i - 1 |==> i + 1
2305:AOR:-(int,int):/(int,int):org.apache.commons.io.FilenameUtils@doNormalize:389:i - 1 |==> i / 1
2306:ROR:==(int,int):<=(int,int):org.apache.commons.io.FilenameUtils@doNormalize:389:array[i - 1] == '.' |==> array[i - 1] <= '.'
2307:ROR:==(int,int):>=(int,int):org.apache.commons.io.FilenameUtils@doNormalize:389:array[i - 1] == '.' |==> array[i - 1] >= '.'
2308:ROR:==(int,int):FALSE(int,int):org.apache.commons.io.FilenameUtils@doNormalize:389:array[i - 1] == '.' |==> false
2309:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.io.FilenameUtils@doNormalize:389:array[i] == separator && array[i - 1] == '.' |==> array[i] == separator == (array[i - 1] == '.')
2310:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.io.FilenameUtils@doNormalize:389:array[i] == separator && array[i - 1] == '.' |==> false
2311:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.io.FilenameUtils@doNormalize:389:array[i] == separator && array[i - 1] == '.' |==> array[i] == separator
2312:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.io.FilenameUtils@doNormalize:389:array[i] == separator && array[i - 1] == '.' |==> array[i - 1] == '.'
2313:LVR:POS:0:org.apache.commons.io.FilenameUtils@doNormalize:390:1 |==> 0
2314:LVR:POS:NEG:org.apache.commons.io.FilenameUtils@doNormalize:390:1 |==> -1
2315:AOR:+(int,int):%(int,int):org.apache.commons.io.FilenameUtils@doNormalize:390:prefix + 1 |==> prefix % 1
2316:AOR:+(int,int):*(int,int):org.apache.commons.io.FilenameUtils@doNormalize:390:prefix + 1 |==> prefix * 1
2317:AOR:+(int,int):-(int,int):org.apache.commons.io.FilenameUtils@doNormalize:390:prefix + 1 |==> prefix - 1
2318:AOR:+(int,int):/(int,int):org.apache.commons.io.FilenameUtils@doNormalize:390:prefix + 1 |==> prefix / 1
2319:ROR:==(int,int):<=(int,int):org.apache.commons.io.FilenameUtils@doNormalize:390:i == prefix + 1 |==> i <= prefix + 1
2320:ROR:==(int,int):>=(int,int):org.apache.commons.io.FilenameUtils@doNormalize:390:i == prefix + 1 |==> i >= prefix + 1
2321:ROR:==(int,int):FALSE(int,int):org.apache.commons.io.FilenameUtils@doNormalize:390:i == prefix + 1 |==> false
2322:LVR:POS:0:org.apache.commons.io.FilenameUtils@doNormalize:390:2 |==> 0
2323:LVR:POS:NEG:org.apache.commons.io.FilenameUtils@doNormalize:390:2 |==> -2
2324:AOR:-(int,int):%(int,int):org.apache.commons.io.FilenameUtils@doNormalize:390:i - 2 |==> i % 2
2325:AOR:-(int,int):*(int,int):org.apache.commons.io.FilenameUtils@doNormalize:390:i - 2 |==> i * 2
2326:AOR:-(int,int):+(int,int):org.apache.commons.io.FilenameUtils@doNormalize:390:i - 2 |==> i + 2
2327:AOR:-(int,int):/(int,int):org.apache.commons.io.FilenameUtils@doNormalize:390:i - 2 |==> i / 2
2328:ROR:==(int,int):<=(int,int):org.apache.commons.io.FilenameUtils@doNormalize:390:array[i - 2] == separator |==> array[i - 2] <= separator
2329:ROR:==(int,int):>=(int,int):org.apache.commons.io.FilenameUtils@doNormalize:390:array[i - 2] == separator |==> array[i - 2] >= separator
2330:ROR:==(int,int):FALSE(int,int):org.apache.commons.io.FilenameUtils@doNormalize:390:array[i - 2] == separator |==> false
2331:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.io.FilenameUtils@doNormalize:390:i == prefix + 1 || array[i - 2] == separator |==> i == prefix + 1 != (array[i - 2] == separator)
2332:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.io.FilenameUtils@doNormalize:390:i == prefix + 1 || array[i - 2] == separator |==> i == prefix + 1
2333:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.io.FilenameUtils@doNormalize:390:i == prefix + 1 || array[i - 2] == separator |==> array[i - 2] == separator
2334:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.io.FilenameUtils@doNormalize:390:i == prefix + 1 || array[i - 2] == separator |==> true
2335:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.io.FilenameUtils@doNormalize:389:array[i] == separator && array[i - 1] == '.' && (i == prefix + 1 || array[i - 2] == separator) |==> (array[i] == separator && array[i - 1] == '.') == (i == prefix + 1 || array[i - 2] == separator)
2336:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.io.FilenameUtils@doNormalize:389:array[i] == separator && array[i - 1] == '.' && (i == prefix + 1 || array[i - 2] == separator) |==> false
2337:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.io.FilenameUtils@doNormalize:389:array[i] == separator && array[i - 1] == '.' && (i == prefix + 1 || array[i - 2] == separator) |==> array[i] == separator && array[i - 1] == '.'
2338:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.io.FilenameUtils@doNormalize:390:array[i] == separator && array[i - 1] == '.' && (i == prefix + 1 || array[i - 2] == separator) |==> (i == prefix + 1 || array[i - 2] == separator)
2339:LVR:POS:0:org.apache.commons.io.FilenameUtils@doNormalize:402:2 |==> 0
2340:LVR:POS:NEG:org.apache.commons.io.FilenameUtils@doNormalize:402:2 |==> -2
2341:AOR:+(int,int):%(int,int):org.apache.commons.io.FilenameUtils@doNormalize:402:prefix + 2 |==> prefix % 2
2342:AOR:+(int,int):*(int,int):org.apache.commons.io.FilenameUtils@doNormalize:402:prefix + 2 |==> prefix * 2
2343:AOR:+(int,int):-(int,int):org.apache.commons.io.FilenameUtils@doNormalize:402:prefix + 2 |==> prefix - 2
2344:AOR:+(int,int):/(int,int):org.apache.commons.io.FilenameUtils@doNormalize:402:prefix + 2 |==> prefix / 2
2345:ROR:<(int,int):!=(int,int):org.apache.commons.io.FilenameUtils@doNormalize:402:i < size |==> i != size
2346:ROR:<(int,int):<=(int,int):org.apache.commons.io.FilenameUtils@doNormalize:402:i < size |==> i <= size
2347:ROR:<(int,int):FALSE(int,int):org.apache.commons.io.FilenameUtils@doNormalize:402:i < size |==> false
2348:LVR:POS:0:org.apache.commons.io.FilenameUtils@doNormalize:405:2 |==> 0
2349:LVR:POS:NEG:org.apache.commons.io.FilenameUtils@doNormalize:405:2 |==> -2
2350:AOR:+(int,int):%(int,int):org.apache.commons.io.FilenameUtils@doNormalize:405:prefix + 2 |==> prefix % 2
2351:AOR:+(int,int):*(int,int):org.apache.commons.io.FilenameUtils@doNormalize:405:prefix + 2 |==> prefix * 2
2352:AOR:+(int,int):-(int,int):org.apache.commons.io.FilenameUtils@doNormalize:405:prefix + 2 |==> prefix - 2
2353:AOR:+(int,int):/(int,int):org.apache.commons.io.FilenameUtils@doNormalize:405:prefix + 2 |==> prefix / 2
2354:ROR:==(int,int):<=(int,int):org.apache.commons.io.FilenameUtils@doNormalize:405:i == prefix + 2 |==> i <= prefix + 2
2355:ROR:==(int,int):>=(int,int):org.apache.commons.io.FilenameUtils@doNormalize:405:i == prefix + 2 |==> i >= prefix + 2
2356:ROR:==(int,int):FALSE(int,int):org.apache.commons.io.FilenameUtils@doNormalize:405:i == prefix + 2 |==> false
2357:LVR:TRUE:FALSE:org.apache.commons.io.FilenameUtils@doNormalize:409:true |==> false
2358:LVR:POS:0:org.apache.commons.io.FilenameUtils@doNormalize:408:1 |==> 0
2359:LVR:POS:NEG:org.apache.commons.io.FilenameUtils@doNormalize:408:1 |==> -1
2360:AOR:-(int,int):%(int,int):org.apache.commons.io.FilenameUtils@doNormalize:408:size - 1 |==> size % 1
2361:AOR:-(int,int):*(int,int):org.apache.commons.io.FilenameUtils@doNormalize:408:size - 1 |==> size * 1
2362:AOR:-(int,int):+(int,int):org.apache.commons.io.FilenameUtils@doNormalize:408:size - 1 |==> size + 1
2363:AOR:-(int,int):/(int,int):org.apache.commons.io.FilenameUtils@doNormalize:408:size - 1 |==> size / 1
2364:ROR:==(int,int):<=(int,int):org.apache.commons.io.FilenameUtils@doNormalize:408:i == size - 1 |==> i <= size - 1
2365:ROR:==(int,int):>=(int,int):org.apache.commons.io.FilenameUtils@doNormalize:408:i == size - 1 |==> i >= size - 1
2366:ROR:==(int,int):FALSE(int,int):org.apache.commons.io.FilenameUtils@doNormalize:408:i == size - 1 |==> false
2367:LVR:POS:0:org.apache.commons.io.FilenameUtils@doNormalize:412:4 |==> 0
2368:LVR:POS:NEG:org.apache.commons.io.FilenameUtils@doNormalize:412:4 |==> -4
2369:AOR:-(int,int):%(int,int):org.apache.commons.io.FilenameUtils@doNormalize:412:i - 4 |==> i % 4
2370:AOR:-(int,int):*(int,int):org.apache.commons.io.FilenameUtils@doNormalize:412:i - 4 |==> i * 4
2371:AOR:-(int,int):+(int,int):org.apache.commons.io.FilenameUtils@doNormalize:412:i - 4 |==> i + 4
2372:AOR:-(int,int):/(int,int):org.apache.commons.io.FilenameUtils@doNormalize:412:i - 4 |==> i / 4
2373:ROR:>=(int,int):==(int,int):org.apache.commons.io.FilenameUtils@doNormalize:412:j >= prefix |==> j == prefix
2374:ROR:>=(int,int):>(int,int):org.apache.commons.io.FilenameUtils@doNormalize:412:j >= prefix |==> j > prefix
2375:ROR:>=(int,int):TRUE(int,int):org.apache.commons.io.FilenameUtils@doNormalize:412:j >= prefix |==> true
2376:LVR:POS:0:org.apache.commons.io.FilenameUtils@doNormalize:415:1 |==> 0
2377:LVR:POS:NEG:org.apache.commons.io.FilenameUtils@doNormalize:415:1 |==> -1
2378:AOR:+(int,int):%(int,int):org.apache.commons.io.FilenameUtils@doNormalize:415:i + 1 |==> i % 1
2379:AOR:+(int,int):*(int,int):org.apache.commons.io.FilenameUtils@doNormalize:415:i + 1 |==> i * 1
2380:AOR:+(int,int):-(int,int):org.apache.commons.io.FilenameUtils@doNormalize:415:i + 1 |==> i - 1
2381:AOR:+(int,int):/(int,int):org.apache.commons.io.FilenameUtils@doNormalize:415:i + 1 |==> i / 1
2382:LVR:POS:0:org.apache.commons.io.FilenameUtils@doNormalize:415:1 |==> 0
2383:LVR:POS:NEG:org.apache.commons.io.FilenameUtils@doNormalize:415:1 |==> -1
2384:AOR:+(int,int):%(int,int):org.apache.commons.io.FilenameUtils@doNormalize:415:j + 1 |==> j % 1
2385:AOR:+(int,int):*(int,int):org.apache.commons.io.FilenameUtils@doNormalize:415:j + 1 |==> j * 1
2386:AOR:+(int,int):-(int,int):org.apache.commons.io.FilenameUtils@doNormalize:415:j + 1 |==> j - 1
2387:AOR:+(int,int):/(int,int):org.apache.commons.io.FilenameUtils@doNormalize:415:j + 1 |==> j / 1
2388:AOR:-(int,int):%(int,int):org.apache.commons.io.FilenameUtils@doNormalize:415:size - i |==> size % i
2389:AOR:-(int,int):*(int,int):org.apache.commons.io.FilenameUtils@doNormalize:415:size - i |==> size * i
2390:AOR:-(int,int):+(int,int):org.apache.commons.io.FilenameUtils@doNormalize:415:size - i |==> size + i
2391:AOR:-(int,int):/(int,int):org.apache.commons.io.FilenameUtils@doNormalize:415:size - i |==> size / i
2392:STD:<CALL>:<NO-OP>:org.apache.commons.io.FilenameUtils@doNormalize:415:System.arraycopy(array, i + 1, array, j + 1, size - i) |==> <NO-OP>
2393:AOR:-(int,int):%(int,int):org.apache.commons.io.FilenameUtils@doNormalize:416:i - j |==> i % j
2394:AOR:-(int,int):*(int,int):org.apache.commons.io.FilenameUtils@doNormalize:416:i - j |==> i * j
2395:AOR:-(int,int):+(int,int):org.apache.commons.io.FilenameUtils@doNormalize:416:i - j |==> i + j
2396:AOR:-(int,int):/(int,int):org.apache.commons.io.FilenameUtils@doNormalize:416:i - j |==> i / j
2397:STD:<ASSIGN>:<NO-OP>:org.apache.commons.io.FilenameUtils@doNormalize:416:size -= i - j |==> <NO-OP>
2398:LVR:POS:0:org.apache.commons.io.FilenameUtils@doNormalize:417:1 |==> 0
2399:LVR:POS:NEG:org.apache.commons.io.FilenameUtils@doNormalize:417:1 |==> -1
2400:AOR:+(int,int):%(int,int):org.apache.commons.io.FilenameUtils@doNormalize:417:j + 1 |==> j % 1
2401:AOR:+(int,int):*(int,int):org.apache.commons.io.FilenameUtils@doNormalize:417:j + 1 |==> j * 1
2402:AOR:+(int,int):-(int,int):org.apache.commons.io.FilenameUtils@doNormalize:417:j + 1 |==> j - 1
2403:AOR:+(int,int):/(int,int):org.apache.commons.io.FilenameUtils@doNormalize:417:j + 1 |==> j / 1
2404:ROR:==(int,int):<=(int,int):org.apache.commons.io.FilenameUtils@doNormalize:413:array[j] == separator |==> array[j] <= separator
2405:ROR:==(int,int):>=(int,int):org.apache.commons.io.FilenameUtils@doNormalize:413:array[j] == separator |==> array[j] >= separator
2406:ROR:==(int,int):FALSE(int,int):org.apache.commons.io.FilenameUtils@doNormalize:413:array[j] == separator |==> false
2407:LVR:POS:0:org.apache.commons.io.FilenameUtils@doNormalize:422:1 |==> 0
2408:LVR:POS:NEG:org.apache.commons.io.FilenameUtils@doNormalize:422:1 |==> -1
2409:AOR:+(int,int):%(int,int):org.apache.commons.io.FilenameUtils@doNormalize:422:i + 1 |==> i % 1
2410:AOR:+(int,int):*(int,int):org.apache.commons.io.FilenameUtils@doNormalize:422:i + 1 |==> i * 1
2411:AOR:+(int,int):-(int,int):org.apache.commons.io.FilenameUtils@doNormalize:422:i + 1 |==> i - 1
2412:AOR:+(int,int):/(int,int):org.apache.commons.io.FilenameUtils@doNormalize:422:i + 1 |==> i / 1
2413:AOR:-(int,int):%(int,int):org.apache.commons.io.FilenameUtils@doNormalize:422:size - i |==> size % i
2414:AOR:-(int,int):*(int,int):org.apache.commons.io.FilenameUtils@doNormalize:422:size - i |==> size * i
2415:AOR:-(int,int):+(int,int):org.apache.commons.io.FilenameUtils@doNormalize:422:size - i |==> size + i
2416:AOR:-(int,int):/(int,int):org.apache.commons.io.FilenameUtils@doNormalize:422:size - i |==> size / i
2417:STD:<CALL>:<NO-OP>:org.apache.commons.io.FilenameUtils@doNormalize:422:System.arraycopy(array, i + 1, array, prefix, size - i) |==> <NO-OP>
2418:LVR:POS:0:org.apache.commons.io.FilenameUtils@doNormalize:423:1 |==> 0
2419:LVR:POS:NEG:org.apache.commons.io.FilenameUtils@doNormalize:423:1 |==> -1
2420:AOR:+(int,int):%(int,int):org.apache.commons.io.FilenameUtils@doNormalize:423:i + 1 |==> i % 1
2421:AOR:+(int,int):*(int,int):org.apache.commons.io.FilenameUtils@doNormalize:423:i + 1 |==> i * 1
2422:AOR:+(int,int):-(int,int):org.apache.commons.io.FilenameUtils@doNormalize:423:i + 1 |==> i - 1
2423:AOR:+(int,int):/(int,int):org.apache.commons.io.FilenameUtils@doNormalize:423:i + 1 |==> i / 1
2424:AOR:-(int,int):%(int,int):org.apache.commons.io.FilenameUtils@doNormalize:423:i + 1 - prefix |==> (i + 1) % prefix
2425:AOR:-(int,int):*(int,int):org.apache.commons.io.FilenameUtils@doNormalize:423:i + 1 - prefix |==> (i + 1) * prefix
2426:AOR:-(int,int):+(int,int):org.apache.commons.io.FilenameUtils@doNormalize:423:i + 1 - prefix |==> i + 1 + prefix
2427:AOR:-(int,int):/(int,int):org.apache.commons.io.FilenameUtils@doNormalize:423:i + 1 - prefix |==> (i + 1) / prefix
2428:STD:<ASSIGN>:<NO-OP>:org.apache.commons.io.FilenameUtils@doNormalize:423:size -= i + 1 - prefix |==> <NO-OP>
2429:LVR:POS:0:org.apache.commons.io.FilenameUtils@doNormalize:424:1 |==> 0
2430:LVR:POS:NEG:org.apache.commons.io.FilenameUtils@doNormalize:424:1 |==> -1
2431:AOR:+(int,int):%(int,int):org.apache.commons.io.FilenameUtils@doNormalize:424:prefix + 1 |==> prefix % 1
2432:AOR:+(int,int):*(int,int):org.apache.commons.io.FilenameUtils@doNormalize:424:prefix + 1 |==> prefix * 1
2433:AOR:+(int,int):-(int,int):org.apache.commons.io.FilenameUtils@doNormalize:424:prefix + 1 |==> prefix - 1
2434:AOR:+(int,int):/(int,int):org.apache.commons.io.FilenameUtils@doNormalize:424:prefix + 1 |==> prefix / 1
2435:ROR:==(int,int):<=(int,int):org.apache.commons.io.FilenameUtils@doNormalize:403:array[i] == separator |==> array[i] <= separator
2436:ROR:==(int,int):>=(int,int):org.apache.commons.io.FilenameUtils@doNormalize:403:array[i] == separator |==> array[i] >= separator
2437:ROR:==(int,int):FALSE(int,int):org.apache.commons.io.FilenameUtils@doNormalize:403:array[i] == separator |==> false
2438:LVR:POS:0:org.apache.commons.io.FilenameUtils@doNormalize:403:1 |==> 0
2439:LVR:POS:NEG:org.apache.commons.io.FilenameUtils@doNormalize:403:1 |==> -1
2440:AOR:-(int,int):%(int,int):org.apache.commons.io.FilenameUtils@doNormalize:403:i - 1 |==> i % 1
2441:AOR:-(int,int):*(int,int):org.apache.commons.io.FilenameUtils@doNormalize:403:i - 1 |==> i * 1
2442:AOR:-(int,int):+(int,int):org.apache.commons.io.FilenameUtils@doNormalize:403:i - 1 |==> i + 1
2443:AOR:-(int,int):/(int,int):org.apache.commons.io.FilenameUtils@doNormalize:403:i - 1 |==> i / 1
2444:ROR:==(int,int):<=(int,int):org.apache.commons.io.FilenameUtils@doNormalize:403:array[i - 1] == '.' |==> array[i - 1] <= '.'
2445:ROR:==(int,int):>=(int,int):org.apache.commons.io.FilenameUtils@doNormalize:403:array[i - 1] == '.' |==> array[i - 1] >= '.'
2446:ROR:==(int,int):FALSE(int,int):org.apache.commons.io.FilenameUtils@doNormalize:403:array[i - 1] == '.' |==> false
2447:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.io.FilenameUtils@doNormalize:403:array[i] == separator && array[i - 1] == '.' |==> array[i] == separator == (array[i - 1] == '.')
2448:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.io.FilenameUtils@doNormalize:403:array[i] == separator && array[i - 1] == '.' |==> false
2449:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.io.FilenameUtils@doNormalize:403:array[i] == separator && array[i - 1] == '.' |==> array[i] == separator
2450:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.io.FilenameUtils@doNormalize:403:array[i] == separator && array[i - 1] == '.' |==> array[i - 1] == '.'
2451:LVR:POS:0:org.apache.commons.io.FilenameUtils@doNormalize:403:2 |==> 0
2452:LVR:POS:NEG:org.apache.commons.io.FilenameUtils@doNormalize:403:2 |==> -2
2453:AOR:-(int,int):%(int,int):org.apache.commons.io.FilenameUtils@doNormalize:403:i - 2 |==> i % 2
2454:AOR:-(int,int):*(int,int):org.apache.commons.io.FilenameUtils@doNormalize:403:i - 2 |==> i * 2
2455:AOR:-(int,int):+(int,int):org.apache.commons.io.FilenameUtils@doNormalize:403:i - 2 |==> i + 2
2456:AOR:-(int,int):/(int,int):org.apache.commons.io.FilenameUtils@doNormalize:403:i - 2 |==> i / 2
2457:ROR:==(int,int):<=(int,int):org.apache.commons.io.FilenameUtils@doNormalize:403:array[i - 2] == '.' |==> array[i - 2] <= '.'
2458:ROR:==(int,int):>=(int,int):org.apache.commons.io.FilenameUtils@doNormalize:403:array[i - 2] == '.' |==> array[i - 2] >= '.'
2459:ROR:==(int,int):FALSE(int,int):org.apache.commons.io.FilenameUtils@doNormalize:403:array[i - 2] == '.' |==> false
2460:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.io.FilenameUtils@doNormalize:403:array[i] == separator && array[i - 1] == '.' && array[i - 2] == '.' |==> (array[i] == separator && array[i - 1] == '.') == (array[i - 2] == '.')
2461:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.io.FilenameUtils@doNormalize:403:array[i] == separator && array[i - 1] == '.' && array[i - 2] == '.' |==> false
2462:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.io.FilenameUtils@doNormalize:403:array[i] == separator && array[i - 1] == '.' && array[i - 2] == '.' |==> array[i] == separator && array[i - 1] == '.'
2463:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.io.FilenameUtils@doNormalize:403:array[i] == separator && array[i - 1] == '.' && array[i - 2] == '.' |==> array[i - 2] == '.'
2464:LVR:POS:0:org.apache.commons.io.FilenameUtils@doNormalize:404:2 |==> 0
2465:LVR:POS:NEG:org.apache.commons.io.FilenameUtils@doNormalize:404:2 |==> -2
2466:AOR:+(int,int):%(int,int):org.apache.commons.io.FilenameUtils@doNormalize:404:prefix + 2 |==> prefix % 2
2467:AOR:+(int,int):*(int,int):org.apache.commons.io.FilenameUtils@doNormalize:404:prefix + 2 |==> prefix * 2
2468:AOR:+(int,int):-(int,int):org.apache.commons.io.FilenameUtils@doNormalize:404:prefix + 2 |==> prefix - 2
2469:AOR:+(int,int):/(int,int):org.apache.commons.io.FilenameUtils@doNormalize:404:prefix + 2 |==> prefix / 2
2470:ROR:==(int,int):<=(int,int):org.apache.commons.io.FilenameUtils@doNormalize:404:i == prefix + 2 |==> i <= prefix + 2
2471:ROR:==(int,int):>=(int,int):org.apache.commons.io.FilenameUtils@doNormalize:404:i == prefix + 2 |==> i >= prefix + 2
2472:ROR:==(int,int):FALSE(int,int):org.apache.commons.io.FilenameUtils@doNormalize:404:i == prefix + 2 |==> false
2473:LVR:POS:0:org.apache.commons.io.FilenameUtils@doNormalize:404:3 |==> 0
2474:LVR:POS:NEG:org.apache.commons.io.FilenameUtils@doNormalize:404:3 |==> -3
2475:AOR:-(int,int):%(int,int):org.apache.commons.io.FilenameUtils@doNormalize:404:i - 3 |==> i % 3
2476:AOR:-(int,int):*(int,int):org.apache.commons.io.FilenameUtils@doNormalize:404:i - 3 |==> i * 3
2477:AOR:-(int,int):+(int,int):org.apache.commons.io.FilenameUtils@doNormalize:404:i - 3 |==> i + 3
2478:AOR:-(int,int):/(int,int):org.apache.commons.io.FilenameUtils@doNormalize:404:i - 3 |==> i / 3
2479:ROR:==(int,int):<=(int,int):org.apache.commons.io.FilenameUtils@doNormalize:404:array[i - 3] == separator |==> array[i - 3] <= separator
2480:ROR:==(int,int):>=(int,int):org.apache.commons.io.FilenameUtils@doNormalize:404:array[i - 3] == separator |==> array[i - 3] >= separator
2481:ROR:==(int,int):FALSE(int,int):org.apache.commons.io.FilenameUtils@doNormalize:404:array[i - 3] == separator |==> false
2482:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.io.FilenameUtils@doNormalize:404:i == prefix + 2 || array[i - 3] == separator |==> i == prefix + 2 != (array[i - 3] == separator)
2483:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.io.FilenameUtils@doNormalize:404:i == prefix + 2 || array[i - 3] == separator |==> i == prefix + 2
2484:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.io.FilenameUtils@doNormalize:404:i == prefix + 2 || array[i - 3] == separator |==> array[i - 3] == separator
2485:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.io.FilenameUtils@doNormalize:404:i == prefix + 2 || array[i - 3] == separator |==> true
2486:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.io.FilenameUtils@doNormalize:403:array[i] == separator && array[i - 1] == '.' && array[i - 2] == '.' && (i == prefix + 2 || array[i - 3] == separator) |==> (array[i] == separator && array[i - 1] == '.' && array[i - 2] == '.') == (i == prefix + 2 || array[i - 3] == separator)
2487:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.io.FilenameUtils@doNormalize:403:array[i] == separator && array[i - 1] == '.' && array[i - 2] == '.' && (i == prefix + 2 || array[i - 3] == separator) |==> false
2488:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.io.FilenameUtils@doNormalize:403:array[i] == separator && array[i - 1] == '.' && array[i - 2] == '.' && (i == prefix + 2 || array[i - 3] == separator) |==> array[i] == separator && array[i - 1] == '.' && array[i - 2] == '.'
2489:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.io.FilenameUtils@doNormalize:404:array[i] == separator && array[i - 1] == '.' && array[i - 2] == '.' && (i == prefix + 2 || array[i - 3] == separator) |==> (i == prefix + 2 || array[i - 3] == separator)
2490:LVR:0:POS:org.apache.commons.io.FilenameUtils@doNormalize:428:0 |==> 1
2491:LVR:0:NEG:org.apache.commons.io.FilenameUtils@doNormalize:428:0 |==> -1
2492:ROR:<=(int,int):<(int,int):org.apache.commons.io.FilenameUtils@doNormalize:428:size <= 0 |==> size < 0
2493:ROR:<=(int,int):==(int,int):org.apache.commons.io.FilenameUtils@doNormalize:428:size <= 0 |==> size == 0
2494:ROR:<=(int,int):TRUE(int,int):org.apache.commons.io.FilenameUtils@doNormalize:428:size <= 0 |==> true
2495:LVR:0:POS:org.apache.commons.io.FilenameUtils@doNormalize:432:0 |==> 1
2496:LVR:0:NEG:org.apache.commons.io.FilenameUtils@doNormalize:432:0 |==> -1
2497:ROR:<=(int,int):<(int,int):org.apache.commons.io.FilenameUtils@doNormalize:431:size <= prefix |==> size < prefix
2498:ROR:<=(int,int):==(int,int):org.apache.commons.io.FilenameUtils@doNormalize:431:size <= prefix |==> size == prefix
2499:ROR:<=(int,int):TRUE(int,int):org.apache.commons.io.FilenameUtils@doNormalize:431:size <= prefix |==> true
2500:LVR:0:POS:org.apache.commons.io.FilenameUtils@doNormalize:435:0 |==> 1
2501:LVR:0:NEG:org.apache.commons.io.FilenameUtils@doNormalize:435:0 |==> -1
2502:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.io.FilenameUtils@doNormalize:434:lastIsDirectory && keepSeparator |==> lastIsDirectory == keepSeparator
2503:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.io.FilenameUtils@doNormalize:434:lastIsDirectory && keepSeparator |==> false
2504:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.io.FilenameUtils@doNormalize:434:lastIsDirectory && keepSeparator |==> lastIsDirectory
2505:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.io.FilenameUtils@doNormalize:434:lastIsDirectory && keepSeparator |==> keepSeparator
2506:LVR:0:POS:org.apache.commons.io.FilenameUtils@doNormalize:437:0 |==> 1
2507:LVR:0:NEG:org.apache.commons.io.FilenameUtils@doNormalize:437:0 |==> -1
2508:LVR:POS:0:org.apache.commons.io.FilenameUtils@doNormalize:437:1 |==> 0
2509:LVR:POS:NEG:org.apache.commons.io.FilenameUtils@doNormalize:437:1 |==> -1
2510:AOR:-(int,int):%(int,int):org.apache.commons.io.FilenameUtils@doNormalize:437:size - 1 |==> size % 1
2511:AOR:-(int,int):*(int,int):org.apache.commons.io.FilenameUtils@doNormalize:437:size - 1 |==> size * 1
2512:AOR:-(int,int):+(int,int):org.apache.commons.io.FilenameUtils@doNormalize:437:size - 1 |==> size + 1
2513:AOR:-(int,int):/(int,int):org.apache.commons.io.FilenameUtils@doNormalize:437:size - 1 |==> size / 1
2514:LVR:0:POS:org.apache.commons.io.FilenameUtils@concat:483:0 |==> 1
2515:LVR:0:NEG:org.apache.commons.io.FilenameUtils@concat:483:0 |==> -1
2516:ROR:<(int,int):!=(int,int):org.apache.commons.io.FilenameUtils@concat:483:prefix < 0 |==> prefix != 0
2517:ROR:<(int,int):<=(int,int):org.apache.commons.io.FilenameUtils@concat:483:prefix < 0 |==> prefix <= 0
2518:ROR:<(int,int):FALSE(int,int):org.apache.commons.io.FilenameUtils@concat:483:prefix < 0 |==> false
2519:LVR:0:POS:org.apache.commons.io.FilenameUtils@concat:486:0 |==> 1
2520:LVR:0:NEG:org.apache.commons.io.FilenameUtils@concat:486:0 |==> -1
2521:ROR:>(int,int):!=(int,int):org.apache.commons.io.FilenameUtils@concat:486:prefix > 0 |==> prefix != 0
2522:ROR:>(int,int):>=(int,int):org.apache.commons.io.FilenameUtils@concat:486:prefix > 0 |==> prefix >= 0
2523:ROR:>(int,int):FALSE(int,int):org.apache.commons.io.FilenameUtils@concat:486:prefix > 0 |==> false
2524:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.io.FilenameUtils@concat:489:basePath == null |==> false
2525:LVR:0:POS:org.apache.commons.io.FilenameUtils@concat:493:0 |==> 1
2526:LVR:0:NEG:org.apache.commons.io.FilenameUtils@concat:493:0 |==> -1
2527:ROR:==(int,int):<=(int,int):org.apache.commons.io.FilenameUtils@concat:493:len == 0 |==> len <= 0
2528:ROR:==(int,int):>=(int,int):org.apache.commons.io.FilenameUtils@concat:493:len == 0 |==> len >= 0
2529:ROR:==(int,int):FALSE(int,int):org.apache.commons.io.FilenameUtils@concat:493:len == 0 |==> false
2530:LVR:POS:0:org.apache.commons.io.FilenameUtils@concat:496:1 |==> 0
2531:LVR:POS:NEG:org.apache.commons.io.FilenameUtils@concat:496:1 |==> -1
2532:AOR:-(int,int):%(int,int):org.apache.commons.io.FilenameUtils@concat:496:len - 1 |==> len % 1
2533:AOR:-(int,int):*(int,int):org.apache.commons.io.FilenameUtils@concat:496:len - 1 |==> len * 1
2534:AOR:-(int,int):+(int,int):org.apache.commons.io.FilenameUtils@concat:496:len - 1 |==> len + 1
2535:AOR:-(int,int):/(int,int):org.apache.commons.io.FilenameUtils@concat:496:len - 1 |==> len / 1
2536:COR:isSeparator(ch):TRUE:org.apache.commons.io.FilenameUtils@concat:497:isSeparator(ch) |==> false
2537:COR:isSeparator(ch):FALSE:org.apache.commons.io.FilenameUtils@concat:497:isSeparator(ch) |==> true
2538:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.io.FilenameUtils@directoryContains:531:canonicalParent == null |==> false
2539:LVR:FALSE:TRUE:org.apache.commons.io.FilenameUtils@directoryContains:536:false |==> true
2540:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.io.FilenameUtils@directoryContains:535:canonicalChild == null |==> false
2541:LVR:FALSE:TRUE:org.apache.commons.io.FilenameUtils@directoryContains:540:false |==> true
2542:COR:IOCase.SYSTEM.checkEquals(canonicalParent, canonicalChild):TRUE:org.apache.commons.io.FilenameUtils@directoryContains:539:IOCase.SYSTEM.checkEquals(canonicalParent, canonicalChild) |==> false
2543:COR:IOCase.SYSTEM.checkEquals(canonicalParent, canonicalChild):FALSE:org.apache.commons.io.FilenameUtils@directoryContains:539:IOCase.SYSTEM.checkEquals(canonicalParent, canonicalChild) |==> true
2544:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.io.FilenameUtils@separatorsToUnix:554:path == null |==> false
2545:LVR:NEG:0:org.apache.commons.io.FilenameUtils@separatorsToUnix:554:-1 |==> 0
2546:LVR:NEG:POS:org.apache.commons.io.FilenameUtils@separatorsToUnix:554:-1 |==> 1
2547:ROR:==(int,int):<=(int,int):org.apache.commons.io.FilenameUtils@separatorsToUnix:554:path.indexOf(WINDOWS_SEPARATOR) == -1 |==> path.indexOf(WINDOWS_SEPARATOR) <= -1
2548:ROR:==(int,int):>=(int,int):org.apache.commons.io.FilenameUtils@separatorsToUnix:554:path.indexOf(WINDOWS_SEPARATOR) == -1 |==> path.indexOf(WINDOWS_SEPARATOR) >= -1
2549:ROR:==(int,int):FALSE(int,int):org.apache.commons.io.FilenameUtils@separatorsToUnix:554:path.indexOf(WINDOWS_SEPARATOR) == -1 |==> false
2550:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.io.FilenameUtils@separatorsToUnix:554:path == null || path.indexOf(WINDOWS_SEPARATOR) == -1 |==> path == null != (path.indexOf(WINDOWS_SEPARATOR) == -1)
2551:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.io.FilenameUtils@separatorsToUnix:554:path == null || path.indexOf(WINDOWS_SEPARATOR) == -1 |==> path == null
2552:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.io.FilenameUtils@separatorsToUnix:554:path == null || path.indexOf(WINDOWS_SEPARATOR) == -1 |==> path.indexOf(WINDOWS_SEPARATOR) == -1
2553:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.io.FilenameUtils@separatorsToUnix:554:path == null || path.indexOf(WINDOWS_SEPARATOR) == -1 |==> true
2554:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.io.FilenameUtils@separatorsToWindows:567:path == null |==> false
2555:LVR:NEG:0:org.apache.commons.io.FilenameUtils@separatorsToWindows:567:-1 |==> 0
2556:LVR:NEG:POS:org.apache.commons.io.FilenameUtils@separatorsToWindows:567:-1 |==> 1
2557:ROR:==(int,int):<=(int,int):org.apache.commons.io.FilenameUtils@separatorsToWindows:567:path.indexOf(UNIX_SEPARATOR) == -1 |==> path.indexOf(UNIX_SEPARATOR) <= -1
2558:ROR:==(int,int):>=(int,int):org.apache.commons.io.FilenameUtils@separatorsToWindows:567:path.indexOf(UNIX_SEPARATOR) == -1 |==> path.indexOf(UNIX_SEPARATOR) >= -1
2559:ROR:==(int,int):FALSE(int,int):org.apache.commons.io.FilenameUtils@separatorsToWindows:567:path.indexOf(UNIX_SEPARATOR) == -1 |==> false
2560:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.io.FilenameUtils@separatorsToWindows:567:path == null || path.indexOf(UNIX_SEPARATOR) == -1 |==> path == null != (path.indexOf(UNIX_SEPARATOR) == -1)
2561:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.io.FilenameUtils@separatorsToWindows:567:path == null || path.indexOf(UNIX_SEPARATOR) == -1 |==> path == null
2562:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.io.FilenameUtils@separatorsToWindows:567:path == null || path.indexOf(UNIX_SEPARATOR) == -1 |==> path.indexOf(UNIX_SEPARATOR) == -1
2563:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.io.FilenameUtils@separatorsToWindows:567:path == null || path.indexOf(UNIX_SEPARATOR) == -1 |==> true
2564:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.io.FilenameUtils@separatorsToSystem:580:path == null |==> false
2565:COR:isSystemWindows():TRUE:org.apache.commons.io.FilenameUtils@separatorsToSystem:583:isSystemWindows() |==> false
2566:COR:isSystemWindows():FALSE:org.apache.commons.io.FilenameUtils@separatorsToSystem:583:isSystemWindows() |==> true
2567:LVR:NEG:0:org.apache.commons.io.FilenameUtils@getPrefixLength:624:-1 |==> 0
2568:LVR:NEG:POS:org.apache.commons.io.FilenameUtils@getPrefixLength:624:-1 |==> 1
2569:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.io.FilenameUtils@getPrefixLength:623:filename == null |==> false
2570:LVR:0:POS:org.apache.commons.io.FilenameUtils@getPrefixLength:628:0 |==> 1
2571:LVR:0:NEG:org.apache.commons.io.FilenameUtils@getPrefixLength:628:0 |==> -1
2572:LVR:0:POS:org.apache.commons.io.FilenameUtils@getPrefixLength:627:0 |==> 1
2573:LVR:0:NEG:org.apache.commons.io.FilenameUtils@getPrefixLength:627:0 |==> -1
2574:ROR:==(int,int):<=(int,int):org.apache.commons.io.FilenameUtils@getPrefixLength:627:len == 0 |==> len <= 0
2575:ROR:==(int,int):>=(int,int):org.apache.commons.io.FilenameUtils@getPrefixLength:627:len == 0 |==> len >= 0
2576:ROR:==(int,int):FALSE(int,int):org.apache.commons.io.FilenameUtils@getPrefixLength:627:len == 0 |==> false
2577:LVR:0:POS:org.apache.commons.io.FilenameUtils@getPrefixLength:630:0 |==> 1
2578:LVR:0:NEG:org.apache.commons.io.FilenameUtils@getPrefixLength:630:0 |==> -1
2579:LVR:NEG:0:org.apache.commons.io.FilenameUtils@getPrefixLength:632:-1 |==> 0
2580:LVR:NEG:POS:org.apache.commons.io.FilenameUtils@getPrefixLength:632:-1 |==> 1
2581:ROR:==(int,int):<=(int,int):org.apache.commons.io.FilenameUtils@getPrefixLength:631:ch0 == ':' |==> ch0 <= ':'
2582:ROR:==(int,int):>=(int,int):org.apache.commons.io.FilenameUtils@getPrefixLength:631:ch0 == ':' |==> ch0 >= ':'
2583:ROR:==(int,int):FALSE(int,int):org.apache.commons.io.FilenameUtils@getPrefixLength:631:ch0 == ':' |==> false
2584:LVR:POS:0:org.apache.commons.io.FilenameUtils@getPrefixLength:636:2 |==> 0
2585:LVR:POS:NEG:org.apache.commons.io.FilenameUtils@getPrefixLength:636:2 |==> -2
2586:ROR:==(int,int):<=(int,int):org.apache.commons.io.FilenameUtils@getPrefixLength:635:ch0 == '~' |==> ch0 <= '~'
2587:ROR:==(int,int):>=(int,int):org.apache.commons.io.FilenameUtils@getPrefixLength:635:ch0 == '~' |==> ch0 >= '~'
2588:ROR:==(int,int):FALSE(int,int):org.apache.commons.io.FilenameUtils@getPrefixLength:635:ch0 == '~' |==> false
2589:LVR:POS:0:org.apache.commons.io.FilenameUtils@getPrefixLength:638:1 |==> 0
2590:LVR:POS:NEG:org.apache.commons.io.FilenameUtils@getPrefixLength:638:1 |==> -1
2591:LVR:0:POS:org.apache.commons.io.FilenameUtils@getPrefixLength:638:0 |==> 1
2592:LVR:0:NEG:org.apache.commons.io.FilenameUtils@getPrefixLength:638:0 |==> -1
2593:LVR:POS:0:org.apache.commons.io.FilenameUtils@getPrefixLength:641:1 |==> 0
2594:LVR:POS:NEG:org.apache.commons.io.FilenameUtils@getPrefixLength:641:1 |==> -1
2595:LVR:POS:0:org.apache.commons.io.FilenameUtils@getPrefixLength:642:1 |==> 0
2596:LVR:POS:NEG:org.apache.commons.io.FilenameUtils@getPrefixLength:642:1 |==> -1
2597:LVR:POS:0:org.apache.commons.io.FilenameUtils@getPrefixLength:644:1 |==> 0
2598:LVR:POS:NEG:org.apache.commons.io.FilenameUtils@getPrefixLength:644:1 |==> -1
2599:AOR:+(int,int):%(int,int):org.apache.commons.io.FilenameUtils@getPrefixLength:644:len + 1 |==> len % 1
2600:AOR:+(int,int):*(int,int):org.apache.commons.io.FilenameUtils@getPrefixLength:644:len + 1 |==> len * 1
2601:AOR:+(int,int):-(int,int):org.apache.commons.io.FilenameUtils@getPrefixLength:644:len + 1 |==> len - 1
2602:AOR:+(int,int):/(int,int):org.apache.commons.io.FilenameUtils@getPrefixLength:644:len + 1 |==> len / 1
2603:LVR:NEG:0:org.apache.commons.io.FilenameUtils@getPrefixLength:643:-1 |==> 0
2604:LVR:NEG:POS:org.apache.commons.io.FilenameUtils@getPrefixLength:643:-1 |==> 1
2605:ROR:==(int,int):<=(int,int):org.apache.commons.io.FilenameUtils@getPrefixLength:643:posUnix == -1 |==> posUnix <= -1
2606:ROR:==(int,int):>=(int,int):org.apache.commons.io.FilenameUtils@getPrefixLength:643:posUnix == -1 |==> posUnix >= -1
2607:ROR:==(int,int):FALSE(int,int):org.apache.commons.io.FilenameUtils@getPrefixLength:643:posUnix == -1 |==> false
2608:LVR:NEG:0:org.apache.commons.io.FilenameUtils@getPrefixLength:643:-1 |==> 0
2609:LVR:NEG:POS:org.apache.commons.io.FilenameUtils@getPrefixLength:643:-1 |==> 1
2610:ROR:==(int,int):<=(int,int):org.apache.commons.io.FilenameUtils@getPrefixLength:643:posWin == -1 |==> posWin <= -1
2611:ROR:==(int,int):>=(int,int):org.apache.commons.io.FilenameUtils@getPrefixLength:643:posWin == -1 |==> posWin >= -1
2612:ROR:==(int,int):FALSE(int,int):org.apache.commons.io.FilenameUtils@getPrefixLength:643:posWin == -1 |==> false
2613:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.io.FilenameUtils@getPrefixLength:643:posUnix == -1 && posWin == -1 |==> posUnix == -1 == (posWin == -1)
2614:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.io.FilenameUtils@getPrefixLength:643:posUnix == -1 && posWin == -1 |==> false
2615:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.io.FilenameUtils@getPrefixLength:643:posUnix == -1 && posWin == -1 |==> posUnix == -1
2616:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.io.FilenameUtils@getPrefixLength:643:posUnix == -1 && posWin == -1 |==> posWin == -1
2617:LVR:NEG:0:org.apache.commons.io.FilenameUtils@getPrefixLength:646:-1 |==> 0
2618:LVR:NEG:POS:org.apache.commons.io.FilenameUtils@getPrefixLength:646:-1 |==> 1
2619:ROR:==(int,int):<=(int,int):org.apache.commons.io.FilenameUtils@getPrefixLength:646:posUnix == -1 |==> posUnix <= -1
2620:ROR:==(int,int):>=(int,int):org.apache.commons.io.FilenameUtils@getPrefixLength:646:posUnix == -1 |==> posUnix >= -1
2621:ROR:==(int,int):FALSE(int,int):org.apache.commons.io.FilenameUtils@getPrefixLength:646:posUnix == -1 |==> false
2622:LVR:NEG:0:org.apache.commons.io.FilenameUtils@getPrefixLength:647:-1 |==> 0
2623:LVR:NEG:POS:org.apache.commons.io.FilenameUtils@getPrefixLength:647:-1 |==> 1
2624:ROR:==(int,int):<=(int,int):org.apache.commons.io.FilenameUtils@getPrefixLength:647:posWin == -1 |==> posWin <= -1
2625:ROR:==(int,int):>=(int,int):org.apache.commons.io.FilenameUtils@getPrefixLength:647:posWin == -1 |==> posWin >= -1
2626:ROR:==(int,int):FALSE(int,int):org.apache.commons.io.FilenameUtils@getPrefixLength:647:posWin == -1 |==> false
2627:LVR:POS:0:org.apache.commons.io.FilenameUtils@getPrefixLength:648:1 |==> 0
2628:LVR:POS:NEG:org.apache.commons.io.FilenameUtils@getPrefixLength:648:1 |==> -1
2629:AOR:+(int,int):%(int,int):org.apache.commons.io.FilenameUtils@getPrefixLength:648:Math.min(posUnix, posWin) + 1 |==> Math.min(posUnix, posWin) % 1
2630:AOR:+(int,int):*(int,int):org.apache.commons.io.FilenameUtils@getPrefixLength:648:Math.min(posUnix, posWin) + 1 |==> Math.min(posUnix, posWin) * 1
2631:AOR:+(int,int):-(int,int):org.apache.commons.io.FilenameUtils@getPrefixLength:648:Math.min(posUnix, posWin) + 1 |==> Math.min(posUnix, posWin) - 1
2632:AOR:+(int,int):/(int,int):org.apache.commons.io.FilenameUtils@getPrefixLength:648:Math.min(posUnix, posWin) + 1 |==> Math.min(posUnix, posWin) / 1
2633:ROR:==(int,int):<=(int,int):org.apache.commons.io.FilenameUtils@getPrefixLength:640:ch0 == '~' |==> ch0 <= '~'
2634:ROR:==(int,int):>=(int,int):org.apache.commons.io.FilenameUtils@getPrefixLength:640:ch0 == '~' |==> ch0 >= '~'
2635:ROR:==(int,int):FALSE(int,int):org.apache.commons.io.FilenameUtils@getPrefixLength:640:ch0 == '~' |==> false
2636:LVR:POS:0:org.apache.commons.io.FilenameUtils@getPrefixLength:650:1 |==> 0
2637:LVR:POS:NEG:org.apache.commons.io.FilenameUtils@getPrefixLength:650:1 |==> -1
2638:LVR:POS:0:org.apache.commons.io.FilenameUtils@getPrefixLength:655:2 |==> 0
2639:LVR:POS:NEG:org.apache.commons.io.FilenameUtils@getPrefixLength:655:2 |==> -2
2640:LVR:POS:0:org.apache.commons.io.FilenameUtils@getPrefixLength:654:2 |==> 0
2641:LVR:POS:NEG:org.apache.commons.io.FilenameUtils@getPrefixLength:654:2 |==> -2
2642:ROR:==(int,int):<=(int,int):org.apache.commons.io.FilenameUtils@getPrefixLength:654:len == 2 |==> len <= 2
2643:ROR:==(int,int):>=(int,int):org.apache.commons.io.FilenameUtils@getPrefixLength:654:len == 2 |==> len >= 2
2644:ROR:==(int,int):FALSE(int,int):org.apache.commons.io.FilenameUtils@getPrefixLength:654:len == 2 |==> false
2645:LVR:POS:0:org.apache.commons.io.FilenameUtils@getPrefixLength:654:2 |==> 0
2646:LVR:POS:NEG:org.apache.commons.io.FilenameUtils@getPrefixLength:654:2 |==> -2
2647:LVR:FALSE:TRUE:org.apache.commons.io.FilenameUtils@getPrefixLength:654:false |==> true
2648:ROR:==(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.io.FilenameUtils@getPrefixLength:654:isSeparator(filename.charAt(2)) == false |==> false
2649:ROR:==(boolean,boolean):LHS(boolean,boolean):org.apache.commons.io.FilenameUtils@getPrefixLength:654:isSeparator(filename.charAt(2)) == false |==> isSeparator(filename.charAt(2))
2650:ROR:==(boolean,boolean):RHS(boolean,boolean):org.apache.commons.io.FilenameUtils@getPrefixLength:654:isSeparator(filename.charAt(2)) == false |==> false
2651:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.io.FilenameUtils@getPrefixLength:654:len == 2 || isSeparator(filename.charAt(2)) == false |==> len == 2 != (isSeparator(filename.charAt(2)) == false)
2652:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.io.FilenameUtils@getPrefixLength:654:len == 2 || isSeparator(filename.charAt(2)) == false |==> len == 2
2653:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.io.FilenameUtils@getPrefixLength:654:len == 2 || isSeparator(filename.charAt(2)) == false |==> isSeparator(filename.charAt(2)) == false
2654:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.io.FilenameUtils@getPrefixLength:654:len == 2 || isSeparator(filename.charAt(2)) == false |==> true
2655:LVR:POS:0:org.apache.commons.io.FilenameUtils@getPrefixLength:657:3 |==> 0
2656:LVR:POS:NEG:org.apache.commons.io.FilenameUtils@getPrefixLength:657:3 |==> -3
2657:ROR:>=(int,int):==(int,int):org.apache.commons.io.FilenameUtils@getPrefixLength:653:ch0 >= 'A' |==> ch0 == 'A'
2658:ROR:>=(int,int):>(int,int):org.apache.commons.io.FilenameUtils@getPrefixLength:653:ch0 >= 'A' |==> ch0 > 'A'
2659:ROR:>=(int,int):TRUE(int,int):org.apache.commons.io.FilenameUtils@getPrefixLength:653:ch0 >= 'A' |==> true
2660:ROR:<=(int,int):<(int,int):org.apache.commons.io.FilenameUtils@getPrefixLength:653:ch0 <= 'Z' |==> ch0 < 'Z'
2661:ROR:<=(int,int):==(int,int):org.apache.commons.io.FilenameUtils@getPrefixLength:653:ch0 <= 'Z' |==> ch0 == 'Z'
2662:ROR:<=(int,int):TRUE(int,int):org.apache.commons.io.FilenameUtils@getPrefixLength:653:ch0 <= 'Z' |==> true
2663:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.io.FilenameUtils@getPrefixLength:653:ch0 >= 'A' && ch0 <= 'Z' |==> ch0 >= 'A' == ch0 <= 'Z'
2664:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.io.FilenameUtils@getPrefixLength:653:ch0 >= 'A' && ch0 <= 'Z' |==> false
2665:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.io.FilenameUtils@getPrefixLength:653:ch0 >= 'A' && ch0 <= 'Z' |==> ch0 >= 'A'
2666:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.io.FilenameUtils@getPrefixLength:653:ch0 >= 'A' && ch0 <= 'Z' |==> ch0 <= 'Z'
2667:LVR:NEG:0:org.apache.commons.io.FilenameUtils@getPrefixLength:659:-1 |==> 0
2668:LVR:NEG:POS:org.apache.commons.io.FilenameUtils@getPrefixLength:659:-1 |==> 1
2669:LVR:POS:0:org.apache.commons.io.FilenameUtils@getPrefixLength:662:2 |==> 0
2670:LVR:POS:NEG:org.apache.commons.io.FilenameUtils@getPrefixLength:662:2 |==> -2
2671:LVR:POS:0:org.apache.commons.io.FilenameUtils@getPrefixLength:663:2 |==> 0
2672:LVR:POS:NEG:org.apache.commons.io.FilenameUtils@getPrefixLength:663:2 |==> -2
2673:LVR:NEG:0:org.apache.commons.io.FilenameUtils@getPrefixLength:665:-1 |==> 0
2674:LVR:NEG:POS:org.apache.commons.io.FilenameUtils@getPrefixLength:665:-1 |==> 1
2675:LVR:NEG:0:org.apache.commons.io.FilenameUtils@getPrefixLength:664:-1 |==> 0
2676:LVR:NEG:POS:org.apache.commons.io.FilenameUtils@getPrefixLength:664:-1 |==> 1
2677:ROR:==(int,int):<=(int,int):org.apache.commons.io.FilenameUtils@getPrefixLength:664:posUnix == -1 |==> posUnix <= -1
2678:ROR:==(int,int):>=(int,int):org.apache.commons.io.FilenameUtils@getPrefixLength:664:posUnix == -1 |==> posUnix >= -1
2679:ROR:==(int,int):FALSE(int,int):org.apache.commons.io.FilenameUtils@getPrefixLength:664:posUnix == -1 |==> false
2680:LVR:NEG:0:org.apache.commons.io.FilenameUtils@getPrefixLength:664:-1 |==> 0
2681:LVR:NEG:POS:org.apache.commons.io.FilenameUtils@getPrefixLength:664:-1 |==> 1
2682:ROR:==(int,int):<=(int,int):org.apache.commons.io.FilenameUtils@getPrefixLength:664:posWin == -1 |==> posWin <= -1
2683:ROR:==(int,int):>=(int,int):org.apache.commons.io.FilenameUtils@getPrefixLength:664:posWin == -1 |==> posWin >= -1
2684:ROR:==(int,int):FALSE(int,int):org.apache.commons.io.FilenameUtils@getPrefixLength:664:posWin == -1 |==> false
2685:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.io.FilenameUtils@getPrefixLength:664:posUnix == -1 && posWin == -1 |==> posUnix == -1 == (posWin == -1)
2686:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.io.FilenameUtils@getPrefixLength:664:posUnix == -1 && posWin == -1 |==> false
2687:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.io.FilenameUtils@getPrefixLength:664:posUnix == -1 && posWin == -1 |==> posUnix == -1
2688:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.io.FilenameUtils@getPrefixLength:664:posUnix == -1 && posWin == -1 |==> posWin == -1
2689:LVR:POS:0:org.apache.commons.io.FilenameUtils@getPrefixLength:664:2 |==> 0
2690:LVR:POS:NEG:org.apache.commons.io.FilenameUtils@getPrefixLength:664:2 |==> -2
2691:ROR:==(int,int):<=(int,int):org.apache.commons.io.FilenameUtils@getPrefixLength:664:posUnix == 2 |==> posUnix <= 2
2692:ROR:==(int,int):>=(int,int):org.apache.commons.io.FilenameUtils@getPrefixLength:664:posUnix == 2 |==> posUnix >= 2
2693:ROR:==(int,int):FALSE(int,int):org.apache.commons.io.FilenameUtils@getPrefixLength:664:posUnix == 2 |==> false
2694:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.io.FilenameUtils@getPrefixLength:664:posUnix == -1 && posWin == -1 || posUnix == 2 |==> (posUnix == -1 && posWin == -1) != (posUnix == 2)
2695:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.io.FilenameUtils@getPrefixLength:664:posUnix == -1 && posWin == -1 || posUnix == 2 |==> posUnix == -1 && posWin == -1
2696:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.io.FilenameUtils@getPrefixLength:664:posUnix == -1 && posWin == -1 || posUnix == 2 |==> posUnix == 2
2697:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.io.FilenameUtils@getPrefixLength:664:posUnix == -1 && posWin == -1 || posUnix == 2 |==> true
2698:LVR:POS:0:org.apache.commons.io.FilenameUtils@getPrefixLength:664:2 |==> 0
2699:LVR:POS:NEG:org.apache.commons.io.FilenameUtils@getPrefixLength:664:2 |==> -2
2700:ROR:==(int,int):<=(int,int):org.apache.commons.io.FilenameUtils@getPrefixLength:664:posWin == 2 |==> posWin <= 2
2701:ROR:==(int,int):>=(int,int):org.apache.commons.io.FilenameUtils@getPrefixLength:664:posWin == 2 |==> posWin >= 2
2702:ROR:==(int,int):FALSE(int,int):org.apache.commons.io.FilenameUtils@getPrefixLength:664:posWin == 2 |==> false
2703:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.io.FilenameUtils@getPrefixLength:664:posUnix == -1 && posWin == -1 || posUnix == 2 || posWin == 2 |==> (posUnix == -1 && posWin == -1 || posUnix == 2) != (posWin == 2)
2704:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.io.FilenameUtils@getPrefixLength:664:posUnix == -1 && posWin == -1 || posUnix == 2 || posWin == 2 |==> posUnix == -1 && posWin == -1 || posUnix == 2
2705:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.io.FilenameUtils@getPrefixLength:664:posUnix == -1 && posWin == -1 || posUnix == 2 || posWin == 2 |==> posWin == 2
2706:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.io.FilenameUtils@getPrefixLength:664:posUnix == -1 && posWin == -1 || posUnix == 2 || posWin == 2 |==> true
2707:LVR:NEG:0:org.apache.commons.io.FilenameUtils@getPrefixLength:667:-1 |==> 0
2708:LVR:NEG:POS:org.apache.commons.io.FilenameUtils@getPrefixLength:667:-1 |==> 1
2709:ROR:==(int,int):<=(int,int):org.apache.commons.io.FilenameUtils@getPrefixLength:667:posUnix == -1 |==> posUnix <= -1
2710:ROR:==(int,int):>=(int,int):org.apache.commons.io.FilenameUtils@getPrefixLength:667:posUnix == -1 |==> posUnix >= -1
2711:ROR:==(int,int):FALSE(int,int):org.apache.commons.io.FilenameUtils@getPrefixLength:667:posUnix == -1 |==> false
2712:LVR:NEG:0:org.apache.commons.io.FilenameUtils@getPrefixLength:668:-1 |==> 0
2713:LVR:NEG:POS:org.apache.commons.io.FilenameUtils@getPrefixLength:668:-1 |==> 1
2714:ROR:==(int,int):<=(int,int):org.apache.commons.io.FilenameUtils@getPrefixLength:668:posWin == -1 |==> posWin <= -1
2715:ROR:==(int,int):>=(int,int):org.apache.commons.io.FilenameUtils@getPrefixLength:668:posWin == -1 |==> posWin >= -1
2716:ROR:==(int,int):FALSE(int,int):org.apache.commons.io.FilenameUtils@getPrefixLength:668:posWin == -1 |==> false
2717:LVR:POS:0:org.apache.commons.io.FilenameUtils@getPrefixLength:669:1 |==> 0
2718:LVR:POS:NEG:org.apache.commons.io.FilenameUtils@getPrefixLength:669:1 |==> -1
2719:AOR:+(int,int):%(int,int):org.apache.commons.io.FilenameUtils@getPrefixLength:669:Math.min(posUnix, posWin) + 1 |==> Math.min(posUnix, posWin) % 1
2720:AOR:+(int,int):*(int,int):org.apache.commons.io.FilenameUtils@getPrefixLength:669:Math.min(posUnix, posWin) + 1 |==> Math.min(posUnix, posWin) * 1
2721:AOR:+(int,int):-(int,int):org.apache.commons.io.FilenameUtils@getPrefixLength:669:Math.min(posUnix, posWin) + 1 |==> Math.min(posUnix, posWin) - 1
2722:AOR:+(int,int):/(int,int):org.apache.commons.io.FilenameUtils@getPrefixLength:669:Math.min(posUnix, posWin) + 1 |==> Math.min(posUnix, posWin) / 1
2723:LVR:POS:0:org.apache.commons.io.FilenameUtils@getPrefixLength:671:1 |==> 0
2724:LVR:POS:NEG:org.apache.commons.io.FilenameUtils@getPrefixLength:671:1 |==> -1
2725:LVR:0:POS:org.apache.commons.io.FilenameUtils@getPrefixLength:671:0 |==> 1
2726:LVR:0:NEG:org.apache.commons.io.FilenameUtils@getPrefixLength:671:0 |==> -1
2727:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.io.FilenameUtils@getPrefixLength:661:isSeparator(ch0) && isSeparator(ch1) |==> isSeparator(ch0) == isSeparator(ch1)
2728:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.io.FilenameUtils@getPrefixLength:661:isSeparator(ch0) && isSeparator(ch1) |==> false
2729:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.io.FilenameUtils@getPrefixLength:661:isSeparator(ch0) && isSeparator(ch1) |==> isSeparator(ch0)
2730:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.io.FilenameUtils@getPrefixLength:661:isSeparator(ch0) && isSeparator(ch1) |==> isSeparator(ch1)
2731:ROR:==(int,int):<=(int,int):org.apache.commons.io.FilenameUtils@getPrefixLength:651:ch1 == ':' |==> ch1 <= ':'
2732:ROR:==(int,int):>=(int,int):org.apache.commons.io.FilenameUtils@getPrefixLength:651:ch1 == ':' |==> ch1 >= ':'
2733:ROR:==(int,int):FALSE(int,int):org.apache.commons.io.FilenameUtils@getPrefixLength:651:ch1 == ':' |==> false
2734:LVR:POS:0:org.apache.commons.io.FilenameUtils@getPrefixLength:634:1 |==> 0
2735:LVR:POS:NEG:org.apache.commons.io.FilenameUtils@getPrefixLength:634:1 |==> -1
2736:ROR:==(int,int):<=(int,int):org.apache.commons.io.FilenameUtils@getPrefixLength:634:len == 1 |==> len <= 1
2737:ROR:==(int,int):>=(int,int):org.apache.commons.io.FilenameUtils@getPrefixLength:634:len == 1 |==> len >= 1
2738:ROR:==(int,int):FALSE(int,int):org.apache.commons.io.FilenameUtils@getPrefixLength:634:len == 1 |==> false
2739:LVR:NEG:0:org.apache.commons.io.FilenameUtils@indexOfLastSeparator:690:-1 |==> 0
2740:LVR:NEG:POS:org.apache.commons.io.FilenameUtils@indexOfLastSeparator:690:-1 |==> 1
2741:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.io.FilenameUtils@indexOfLastSeparator:689:filename == null |==> false
2742:LVR:NEG:0:org.apache.commons.io.FilenameUtils@indexOfExtension:712:-1 |==> 0
2743:LVR:NEG:POS:org.apache.commons.io.FilenameUtils@indexOfExtension:712:-1 |==> 1
2744:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.io.FilenameUtils@indexOfExtension:711:filename == null |==> false
2745:ROR:>(int,int):!=(int,int):org.apache.commons.io.FilenameUtils@indexOfExtension:716:lastSeparator > extensionPos |==> lastSeparator != extensionPos
2746:ROR:>(int,int):>=(int,int):org.apache.commons.io.FilenameUtils@indexOfExtension:716:lastSeparator > extensionPos |==> lastSeparator >= extensionPos
2747:ROR:>(int,int):FALSE(int,int):org.apache.commons.io.FilenameUtils@indexOfExtension:716:lastSeparator > extensionPos |==> false
2748:LVR:NEG:0:org.apache.commons.io.FilenameUtils@indexOfExtension:716:-1 |==> 0
2749:LVR:NEG:POS:org.apache.commons.io.FilenameUtils@indexOfExtension:716:-1 |==> 1
2750:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.io.FilenameUtils@getPrefix:750:filename == null |==> false
2751:LVR:0:POS:org.apache.commons.io.FilenameUtils@getPrefix:754:0 |==> 1
2752:LVR:0:NEG:org.apache.commons.io.FilenameUtils@getPrefix:754:0 |==> -1
2753:ROR:<(int,int):!=(int,int):org.apache.commons.io.FilenameUtils@getPrefix:754:len < 0 |==> len != 0
2754:ROR:<(int,int):<=(int,int):org.apache.commons.io.FilenameUtils@getPrefix:754:len < 0 |==> len <= 0
2755:ROR:<(int,int):FALSE(int,int):org.apache.commons.io.FilenameUtils@getPrefix:754:len < 0 |==> false
2756:ROR:>(int,int):!=(int,int):org.apache.commons.io.FilenameUtils@getPrefix:757:len > filename.length() |==> len != filename.length()
2757:ROR:>(int,int):>=(int,int):org.apache.commons.io.FilenameUtils@getPrefix:757:len > filename.length() |==> len >= filename.length()
2758:ROR:>(int,int):FALSE(int,int):org.apache.commons.io.FilenameUtils@getPrefix:757:len > filename.length() |==> false
2759:LVR:0:POS:org.apache.commons.io.FilenameUtils@getPrefix:760:0 |==> 1
2760:LVR:0:NEG:org.apache.commons.io.FilenameUtils@getPrefix:760:0 |==> -1
2761:LVR:POS:0:org.apache.commons.io.FilenameUtils@getPath:786:1 |==> 0
2762:LVR:POS:NEG:org.apache.commons.io.FilenameUtils@getPath:786:1 |==> -1
2763:LVR:0:POS:org.apache.commons.io.FilenameUtils@getPathNoEndSeparator:813:0 |==> 1
2764:LVR:0:NEG:org.apache.commons.io.FilenameUtils@getPathNoEndSeparator:813:0 |==> -1
2765:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.io.FilenameUtils@doGetPath:824:filename == null |==> false
2766:LVR:0:POS:org.apache.commons.io.FilenameUtils@doGetPath:828:0 |==> 1
2767:LVR:0:NEG:org.apache.commons.io.FilenameUtils@doGetPath:828:0 |==> -1
2768:ROR:<(int,int):!=(int,int):org.apache.commons.io.FilenameUtils@doGetPath:828:prefix < 0 |==> prefix != 0
2769:ROR:<(int,int):<=(int,int):org.apache.commons.io.FilenameUtils@doGetPath:828:prefix < 0 |==> prefix <= 0
2770:ROR:<(int,int):FALSE(int,int):org.apache.commons.io.FilenameUtils@doGetPath:828:prefix < 0 |==> false
2771:AOR:+(int,int):%(int,int):org.apache.commons.io.FilenameUtils@doGetPath:832:index + separatorAdd |==> index % separatorAdd
2772:AOR:+(int,int):*(int,int):org.apache.commons.io.FilenameUtils@doGetPath:832:index + separatorAdd |==> index * separatorAdd
2773:AOR:+(int,int):-(int,int):org.apache.commons.io.FilenameUtils@doGetPath:832:index + separatorAdd |==> index - separatorAdd
2774:AOR:+(int,int):/(int,int):org.apache.commons.io.FilenameUtils@doGetPath:832:index + separatorAdd |==> index / separatorAdd
2775:ROR:>=(int,int):==(int,int):org.apache.commons.io.FilenameUtils@doGetPath:833:prefix >= filename.length() |==> prefix == filename.length()
2776:ROR:>=(int,int):>(int,int):org.apache.commons.io.FilenameUtils@doGetPath:833:prefix >= filename.length() |==> prefix > filename.length()
2777:ROR:>=(int,int):TRUE(int,int):org.apache.commons.io.FilenameUtils@doGetPath:833:prefix >= filename.length() |==> true
2778:LVR:0:POS:org.apache.commons.io.FilenameUtils@doGetPath:833:0 |==> 1
2779:LVR:0:NEG:org.apache.commons.io.FilenameUtils@doGetPath:833:0 |==> -1
2780:ROR:<(int,int):!=(int,int):org.apache.commons.io.FilenameUtils@doGetPath:833:index < 0 |==> index != 0
2781:ROR:<(int,int):<=(int,int):org.apache.commons.io.FilenameUtils@doGetPath:833:index < 0 |==> index <= 0
2782:ROR:<(int,int):FALSE(int,int):org.apache.commons.io.FilenameUtils@doGetPath:833:index < 0 |==> false
2783:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.io.FilenameUtils@doGetPath:833:prefix >= filename.length() || index < 0 |==> prefix >= filename.length() != index < 0
2784:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.io.FilenameUtils@doGetPath:833:prefix >= filename.length() || index < 0 |==> prefix >= filename.length()
2785:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.io.FilenameUtils@doGetPath:833:prefix >= filename.length() || index < 0 |==> index < 0
2786:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.io.FilenameUtils@doGetPath:833:prefix >= filename.length() || index < 0 |==> true
2787:ROR:>=(int,int):==(int,int):org.apache.commons.io.FilenameUtils@doGetPath:833:prefix >= endIndex |==> prefix == endIndex
2788:ROR:>=(int,int):>(int,int):org.apache.commons.io.FilenameUtils@doGetPath:833:prefix >= endIndex |==> prefix > endIndex
2789:ROR:>=(int,int):TRUE(int,int):org.apache.commons.io.FilenameUtils@doGetPath:833:prefix >= endIndex |==> true
2790:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.io.FilenameUtils@doGetPath:833:prefix >= filename.length() || index < 0 || prefix >= endIndex |==> (prefix >= filename.length() || index < 0) != prefix >= endIndex
2791:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.io.FilenameUtils@doGetPath:833:prefix >= filename.length() || index < 0 || prefix >= endIndex |==> prefix >= filename.length() || index < 0
2792:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.io.FilenameUtils@doGetPath:833:prefix >= filename.length() || index < 0 || prefix >= endIndex |==> prefix >= endIndex
2793:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.io.FilenameUtils@doGetPath:833:prefix >= filename.length() || index < 0 || prefix >= endIndex |==> true
2794:LVR:TRUE:FALSE:org.apache.commons.io.FilenameUtils@getFullPath:865:true |==> false
2795:LVR:FALSE:TRUE:org.apache.commons.io.FilenameUtils@getFullPathNoEndSeparator:895:false |==> true
2796:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.io.FilenameUtils@doGetFullPath:906:filename == null |==> false
2797:LVR:0:POS:org.apache.commons.io.FilenameUtils@doGetFullPath:910:0 |==> 1
2798:LVR:0:NEG:org.apache.commons.io.FilenameUtils@doGetFullPath:910:0 |==> -1
2799:ROR:<(int,int):!=(int,int):org.apache.commons.io.FilenameUtils@doGetFullPath:910:prefix < 0 |==> prefix != 0
2800:ROR:<(int,int):<=(int,int):org.apache.commons.io.FilenameUtils@doGetFullPath:910:prefix < 0 |==> prefix <= 0
2801:ROR:<(int,int):FALSE(int,int):org.apache.commons.io.FilenameUtils@doGetFullPath:910:prefix < 0 |==> false
2802:COR:includeSeparator:TRUE:org.apache.commons.io.FilenameUtils@doGetFullPath:914:includeSeparator |==> false
2803:COR:includeSeparator:FALSE:org.apache.commons.io.FilenameUtils@doGetFullPath:914:includeSeparator |==> true
2804:ROR:>=(int,int):==(int,int):org.apache.commons.io.FilenameUtils@doGetFullPath:913:prefix >= filename.length() |==> prefix == filename.length()
2805:ROR:>=(int,int):>(int,int):org.apache.commons.io.FilenameUtils@doGetFullPath:913:prefix >= filename.length() |==> prefix > filename.length()
2806:ROR:>=(int,int):TRUE(int,int):org.apache.commons.io.FilenameUtils@doGetFullPath:913:prefix >= filename.length() |==> true
2807:LVR:0:POS:org.apache.commons.io.FilenameUtils@doGetFullPath:922:0 |==> 1
2808:LVR:0:NEG:org.apache.commons.io.FilenameUtils@doGetFullPath:922:0 |==> -1
2809:LVR:0:POS:org.apache.commons.io.FilenameUtils@doGetFullPath:921:0 |==> 1
2810:LVR:0:NEG:org.apache.commons.io.FilenameUtils@doGetFullPath:921:0 |==> -1
2811:ROR:<(int,int):!=(int,int):org.apache.commons.io.FilenameUtils@doGetFullPath:921:index < 0 |==> index != 0
2812:ROR:<(int,int):<=(int,int):org.apache.commons.io.FilenameUtils@doGetFullPath:921:index < 0 |==> index <= 0
2813:ROR:<(int,int):FALSE(int,int):org.apache.commons.io.FilenameUtils@doGetFullPath:921:index < 0 |==> false
2814:LVR:POS:0:org.apache.commons.io.FilenameUtils@doGetFullPath:924:1 |==> 0
2815:LVR:POS:NEG:org.apache.commons.io.FilenameUtils@doGetFullPath:924:1 |==> -1
2816:LVR:0:POS:org.apache.commons.io.FilenameUtils@doGetFullPath:924:0 |==> 1
2817:LVR:0:NEG:org.apache.commons.io.FilenameUtils@doGetFullPath:924:0 |==> -1
2818:AOR:+(int,int):%(int,int):org.apache.commons.io.FilenameUtils@doGetFullPath:924:index + (includeSeparator ? 1 : 0) |==> index % (includeSeparator ? 1 : 0)
2819:AOR:+(int,int):*(int,int):org.apache.commons.io.FilenameUtils@doGetFullPath:924:index + (includeSeparator ? 1 : 0) |==> index * (includeSeparator ? 1 : 0)
2820:AOR:+(int,int):-(int,int):org.apache.commons.io.FilenameUtils@doGetFullPath:924:index + (includeSeparator ? 1 : 0) |==> index - (includeSeparator ? 1 : 0)
2821:AOR:+(int,int):/(int,int):org.apache.commons.io.FilenameUtils@doGetFullPath:924:index + (includeSeparator ? 1 : 0) |==> index / (includeSeparator ? 1 : 0)
2822:STD:<INC/DEC>:<NO-OP>:org.apache.commons.io.FilenameUtils@doGetFullPath:926:end++ |==> <NO-OP>
2823:LVR:0:POS:org.apache.commons.io.FilenameUtils@doGetFullPath:925:0 |==> 1
2824:LVR:0:NEG:org.apache.commons.io.FilenameUtils@doGetFullPath:925:0 |==> -1
2825:ROR:==(int,int):<=(int,int):org.apache.commons.io.FilenameUtils@doGetFullPath:925:end == 0 |==> end <= 0
2826:ROR:==(int,int):>=(int,int):org.apache.commons.io.FilenameUtils@doGetFullPath:925:end == 0 |==> end >= 0
2827:ROR:==(int,int):FALSE(int,int):org.apache.commons.io.FilenameUtils@doGetFullPath:925:end == 0 |==> false
2828:LVR:0:POS:org.apache.commons.io.FilenameUtils@doGetFullPath:928:0 |==> 1
2829:LVR:0:NEG:org.apache.commons.io.FilenameUtils@doGetFullPath:928:0 |==> -1
2830:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.io.FilenameUtils@getName:949:filename == null |==> false
2831:LVR:POS:0:org.apache.commons.io.FilenameUtils@getName:953:1 |==> 0
2832:LVR:POS:NEG:org.apache.commons.io.FilenameUtils@getName:953:1 |==> -1
2833:AOR:+(int,int):%(int,int):org.apache.commons.io.FilenameUtils@getName:953:index + 1 |==> index % 1
2834:AOR:+(int,int):*(int,int):org.apache.commons.io.FilenameUtils@getName:953:index + 1 |==> index * 1
2835:AOR:+(int,int):-(int,int):org.apache.commons.io.FilenameUtils@getName:953:index + 1 |==> index - 1
2836:AOR:+(int,int):/(int,int):org.apache.commons.io.FilenameUtils@getName:953:index + 1 |==> index / 1
2837:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.io.FilenameUtils@getExtension:996:filename == null |==> false
2838:LVR:POS:0:org.apache.commons.io.FilenameUtils@getExtension:1003:1 |==> 0
2839:LVR:POS:NEG:org.apache.commons.io.FilenameUtils@getExtension:1003:1 |==> -1
2840:AOR:+(int,int):%(int,int):org.apache.commons.io.FilenameUtils@getExtension:1003:index + 1 |==> index % 1
2841:AOR:+(int,int):*(int,int):org.apache.commons.io.FilenameUtils@getExtension:1003:index + 1 |==> index * 1
2842:AOR:+(int,int):-(int,int):org.apache.commons.io.FilenameUtils@getExtension:1003:index + 1 |==> index - 1
2843:AOR:+(int,int):/(int,int):org.apache.commons.io.FilenameUtils@getExtension:1003:index + 1 |==> index / 1
2844:LVR:NEG:0:org.apache.commons.io.FilenameUtils@getExtension:1000:-1 |==> 0
2845:LVR:NEG:POS:org.apache.commons.io.FilenameUtils@getExtension:1000:-1 |==> 1
2846:ROR:==(int,int):<=(int,int):org.apache.commons.io.FilenameUtils@getExtension:1000:index == -1 |==> index <= -1
2847:ROR:==(int,int):>=(int,int):org.apache.commons.io.FilenameUtils@getExtension:1000:index == -1 |==> index >= -1
2848:ROR:==(int,int):FALSE(int,int):org.apache.commons.io.FilenameUtils@getExtension:1000:index == -1 |==> false
2849:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.io.FilenameUtils@removeExtension:1026:filename == null |==> false
2850:LVR:0:POS:org.apache.commons.io.FilenameUtils@removeExtension:1033:0 |==> 1
2851:LVR:0:NEG:org.apache.commons.io.FilenameUtils@removeExtension:1033:0 |==> -1
2852:LVR:NEG:0:org.apache.commons.io.FilenameUtils@removeExtension:1030:-1 |==> 0
2853:LVR:NEG:POS:org.apache.commons.io.FilenameUtils@removeExtension:1030:-1 |==> 1
2854:ROR:==(int,int):<=(int,int):org.apache.commons.io.FilenameUtils@removeExtension:1030:index == -1 |==> index <= -1
2855:ROR:==(int,int):>=(int,int):org.apache.commons.io.FilenameUtils@removeExtension:1030:index == -1 |==> index >= -1
2856:ROR:==(int,int):FALSE(int,int):org.apache.commons.io.FilenameUtils@removeExtension:1030:index == -1 |==> false
2857:LVR:FALSE:TRUE:org.apache.commons.io.FilenameUtils@equals:1050:false |==> true
2858:LVR:FALSE:TRUE:org.apache.commons.io.FilenameUtils@equalsOnSystem:1065:false |==> true
2859:LVR:TRUE:FALSE:org.apache.commons.io.FilenameUtils@equalsNormalized:1081:true |==> false
2860:LVR:TRUE:FALSE:org.apache.commons.io.FilenameUtils@equalsNormalizedOnSystem:1098:true |==> false
2861:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.io.FilenameUtils@equals:1117:filename1 == null |==> false
2862:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.io.FilenameUtils@equals:1117:filename2 == null |==> false
2863:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.io.FilenameUtils@equals:1117:filename1 == null && filename2 == null |==> filename1 == null == (filename2 == null)
2864:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.io.FilenameUtils@equals:1117:filename1 == null && filename2 == null |==> false
2865:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.io.FilenameUtils@equals:1117:filename1 == null && filename2 == null |==> filename1 == null
2866:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.io.FilenameUtils@equals:1117:filename1 == null && filename2 == null |==> filename2 == null
2867:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.io.FilenameUtils@equals:1116:filename1 == null |==> false
2868:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.io.FilenameUtils@equals:1116:filename2 == null |==> false
2869:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.io.FilenameUtils@equals:1116:filename1 == null || filename2 == null |==> filename1 == null != (filename2 == null)
2870:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.io.FilenameUtils@equals:1116:filename1 == null || filename2 == null |==> filename1 == null
2871:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.io.FilenameUtils@equals:1116:filename1 == null || filename2 == null |==> filename2 == null
2872:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.io.FilenameUtils@equals:1116:filename1 == null || filename2 == null |==> true
2873:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.io.FilenameUtils@equals:1122:filename1 == null |==> false
2874:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.io.FilenameUtils@equals:1122:filename2 == null |==> false
2875:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.io.FilenameUtils@equals:1122:filename1 == null || filename2 == null |==> filename1 == null != (filename2 == null)
2876:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.io.FilenameUtils@equals:1122:filename1 == null || filename2 == null |==> filename1 == null
2877:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.io.FilenameUtils@equals:1122:filename1 == null || filename2 == null |==> filename2 == null
2878:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.io.FilenameUtils@equals:1122:filename1 == null || filename2 == null |==> true
2879:COR:normalized:TRUE:org.apache.commons.io.FilenameUtils@equals:1119:normalized |==> false
2880:COR:normalized:FALSE:org.apache.commons.io.FilenameUtils@equals:1119:normalized |==> true
2881:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.io.FilenameUtils@equals:1127:caseSensitivity == null |==> false
2882:LVR:FALSE:TRUE:org.apache.commons.io.FilenameUtils@isExtension:1147:false |==> true
2883:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.io.FilenameUtils@isExtension:1146:filename == null |==> false
2884:LVR:NEG:0:org.apache.commons.io.FilenameUtils@isExtension:1150:-1 |==> 0
2885:LVR:NEG:POS:org.apache.commons.io.FilenameUtils@isExtension:1150:-1 |==> 1
2886:ROR:==(int,int):<=(int,int):org.apache.commons.io.FilenameUtils@isExtension:1150:indexOfExtension(filename) == -1 |==> indexOfExtension(filename) <= -1
2887:ROR:==(int,int):>=(int,int):org.apache.commons.io.FilenameUtils@isExtension:1150:indexOfExtension(filename) == -1 |==> indexOfExtension(filename) >= -1
2888:ROR:==(int,int):FALSE(int,int):org.apache.commons.io.FilenameUtils@isExtension:1150:indexOfExtension(filename) == -1 |==> false
2889:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.io.FilenameUtils@isExtension:1149:extension == null |==> false
2890:LVR:0:POS:org.apache.commons.io.FilenameUtils@isExtension:1149:0 |==> 1
2891:LVR:0:NEG:org.apache.commons.io.FilenameUtils@isExtension:1149:0 |==> -1
2892:ROR:==(int,int):<=(int,int):org.apache.commons.io.FilenameUtils@isExtension:1149:extension.length() == 0 |==> extension.length() <= 0
2893:ROR:==(int,int):>=(int,int):org.apache.commons.io.FilenameUtils@isExtension:1149:extension.length() == 0 |==> extension.length() >= 0
2894:ROR:==(int,int):FALSE(int,int):org.apache.commons.io.FilenameUtils@isExtension:1149:extension.length() == 0 |==> false
2895:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.io.FilenameUtils@isExtension:1149:extension == null || extension.length() == 0 |==> extension == null != (extension.length() == 0)
2896:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.io.FilenameUtils@isExtension:1149:extension == null || extension.length() == 0 |==> extension == null
2897:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.io.FilenameUtils@isExtension:1149:extension == null || extension.length() == 0 |==> extension.length() == 0
2898:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.io.FilenameUtils@isExtension:1149:extension == null || extension.length() == 0 |==> true
2899:LVR:FALSE:TRUE:org.apache.commons.io.FilenameUtils@isExtension:1169:false |==> true
2900:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.io.FilenameUtils@isExtension:1168:filename == null |==> false
2901:LVR:NEG:0:org.apache.commons.io.FilenameUtils@isExtension:1172:-1 |==> 0
2902:LVR:NEG:POS:org.apache.commons.io.FilenameUtils@isExtension:1172:-1 |==> 1
2903:ROR:==(int,int):<=(int,int):org.apache.commons.io.FilenameUtils@isExtension:1172:indexOfExtension(filename) == -1 |==> indexOfExtension(filename) <= -1
2904:ROR:==(int,int):>=(int,int):org.apache.commons.io.FilenameUtils@isExtension:1172:indexOfExtension(filename) == -1 |==> indexOfExtension(filename) >= -1
2905:ROR:==(int,int):FALSE(int,int):org.apache.commons.io.FilenameUtils@isExtension:1172:indexOfExtension(filename) == -1 |==> false
2906:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.io.FilenameUtils@isExtension:1171:extensions == null |==> false
2907:LVR:0:POS:org.apache.commons.io.FilenameUtils@isExtension:1171:0 |==> 1
2908:LVR:0:NEG:org.apache.commons.io.FilenameUtils@isExtension:1171:0 |==> -1
2909:ROR:==(int,int):<=(int,int):org.apache.commons.io.FilenameUtils@isExtension:1171:extensions.length == 0 |==> extensions.length <= 0
2910:ROR:==(int,int):>=(int,int):org.apache.commons.io.FilenameUtils@isExtension:1171:extensions.length == 0 |==> extensions.length >= 0
2911:ROR:==(int,int):FALSE(int,int):org.apache.commons.io.FilenameUtils@isExtension:1171:extensions.length == 0 |==> false
2912:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.io.FilenameUtils@isExtension:1171:extensions == null || extensions.length == 0 |==> extensions == null != (extensions.length == 0)
2913:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.io.FilenameUtils@isExtension:1171:extensions == null || extensions.length == 0 |==> extensions == null
2914:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.io.FilenameUtils@isExtension:1171:extensions == null || extensions.length == 0 |==> extensions.length == 0
2915:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.io.FilenameUtils@isExtension:1171:extensions == null || extensions.length == 0 |==> true
2916:LVR:TRUE:FALSE:org.apache.commons.io.FilenameUtils@isExtension:1177:true |==> false
2917:COR:fileExt.equals(extension):TRUE:org.apache.commons.io.FilenameUtils@isExtension:1176:fileExt.equals(extension) |==> false
2918:COR:fileExt.equals(extension):FALSE:org.apache.commons.io.FilenameUtils@isExtension:1176:fileExt.equals(extension) |==> true
2919:LVR:FALSE:TRUE:org.apache.commons.io.FilenameUtils@isExtension:1180:false |==> true
2920:LVR:FALSE:TRUE:org.apache.commons.io.FilenameUtils@isExtension:1196:false |==> true
2921:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.io.FilenameUtils@isExtension:1195:filename == null |==> false
2922:LVR:NEG:0:org.apache.commons.io.FilenameUtils@isExtension:1199:-1 |==> 0
2923:LVR:NEG:POS:org.apache.commons.io.FilenameUtils@isExtension:1199:-1 |==> 1
2924:ROR:==(int,int):<=(int,int):org.apache.commons.io.FilenameUtils@isExtension:1199:indexOfExtension(filename) == -1 |==> indexOfExtension(filename) <= -1
2925:ROR:==(int,int):>=(int,int):org.apache.commons.io.FilenameUtils@isExtension:1199:indexOfExtension(filename) == -1 |==> indexOfExtension(filename) >= -1
2926:ROR:==(int,int):FALSE(int,int):org.apache.commons.io.FilenameUtils@isExtension:1199:indexOfExtension(filename) == -1 |==> false
2927:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.io.FilenameUtils@isExtension:1198:extensions == null |==> false
2928:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.io.FilenameUtils@isExtension:1198:extensions == null || extensions.isEmpty() |==> extensions == null != extensions.isEmpty()
2929:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.io.FilenameUtils@isExtension:1198:extensions == null || extensions.isEmpty() |==> extensions == null
2930:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.io.FilenameUtils@isExtension:1198:extensions == null || extensions.isEmpty() |==> extensions.isEmpty()
2931:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.io.FilenameUtils@isExtension:1198:extensions == null || extensions.isEmpty() |==> true
2932:LVR:TRUE:FALSE:org.apache.commons.io.FilenameUtils@isExtension:1204:true |==> false
2933:COR:fileExt.equals(extension):TRUE:org.apache.commons.io.FilenameUtils@isExtension:1203:fileExt.equals(extension) |==> false
2934:COR:fileExt.equals(extension):FALSE:org.apache.commons.io.FilenameUtils@isExtension:1203:fileExt.equals(extension) |==> true
2935:LVR:FALSE:TRUE:org.apache.commons.io.FilenameUtils@isExtension:1207:false |==> true
2936:LVR:TRUE:FALSE:org.apache.commons.io.FilenameUtils@wildcardMatch:1279:true |==> false
2937:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.io.FilenameUtils@wildcardMatch:1278:filename == null |==> false
2938:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.io.FilenameUtils@wildcardMatch:1278:wildcardMatcher == null |==> false
2939:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.io.FilenameUtils@wildcardMatch:1278:filename == null && wildcardMatcher == null |==> filename == null == (wildcardMatcher == null)
2940:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.io.FilenameUtils@wildcardMatch:1278:filename == null && wildcardMatcher == null |==> false
2941:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.io.FilenameUtils@wildcardMatch:1278:filename == null && wildcardMatcher == null |==> filename == null
2942:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.io.FilenameUtils@wildcardMatch:1278:filename == null && wildcardMatcher == null |==> wildcardMatcher == null
2943:LVR:FALSE:TRUE:org.apache.commons.io.FilenameUtils@wildcardMatch:1282:false |==> true
2944:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.io.FilenameUtils@wildcardMatch:1281:filename == null |==> false
2945:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.io.FilenameUtils@wildcardMatch:1281:wildcardMatcher == null |==> false
2946:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.io.FilenameUtils@wildcardMatch:1281:filename == null || wildcardMatcher == null |==> filename == null != (wildcardMatcher == null)
2947:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.io.FilenameUtils@wildcardMatch:1281:filename == null || wildcardMatcher == null |==> filename == null
2948:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.io.FilenameUtils@wildcardMatch:1281:filename == null || wildcardMatcher == null |==> wildcardMatcher == null
2949:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.io.FilenameUtils@wildcardMatch:1281:filename == null || wildcardMatcher == null |==> true
2950:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.io.FilenameUtils@wildcardMatch:1284:caseSensitivity == null |==> false
2951:LVR:FALSE:TRUE:org.apache.commons.io.FilenameUtils@wildcardMatch:1288:false |==> true
2952:LVR:0:POS:org.apache.commons.io.FilenameUtils@wildcardMatch:1289:0 |==> 1
2953:LVR:0:NEG:org.apache.commons.io.FilenameUtils@wildcardMatch:1289:0 |==> -1
2954:LVR:0:POS:org.apache.commons.io.FilenameUtils@wildcardMatch:1290:0 |==> 1
2955:LVR:0:NEG:org.apache.commons.io.FilenameUtils@wildcardMatch:1290:0 |==> -1
2956:LVR:0:POS:org.apache.commons.io.FilenameUtils@wildcardMatch:1297:0 |==> 1
2957:LVR:0:NEG:org.apache.commons.io.FilenameUtils@wildcardMatch:1297:0 |==> -1
2958:LVR:POS:0:org.apache.commons.io.FilenameUtils@wildcardMatch:1298:1 |==> 0
2959:LVR:POS:NEG:org.apache.commons.io.FilenameUtils@wildcardMatch:1298:1 |==> -1
2960:LVR:TRUE:FALSE:org.apache.commons.io.FilenameUtils@wildcardMatch:1299:true |==> false
2961:LVR:0:POS:org.apache.commons.io.FilenameUtils@wildcardMatch:1295:0 |==> 1
2962:LVR:0:NEG:org.apache.commons.io.FilenameUtils@wildcardMatch:1295:0 |==> -1
2963:ROR:>(int,int):!=(int,int):org.apache.commons.io.FilenameUtils@wildcardMatch:1295:backtrack.size() > 0 |==> backtrack.size() != 0
2964:ROR:>(int,int):>=(int,int):org.apache.commons.io.FilenameUtils@wildcardMatch:1295:backtrack.size() > 0 |==> backtrack.size() >= 0
2965:ROR:>(int,int):FALSE(int,int):org.apache.commons.io.FilenameUtils@wildcardMatch:1295:backtrack.size() > 0 |==> false
2966:ROR:<(int,int):!=(int,int):org.apache.commons.io.FilenameUtils@wildcardMatch:1303:wcsIdx < wcs.length |==> wcsIdx != wcs.length
2967:ROR:<(int,int):<=(int,int):org.apache.commons.io.FilenameUtils@wildcardMatch:1303:wcsIdx < wcs.length |==> wcsIdx <= wcs.length
2968:ROR:<(int,int):FALSE(int,int):org.apache.commons.io.FilenameUtils@wildcardMatch:1303:wcsIdx < wcs.length |==> false
2969:STD:<INC/DEC>:<NO-OP>:org.apache.commons.io.FilenameUtils@wildcardMatch:1307:textIdx++ |==> <NO-OP>
2970:ROR:>(int,int):!=(int,int):org.apache.commons.io.FilenameUtils@wildcardMatch:1308:textIdx > filename.length() |==> textIdx != filename.length()
2971:ROR:>(int,int):>=(int,int):org.apache.commons.io.FilenameUtils@wildcardMatch:1308:textIdx > filename.length() |==> textIdx >= filename.length()
2972:ROR:>(int,int):FALSE(int,int):org.apache.commons.io.FilenameUtils@wildcardMatch:1308:textIdx > filename.length() |==> false
2973:LVR:FALSE:TRUE:org.apache.commons.io.FilenameUtils@wildcardMatch:1311:false |==> true
2974:LVR:TRUE:FALSE:org.apache.commons.io.FilenameUtils@wildcardMatch:1315:true |==> false
2975:LVR:POS:0:org.apache.commons.io.FilenameUtils@wildcardMatch:1316:1 |==> 0
2976:LVR:POS:NEG:org.apache.commons.io.FilenameUtils@wildcardMatch:1316:1 |==> -1
2977:AOR:-(int,int):%(int,int):org.apache.commons.io.FilenameUtils@wildcardMatch:1316:wcs.length - 1 |==> wcs.length % 1
2978:AOR:-(int,int):*(int,int):org.apache.commons.io.FilenameUtils@wildcardMatch:1316:wcs.length - 1 |==> wcs.length * 1
2979:AOR:-(int,int):+(int,int):org.apache.commons.io.FilenameUtils@wildcardMatch:1316:wcs.length - 1 |==> wcs.length + 1
2980:AOR:-(int,int):/(int,int):org.apache.commons.io.FilenameUtils@wildcardMatch:1316:wcs.length - 1 |==> wcs.length / 1
2981:ROR:==(int,int):<=(int,int):org.apache.commons.io.FilenameUtils@wildcardMatch:1316:wcsIdx == wcs.length - 1 |==> wcsIdx <= wcs.length - 1
2982:ROR:==(int,int):>=(int,int):org.apache.commons.io.FilenameUtils@wildcardMatch:1316:wcsIdx == wcs.length - 1 |==> wcsIdx >= wcs.length - 1
2983:ROR:==(int,int):FALSE(int,int):org.apache.commons.io.FilenameUtils@wildcardMatch:1316:wcsIdx == wcs.length - 1 |==> false
2984:LVR:NEG:0:org.apache.commons.io.FilenameUtils@wildcardMatch:1325:-1 |==> 0
2985:LVR:NEG:POS:org.apache.commons.io.FilenameUtils@wildcardMatch:1325:-1 |==> 1
2986:ROR:==(int,int):<=(int,int):org.apache.commons.io.FilenameUtils@wildcardMatch:1325:textIdx == -1 |==> textIdx <= -1
2987:ROR:==(int,int):>=(int,int):org.apache.commons.io.FilenameUtils@wildcardMatch:1325:textIdx == -1 |==> textIdx >= -1
2988:ROR:==(int,int):FALSE(int,int):org.apache.commons.io.FilenameUtils@wildcardMatch:1325:textIdx == -1 |==> false
2989:LVR:POS:0:org.apache.commons.io.FilenameUtils@wildcardMatch:1329:1 |==> 0
2990:LVR:POS:NEG:org.apache.commons.io.FilenameUtils@wildcardMatch:1329:1 |==> -1
2991:AOR:+(int,int):%(int,int):org.apache.commons.io.FilenameUtils@wildcardMatch:1329:textIdx + 1 |==> textIdx % 1
2992:AOR:+(int,int):*(int,int):org.apache.commons.io.FilenameUtils@wildcardMatch:1329:textIdx + 1 |==> textIdx * 1
2993:AOR:+(int,int):-(int,int):org.apache.commons.io.FilenameUtils@wildcardMatch:1329:textIdx + 1 |==> textIdx - 1
2994:AOR:+(int,int):/(int,int):org.apache.commons.io.FilenameUtils@wildcardMatch:1329:textIdx + 1 |==> textIdx / 1
2995:STD:<CALL>:<NO-OP>:org.apache.commons.io.FilenameUtils@wildcardMatch:1331:backtrack.push(new int[]{wcsIdx, repeat}) |==> <NO-OP>
2996:LVR:0:POS:org.apache.commons.io.FilenameUtils@wildcardMatch:1330:0 |==> 1
2997:LVR:0:NEG:org.apache.commons.io.FilenameUtils@wildcardMatch:1330:0 |==> -1
2998:ROR:>=(int,int):==(int,int):org.apache.commons.io.FilenameUtils@wildcardMatch:1330:repeat >= 0 |==> repeat == 0
2999:ROR:>=(int,int):>(int,int):org.apache.commons.io.FilenameUtils@wildcardMatch:1330:repeat >= 0 |==> repeat > 0
3000:ROR:>=(int,int):TRUE(int,int):org.apache.commons.io.FilenameUtils@wildcardMatch:1330:repeat >= 0 |==> true
3001:COR:anyChars:TRUE:org.apache.commons.io.FilenameUtils@wildcardMatch:1322:anyChars |==> false
3002:COR:anyChars:FALSE:org.apache.commons.io.FilenameUtils@wildcardMatch:1322:anyChars |==> true
3003:STD:<ASSIGN>:<NO-OP>:org.apache.commons.io.FilenameUtils@wildcardMatch:1342:textIdx += wcs[wcsIdx].length() |==> <NO-OP>
3004:LVR:FALSE:TRUE:org.apache.commons.io.FilenameUtils@wildcardMatch:1343:false |==> true
3005:COR:wcs[wcsIdx].equals("*"):TRUE:org.apache.commons.io.FilenameUtils@wildcardMatch:1313:wcs[wcsIdx].equals("*") |==> false
3006:COR:wcs[wcsIdx].equals("*"):FALSE:org.apache.commons.io.FilenameUtils@wildcardMatch:1313:wcs[wcsIdx].equals("*") |==> true
3007:COR:wcs[wcsIdx].equals("?"):TRUE:org.apache.commons.io.FilenameUtils@wildcardMatch:1305:wcs[wcsIdx].equals("?") |==> false
3008:COR:wcs[wcsIdx].equals("?"):FALSE:org.apache.commons.io.FilenameUtils@wildcardMatch:1305:wcs[wcsIdx].equals("?") |==> true
3009:STD:<INC/DEC>:<NO-OP>:org.apache.commons.io.FilenameUtils@wildcardMatch:1346:wcsIdx++ |==> <NO-OP>
3010:LVR:TRUE:FALSE:org.apache.commons.io.FilenameUtils@wildcardMatch:1351:true |==> false
3011:ROR:==(int,int):<=(int,int):org.apache.commons.io.FilenameUtils@wildcardMatch:1350:wcsIdx == wcs.length |==> wcsIdx <= wcs.length
3012:ROR:==(int,int):>=(int,int):org.apache.commons.io.FilenameUtils@wildcardMatch:1350:wcsIdx == wcs.length |==> wcsIdx >= wcs.length
3013:ROR:==(int,int):FALSE(int,int):org.apache.commons.io.FilenameUtils@wildcardMatch:1350:wcsIdx == wcs.length |==> false
3014:ROR:==(int,int):<=(int,int):org.apache.commons.io.FilenameUtils@wildcardMatch:1350:textIdx == filename.length() |==> textIdx <= filename.length()
3015:ROR:==(int,int):>=(int,int):org.apache.commons.io.FilenameUtils@wildcardMatch:1350:textIdx == filename.length() |==> textIdx >= filename.length()
3016:ROR:==(int,int):FALSE(int,int):org.apache.commons.io.FilenameUtils@wildcardMatch:1350:textIdx == filename.length() |==> false
3017:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.io.FilenameUtils@wildcardMatch:1350:wcsIdx == wcs.length && textIdx == filename.length() |==> wcsIdx == wcs.length == (textIdx == filename.length())
3018:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.io.FilenameUtils@wildcardMatch:1350:wcsIdx == wcs.length && textIdx == filename.length() |==> false
3019:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.io.FilenameUtils@wildcardMatch:1350:wcsIdx == wcs.length && textIdx == filename.length() |==> wcsIdx == wcs.length
3020:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.io.FilenameUtils@wildcardMatch:1350:wcsIdx == wcs.length && textIdx == filename.length() |==> textIdx == filename.length()
3021:LVR:0:POS:org.apache.commons.io.FilenameUtils@wildcardMatch:1354:0 |==> 1
3022:LVR:0:NEG:org.apache.commons.io.FilenameUtils@wildcardMatch:1354:0 |==> -1
3023:ROR:>(int,int):!=(int,int):org.apache.commons.io.FilenameUtils@wildcardMatch:1354:backtrack.size() > 0 |==> backtrack.size() != 0
3024:ROR:>(int,int):>=(int,int):org.apache.commons.io.FilenameUtils@wildcardMatch:1354:backtrack.size() > 0 |==> backtrack.size() >= 0
3025:ROR:>(int,int):FALSE(int,int):org.apache.commons.io.FilenameUtils@wildcardMatch:1354:backtrack.size() > 0 |==> false
3026:LVR:FALSE:TRUE:org.apache.commons.io.FilenameUtils@wildcardMatch:1356:false |==> true
3027:LVR:NEG:0:org.apache.commons.io.FilenameUtils@splitOnTokens:1371:-1 |==> 0
3028:LVR:NEG:POS:org.apache.commons.io.FilenameUtils@splitOnTokens:1371:-1 |==> 1
3029:ROR:==(int,int):<=(int,int):org.apache.commons.io.FilenameUtils@splitOnTokens:1371:text.indexOf('?') == -1 |==> text.indexOf('?') <= -1
3030:ROR:==(int,int):>=(int,int):org.apache.commons.io.FilenameUtils@splitOnTokens:1371:text.indexOf('?') == -1 |==> text.indexOf('?') >= -1
3031:ROR:==(int,int):FALSE(int,int):org.apache.commons.io.FilenameUtils@splitOnTokens:1371:text.indexOf('?') == -1 |==> false
3032:LVR:NEG:0:org.apache.commons.io.FilenameUtils@splitOnTokens:1371:-1 |==> 0
3033:LVR:NEG:POS:org.apache.commons.io.FilenameUtils@splitOnTokens:1371:-1 |==> 1
3034:ROR:==(int,int):<=(int,int):org.apache.commons.io.FilenameUtils@splitOnTokens:1371:text.indexOf('*') == -1 |==> text.indexOf('*') <= -1
3035:ROR:==(int,int):>=(int,int):org.apache.commons.io.FilenameUtils@splitOnTokens:1371:text.indexOf('*') == -1 |==> text.indexOf('*') >= -1
3036:ROR:==(int,int):FALSE(int,int):org.apache.commons.io.FilenameUtils@splitOnTokens:1371:text.indexOf('*') == -1 |==> false
3037:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.io.FilenameUtils@splitOnTokens:1371:text.indexOf('?') == -1 && text.indexOf('*') == -1 |==> text.indexOf('?') == -1 == (text.indexOf('*') == -1)
3038:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.io.FilenameUtils@splitOnTokens:1371:text.indexOf('?') == -1 && text.indexOf('*') == -1 |==> false
3039:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.io.FilenameUtils@splitOnTokens:1371:text.indexOf('?') == -1 && text.indexOf('*') == -1 |==> text.indexOf('?') == -1
3040:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.io.FilenameUtils@splitOnTokens:1371:text.indexOf('?') == -1 && text.indexOf('*') == -1 |==> text.indexOf('*') == -1
3041:LVR:0:POS:org.apache.commons.io.FilenameUtils@splitOnTokens:1378:0 |==> 1
3042:LVR:0:NEG:org.apache.commons.io.FilenameUtils@splitOnTokens:1378:0 |==> -1
3043:ROR:<(int,int):!=(int,int):org.apache.commons.io.FilenameUtils@splitOnTokens:1378:i < array.length |==> i != array.length
3044:ROR:<(int,int):<=(int,int):org.apache.commons.io.FilenameUtils@splitOnTokens:1378:i < array.length |==> i <= array.length
3045:ROR:<(int,int):FALSE(int,int):org.apache.commons.io.FilenameUtils@splitOnTokens:1378:i < array.length |==> false
3046:STD:<CALL>:<NO-OP>:org.apache.commons.io.FilenameUtils@splitOnTokens:1381:list.add(buffer.toString()) |==> <NO-OP>
3047:LVR:0:POS:org.apache.commons.io.FilenameUtils@splitOnTokens:1382:0 |==> 1
3048:LVR:0:NEG:org.apache.commons.io.FilenameUtils@splitOnTokens:1382:0 |==> -1
3049:STD:<CALL>:<NO-OP>:org.apache.commons.io.FilenameUtils@splitOnTokens:1382:buffer.setLength(0) |==> <NO-OP>
3050:LVR:0:POS:org.apache.commons.io.FilenameUtils@splitOnTokens:1380:0 |==> 1
3051:LVR:0:NEG:org.apache.commons.io.FilenameUtils@splitOnTokens:1380:0 |==> -1
3052:ROR:!=(int,int):<(int,int):org.apache.commons.io.FilenameUtils@splitOnTokens:1380:buffer.length() != 0 |==> buffer.length() < 0
3053:ROR:!=(int,int):>(int,int):org.apache.commons.io.FilenameUtils@splitOnTokens:1380:buffer.length() != 0 |==> buffer.length() > 0
3054:ROR:!=(int,int):TRUE(int,int):org.apache.commons.io.FilenameUtils@splitOnTokens:1380:buffer.length() != 0 |==> true
3055:STD:<CALL>:<NO-OP>:org.apache.commons.io.FilenameUtils@splitOnTokens:1385:list.add("?") |==> <NO-OP>
3056:STD:<CALL>:<NO-OP>:org.apache.commons.io.FilenameUtils@splitOnTokens:1388:list.add("*") |==> <NO-OP>
3057:LVR:0:POS:org.apache.commons.io.FilenameUtils@splitOnTokens:1387:0 |==> 1
3058:LVR:0:NEG:org.apache.commons.io.FilenameUtils@splitOnTokens:1387:0 |==> -1
3059:ROR:>(int,int):!=(int,int):org.apache.commons.io.FilenameUtils@splitOnTokens:1387:i > 0 |==> i != 0
3060:ROR:>(int,int):>=(int,int):org.apache.commons.io.FilenameUtils@splitOnTokens:1387:i > 0 |==> i >= 0
3061:ROR:>(int,int):FALSE(int,int):org.apache.commons.io.FilenameUtils@splitOnTokens:1387:i > 0 |==> false
3062:LVR:POS:0:org.apache.commons.io.FilenameUtils@splitOnTokens:1387:1 |==> 0
3063:LVR:POS:NEG:org.apache.commons.io.FilenameUtils@splitOnTokens:1387:1 |==> -1
3064:AOR:-(int,int):%(int,int):org.apache.commons.io.FilenameUtils@splitOnTokens:1387:list.size() - 1 |==> list.size() % 1
3065:AOR:-(int,int):*(int,int):org.apache.commons.io.FilenameUtils@splitOnTokens:1387:list.size() - 1 |==> list.size() * 1
3066:AOR:-(int,int):+(int,int):org.apache.commons.io.FilenameUtils@splitOnTokens:1387:list.size() - 1 |==> list.size() + 1
3067:AOR:-(int,int):/(int,int):org.apache.commons.io.FilenameUtils@splitOnTokens:1387:list.size() - 1 |==> list.size() / 1
3068:LVR:FALSE:TRUE:org.apache.commons.io.FilenameUtils@splitOnTokens:1387:false |==> true
3069:ROR:==(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.io.FilenameUtils@splitOnTokens:1387:list.get(list.size() - 1).equals("*") == false |==> false
3070:ROR:==(boolean,boolean):LHS(boolean,boolean):org.apache.commons.io.FilenameUtils@splitOnTokens:1387:list.get(list.size() - 1).equals("*") == false |==> list.get(list.size() - 1).equals("*")
3071:ROR:==(boolean,boolean):RHS(boolean,boolean):org.apache.commons.io.FilenameUtils@splitOnTokens:1387:list.get(list.size() - 1).equals("*") == false |==> false
3072:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.io.FilenameUtils@splitOnTokens:1387:i > 0 && list.get(list.size() - 1).equals("*") == false |==> i > 0 == (list.get(list.size() - 1).equals("*") == false)
3073:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.io.FilenameUtils@splitOnTokens:1387:i > 0 && list.get(list.size() - 1).equals("*") == false |==> false
3074:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.io.FilenameUtils@splitOnTokens:1387:i > 0 && list.get(list.size() - 1).equals("*") == false |==> i > 0
3075:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.io.FilenameUtils@splitOnTokens:1387:i > 0 && list.get(list.size() - 1).equals("*") == false |==> list.get(list.size() - 1).equals("*") == false
3076:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.io.FilenameUtils@splitOnTokens:1386:list.isEmpty() || i > 0 && list.get(list.size() - 1).equals("*") == false |==> list.isEmpty() != (i > 0 && list.get(list.size() - 1).equals("*") == false)
3077:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.io.FilenameUtils@splitOnTokens:1386:list.isEmpty() || i > 0 && list.get(list.size() - 1).equals("*") == false |==> list.isEmpty()
3078:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.io.FilenameUtils@splitOnTokens:1387:list.isEmpty() || i > 0 && list.get(list.size() - 1).equals("*") == false |==> i > 0 && list.get(list.size() - 1).equals("*") == false
3079:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.io.FilenameUtils@splitOnTokens:1386:list.isEmpty() || i > 0 && list.get(list.size() - 1).equals("*") == false |==> true
3080:ROR:==(int,int):<=(int,int):org.apache.commons.io.FilenameUtils@splitOnTokens:1384:array[i] == '?' |==> array[i] <= '?'
3081:ROR:==(int,int):>=(int,int):org.apache.commons.io.FilenameUtils@splitOnTokens:1384:array[i] == '?' |==> array[i] >= '?'
3082:ROR:==(int,int):FALSE(int,int):org.apache.commons.io.FilenameUtils@splitOnTokens:1384:array[i] == '?' |==> false
3083:STD:<CALL>:<NO-OP>:org.apache.commons.io.FilenameUtils@splitOnTokens:1391:buffer.append(array[i]) |==> <NO-OP>
3084:ROR:==(int,int):<=(int,int):org.apache.commons.io.FilenameUtils@splitOnTokens:1379:array[i] == '?' |==> array[i] <= '?'
3085:ROR:==(int,int):>=(int,int):org.apache.commons.io.FilenameUtils@splitOnTokens:1379:array[i] == '?' |==> array[i] >= '?'
3086:ROR:==(int,int):FALSE(int,int):org.apache.commons.io.FilenameUtils@splitOnTokens:1379:array[i] == '?' |==> false
3087:ROR:==(int,int):<=(int,int):org.apache.commons.io.FilenameUtils@splitOnTokens:1379:array[i] == '*' |==> array[i] <= '*'
3088:ROR:==(int,int):>=(int,int):org.apache.commons.io.FilenameUtils@splitOnTokens:1379:array[i] == '*' |==> array[i] >= '*'
3089:ROR:==(int,int):FALSE(int,int):org.apache.commons.io.FilenameUtils@splitOnTokens:1379:array[i] == '*' |==> false
3090:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.io.FilenameUtils@splitOnTokens:1379:array[i] == '?' || array[i] == '*' |==> array[i] == '?' != (array[i] == '*')
3091:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.io.FilenameUtils@splitOnTokens:1379:array[i] == '?' || array[i] == '*' |==> array[i] == '?'
3092:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.io.FilenameUtils@splitOnTokens:1379:array[i] == '?' || array[i] == '*' |==> array[i] == '*'
3093:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.io.FilenameUtils@splitOnTokens:1379:array[i] == '?' || array[i] == '*' |==> true
3094:STD:<CALL>:<NO-OP>:org.apache.commons.io.FilenameUtils@splitOnTokens:1395:list.add(buffer.toString()) |==> <NO-OP>
3095:LVR:0:POS:org.apache.commons.io.FilenameUtils@splitOnTokens:1394:0 |==> 1
3096:LVR:0:NEG:org.apache.commons.io.FilenameUtils@splitOnTokens:1394:0 |==> -1
3097:ROR:!=(int,int):<(int,int):org.apache.commons.io.FilenameUtils@splitOnTokens:1394:buffer.length() != 0 |==> buffer.length() < 0
3098:ROR:!=(int,int):>(int,int):org.apache.commons.io.FilenameUtils@splitOnTokens:1394:buffer.length() != 0 |==> buffer.length() > 0
3099:ROR:!=(int,int):TRUE(int,int):org.apache.commons.io.FilenameUtils@splitOnTokens:1394:buffer.length() != 0 |==> true
3100:LVR:TRUE:FALSE:org.apache.commons.io.IOCase:42:true |==> false
3101:LVR:FALSE:TRUE:org.apache.commons.io.IOCase:47:false |==> true
3102:COR:IOCase.SENSITIVE.name.equals(name):TRUE:org.apache.commons.io.IOCase@forName:81:IOCase.SENSITIVE.name.equals(name) |==> false
3103:COR:IOCase.SENSITIVE.name.equals(name):FALSE:org.apache.commons.io.IOCase@forName:81:IOCase.SENSITIVE.name.equals(name) |==> true
3104:COR:IOCase.INSENSITIVE.name.equals(name):TRUE:org.apache.commons.io.IOCase@forName:84:IOCase.INSENSITIVE.name.equals(name) |==> false
3105:COR:IOCase.INSENSITIVE.name.equals(name):FALSE:org.apache.commons.io.IOCase@forName:84:IOCase.INSENSITIVE.name.equals(name) |==> true
3106:COR:IOCase.SYSTEM.name.equals(name):TRUE:org.apache.commons.io.IOCase@forName:87:IOCase.SYSTEM.name.equals(name) |==> false
3107:COR:IOCase.SYSTEM.name.equals(name):FALSE:org.apache.commons.io.IOCase@forName:87:IOCase.SYSTEM.name.equals(name) |==> true
3108:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.io.IOCase@checkCompareTo:147:str1 == null |==> false
3109:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.io.IOCase@checkCompareTo:147:str2 == null |==> false
3110:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.io.IOCase@checkCompareTo:147:str1 == null || str2 == null |==> str1 == null != (str2 == null)
3111:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.io.IOCase@checkCompareTo:147:str1 == null || str2 == null |==> str1 == null
3112:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.io.IOCase@checkCompareTo:147:str1 == null || str2 == null |==> str2 == null
3113:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.io.IOCase@checkCompareTo:147:str1 == null || str2 == null |==> true
3114:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.io.IOCase@checkEquals:165:str1 == null |==> false
3115:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.io.IOCase@checkEquals:165:str2 == null |==> false
3116:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.io.IOCase@checkEquals:165:str1 == null || str2 == null |==> str1 == null != (str2 == null)
3117:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.io.IOCase@checkEquals:165:str1 == null || str2 == null |==> str1 == null
3118:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.io.IOCase@checkEquals:165:str1 == null || str2 == null |==> str2 == null
3119:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.io.IOCase@checkEquals:165:str1 == null || str2 == null |==> true
3120:LVR:0:POS:org.apache.commons.io.IOCase@checkStartsWith:183:0 |==> 1
3121:LVR:0:NEG:org.apache.commons.io.IOCase@checkStartsWith:183:0 |==> -1
3122:LVR:0:POS:org.apache.commons.io.IOCase@checkStartsWith:183:0 |==> 1
3123:LVR:0:NEG:org.apache.commons.io.IOCase@checkStartsWith:183:0 |==> -1
3124:AOR:-(int,int):%(int,int):org.apache.commons.io.IOCase@checkEndsWith:199:str.length() - endLen |==> str.length() % endLen
3125:AOR:-(int,int):*(int,int):org.apache.commons.io.IOCase@checkEndsWith:199:str.length() - endLen |==> str.length() * endLen
3126:AOR:-(int,int):+(int,int):org.apache.commons.io.IOCase@checkEndsWith:199:str.length() - endLen |==> str.length() + endLen
3127:AOR:-(int,int):/(int,int):org.apache.commons.io.IOCase@checkEndsWith:199:str.length() - endLen |==> str.length() / endLen
3128:LVR:0:POS:org.apache.commons.io.IOCase@checkEndsWith:199:0 |==> 1
3129:LVR:0:NEG:org.apache.commons.io.IOCase@checkEndsWith:199:0 |==> -1
3130:AOR:-(int,int):%(int,int):org.apache.commons.io.IOCase@checkIndexOf:218:str.length() - search.length() |==> str.length() % search.length()
3131:AOR:-(int,int):*(int,int):org.apache.commons.io.IOCase@checkIndexOf:218:str.length() - search.length() |==> str.length() * search.length()
3132:AOR:-(int,int):+(int,int):org.apache.commons.io.IOCase@checkIndexOf:218:str.length() - search.length() |==> str.length() + search.length()
3133:AOR:-(int,int):/(int,int):org.apache.commons.io.IOCase@checkIndexOf:218:str.length() - search.length() |==> str.length() / search.length()
3134:ROR:<=(int,int):<(int,int):org.apache.commons.io.IOCase@checkIndexOf:220:i <= endIndex |==> i < endIndex
3135:ROR:<=(int,int):==(int,int):org.apache.commons.io.IOCase@checkIndexOf:220:i <= endIndex |==> i == endIndex
3136:ROR:<=(int,int):TRUE(int,int):org.apache.commons.io.IOCase@checkIndexOf:220:i <= endIndex |==> true
3137:COR:checkRegionMatches(str, i, search):TRUE:org.apache.commons.io.IOCase@checkIndexOf:221:checkRegionMatches(str, i, search) |==> false
3138:COR:checkRegionMatches(str, i, search):FALSE:org.apache.commons.io.IOCase@checkIndexOf:221:checkRegionMatches(str, i, search) |==> true
3139:ROR:>=(int,int):==(int,int):org.apache.commons.io.IOCase@checkIndexOf:219:endIndex >= strStartIndex |==> endIndex == strStartIndex
3140:ROR:>=(int,int):>(int,int):org.apache.commons.io.IOCase@checkIndexOf:219:endIndex >= strStartIndex |==> endIndex > strStartIndex
3141:ROR:>=(int,int):TRUE(int,int):org.apache.commons.io.IOCase@checkIndexOf:219:endIndex >= strStartIndex |==> true
3142:LVR:NEG:0:org.apache.commons.io.IOCase@checkIndexOf:226:-1 |==> 0
3143:LVR:NEG:POS:org.apache.commons.io.IOCase@checkIndexOf:226:-1 |==> 1
3144:LVR:0:POS:org.apache.commons.io.IOCase@checkRegionMatches:242:0 |==> 1
3145:LVR:0:NEG:org.apache.commons.io.IOCase@checkRegionMatches:242:0 |==> -1
3146:LVR:0:POS:org.apache.commons.io.HexDump@dump:76:0 |==> 1
3147:LVR:0:NEG:org.apache.commons.io.HexDump@dump:76:0 |==> -1
3148:ROR:<(int,int):!=(int,int):org.apache.commons.io.HexDump@dump:76:index < 0 |==> index != 0
3149:ROR:<(int,int):<=(int,int):org.apache.commons.io.HexDump@dump:76:index < 0 |==> index <= 0
3150:ROR:<(int,int):FALSE(int,int):org.apache.commons.io.HexDump@dump:76:index < 0 |==> false
3151:ROR:>=(int,int):==(int,int):org.apache.commons.io.HexDump@dump:76:index >= data.length |==> index == data.length
3152:ROR:>=(int,int):>(int,int):org.apache.commons.io.HexDump@dump:76:index >= data.length |==> index > data.length
3153:ROR:>=(int,int):TRUE(int,int):org.apache.commons.io.HexDump@dump:76:index >= data.length |==> true
3154:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.io.HexDump@dump:76:index < 0 || index >= data.length |==> index < 0 != index >= data.length
3155:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.io.HexDump@dump:76:index < 0 || index >= data.length |==> index < 0
3156:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.io.HexDump@dump:76:index < 0 || index >= data.length |==> index >= data.length
3157:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.io.HexDump@dump:76:index < 0 || index >= data.length |==> true
3158:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.io.HexDump@dump:81:stream == null |==> false
3159:AOR:+(long,long):%(long,long):org.apache.commons.io.HexDump@dump:84:offset + index |==> offset % index
3160:AOR:+(long,long):*(long,long):org.apache.commons.io.HexDump@dump:84:offset + index |==> offset * index
3161:AOR:+(long,long):-(long,long):org.apache.commons.io.HexDump@dump:84:offset + index |==> offset - index
3162:AOR:+(long,long):/(long,long):org.apache.commons.io.HexDump@dump:84:offset + index |==> offset / index
3163:LVR:POS:0:org.apache.commons.io.HexDump@dump:85:74 |==> 0
3164:LVR:POS:NEG:org.apache.commons.io.HexDump@dump:85:74 |==> -74
3165:ROR:<(int,int):!=(int,int):org.apache.commons.io.HexDump@dump:87:j < data.length |==> j != data.length
3166:ROR:<(int,int):<=(int,int):org.apache.commons.io.HexDump@dump:87:j < data.length |==> j <= data.length
3167:ROR:<(int,int):FALSE(int,int):org.apache.commons.io.HexDump@dump:87:j < data.length |==> false
3168:LVR:POS:0:org.apache.commons.io.HexDump@dump:87:16 |==> 0
3169:LVR:POS:NEG:org.apache.commons.io.HexDump@dump:87:16 |==> -16
3170:AOR:-(int,int):%(int,int):org.apache.commons.io.HexDump@dump:88:data.length - j |==> data.length % j
3171:AOR:-(int,int):*(int,int):org.apache.commons.io.HexDump@dump:88:data.length - j |==> data.length * j
3172:AOR:-(int,int):+(int,int):org.apache.commons.io.HexDump@dump:88:data.length - j |==> data.length + j
3173:AOR:-(int,int):/(int,int):org.apache.commons.io.HexDump@dump:88:data.length - j |==> data.length / j
3174:LVR:POS:0:org.apache.commons.io.HexDump@dump:91:16 |==> 0
3175:LVR:POS:NEG:org.apache.commons.io.HexDump@dump:91:16 |==> -16
3176:LVR:POS:0:org.apache.commons.io.HexDump@dump:90:16 |==> 0
3177:LVR:POS:NEG:org.apache.commons.io.HexDump@dump:90:16 |==> -16
3178:ROR:>(int,int):!=(int,int):org.apache.commons.io.HexDump@dump:90:chars_read > 16 |==> chars_read != 16
3179:ROR:>(int,int):>=(int,int):org.apache.commons.io.HexDump@dump:90:chars_read > 16 |==> chars_read >= 16
3180:ROR:>(int,int):FALSE(int,int):org.apache.commons.io.HexDump@dump:90:chars_read > 16 |==> false
3181:STD:<CALL>:<NO-OP>:org.apache.commons.io.HexDump@dump:93:dump(buffer, display_offset).append(' ') |==> <NO-OP>
3182:LVR:0:POS:org.apache.commons.io.HexDump@dump:94:0 |==> 1
3183:LVR:0:NEG:org.apache.commons.io.HexDump@dump:94:0 |==> -1
3184:LVR:POS:0:org.apache.commons.io.HexDump@dump:94:16 |==> 0
3185:LVR:POS:NEG:org.apache.commons.io.HexDump@dump:94:16 |==> -16
3186:ROR:<(int,int):!=(int,int):org.apache.commons.io.HexDump@dump:94:k < 16 |==> k != 16
3187:ROR:<(int,int):<=(int,int):org.apache.commons.io.HexDump@dump:94:k < 16 |==> k <= 16
3188:ROR:<(int,int):FALSE(int,int):org.apache.commons.io.HexDump@dump:94:k < 16 |==> false
3189:AOR:+(int,int):%(int,int):org.apache.commons.io.HexDump@dump:96:k + j |==> k % j
3190:AOR:+(int,int):*(int,int):org.apache.commons.io.HexDump@dump:96:k + j |==> k * j
3191:AOR:+(int,int):-(int,int):org.apache.commons.io.HexDump@dump:96:k + j |==> k - j
3192:AOR:+(int,int):/(int,int):org.apache.commons.io.HexDump@dump:96:k + j |==> k / j
3193:STD:<CALL>:<NO-OP>:org.apache.commons.io.HexDump@dump:96:dump(buffer, data[k + j]) |==> <NO-OP>
3194:STD:<CALL>:<NO-OP>:org.apache.commons.io.HexDump@dump:98:buffer.append("  ") |==> <NO-OP>
3195:ROR:<(int,int):!=(int,int):org.apache.commons.io.HexDump@dump:95:k < chars_read |==> k != chars_read
3196:ROR:<(int,int):<=(int,int):org.apache.commons.io.HexDump@dump:95:k < chars_read |==> k <= chars_read
3197:ROR:<(int,int):FALSE(int,int):org.apache.commons.io.HexDump@dump:95:k < chars_read |==> false
3198:STD:<CALL>:<NO-OP>:org.apache.commons.io.HexDump@dump:100:buffer.append(' ') |==> <NO-OP>
3199:LVR:0:POS:org.apache.commons.io.HexDump@dump:102:0 |==> 1
3200:LVR:0:NEG:org.apache.commons.io.HexDump@dump:102:0 |==> -1
3201:ROR:<(int,int):!=(int,int):org.apache.commons.io.HexDump@dump:102:k < chars_read |==> k != chars_read
3202:ROR:<(int,int):<=(int,int):org.apache.commons.io.HexDump@dump:102:k < chars_read |==> k <= chars_read
3203:ROR:<(int,int):FALSE(int,int):org.apache.commons.io.HexDump@dump:102:k < chars_read |==> false
3204:AOR:+(int,int):%(int,int):org.apache.commons.io.HexDump@dump:104:k + j |==> k % j
3205:AOR:+(int,int):*(int,int):org.apache.commons.io.HexDump@dump:104:k + j |==> k * j
3206:AOR:+(int,int):-(int,int):org.apache.commons.io.HexDump@dump:104:k + j |==> k - j
3207:AOR:+(int,int):/(int,int):org.apache.commons.io.HexDump@dump:104:k + j |==> k / j
3208:STD:<CALL>:<NO-OP>:org.apache.commons.io.HexDump@dump:104:buffer.append((char)data[k + j]) |==> <NO-OP>
3209:STD:<CALL>:<NO-OP>:org.apache.commons.io.HexDump@dump:106:buffer.append('.') |==> <NO-OP>
3210:AOR:+(int,int):%(int,int):org.apache.commons.io.HexDump@dump:103:k + j |==> k % j
3211:AOR:+(int,int):*(int,int):org.apache.commons.io.HexDump@dump:103:k + j |==> k * j
3212:AOR:+(int,int):-(int,int):org.apache.commons.io.HexDump@dump:103:k + j |==> k - j
3213:AOR:+(int,int):/(int,int):org.apache.commons.io.HexDump@dump:103:k + j |==> k / j
3214:ROR:>=(int,int):==(int,int):org.apache.commons.io.HexDump@dump:103:data[k + j] >= ' ' |==> data[k + j] == ' '
3215:ROR:>=(int,int):>(int,int):org.apache.commons.io.HexDump@dump:103:data[k + j] >= ' ' |==> data[k + j] > ' '
3216:ROR:>=(int,int):TRUE(int,int):org.apache.commons.io.HexDump@dump:103:data[k + j] >= ' ' |==> true
3217:AOR:+(int,int):%(int,int):org.apache.commons.io.HexDump@dump:103:k + j |==> k % j
3218:AOR:+(int,int):*(int,int):org.apache.commons.io.HexDump@dump:103:k + j |==> k * j
3219:AOR:+(int,int):-(int,int):org.apache.commons.io.HexDump@dump:103:k + j |==> k - j
3220:AOR:+(int,int):/(int,int):org.apache.commons.io.HexDump@dump:103:k + j |==> k / j
3221:LVR:POS:0:org.apache.commons.io.HexDump@dump:103:127 |==> 0
3222:LVR:POS:NEG:org.apache.commons.io.HexDump@dump:103:127 |==> -127
3223:ROR:<(int,int):!=(int,int):org.apache.commons.io.HexDump@dump:103:data[k + j] < 127 |==> data[k + j] != 127
3224:ROR:<(int,int):<=(int,int):org.apache.commons.io.HexDump@dump:103:data[k + j] < 127 |==> data[k + j] <= 127
3225:ROR:<(int,int):FALSE(int,int):org.apache.commons.io.HexDump@dump:103:data[k + j] < 127 |==> false
3226:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.io.HexDump@dump:103:data[k + j] >= ' ' && data[k + j] < 127 |==> data[k + j] >= ' ' == data[k + j] < 127
3227:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.io.HexDump@dump:103:data[k + j] >= ' ' && data[k + j] < 127 |==> false
3228:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.io.HexDump@dump:103:data[k + j] >= ' ' && data[k + j] < 127 |==> data[k + j] >= ' '
3229:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.io.HexDump@dump:103:data[k + j] >= ' ' && data[k + j] < 127 |==> data[k + j] < 127
3230:STD:<CALL>:<NO-OP>:org.apache.commons.io.HexDump@dump:109:buffer.append(EOL) |==> <NO-OP>
3231:STD:<CALL>:<NO-OP>:org.apache.commons.io.HexDump@dump:110:stream.write(buffer.toString().getBytes()) |==> <NO-OP>
3232:STD:<CALL>:<NO-OP>:org.apache.commons.io.HexDump@dump:111:stream.flush() |==> <NO-OP>
3233:LVR:0:POS:org.apache.commons.io.HexDump@dump:112:0 |==> 1
3234:LVR:0:NEG:org.apache.commons.io.HexDump@dump:112:0 |==> -1
3235:STD:<CALL>:<NO-OP>:org.apache.commons.io.HexDump@dump:112:buffer.setLength(0) |==> <NO-OP>
3236:STD:<ASSIGN>:<NO-OP>:org.apache.commons.io.HexDump@dump:113:display_offset += chars_read |==> <NO-OP>
3237:LVR:POS:0:org.apache.commons.io.HexDump:129:28 |==> 0
3238:LVR:POS:NEG:org.apache.commons.io.HexDump:129:28 |==> -28
3239:LVR:POS:0:org.apache.commons.io.HexDump:129:24 |==> 0
3240:LVR:POS:NEG:org.apache.commons.io.HexDump:129:24 |==> -24
3241:LVR:POS:0:org.apache.commons.io.HexDump:129:20 |==> 0
3242:LVR:POS:NEG:org.apache.commons.io.HexDump:129:20 |==> -20
3243:LVR:POS:0:org.apache.commons.io.HexDump:129:16 |==> 0
3244:LVR:POS:NEG:org.apache.commons.io.HexDump:129:16 |==> -16
3245:LVR:POS:0:org.apache.commons.io.HexDump:129:12 |==> 0
3246:LVR:POS:NEG:org.apache.commons.io.HexDump:129:12 |==> -12
3247:LVR:POS:0:org.apache.commons.io.HexDump:129:8 |==> 0
3248:LVR:POS:NEG:org.apache.commons.io.HexDump:129:8 |==> -8
3249:LVR:POS:0:org.apache.commons.io.HexDump:129:4 |==> 0
3250:LVR:POS:NEG:org.apache.commons.io.HexDump:129:4 |==> -4
3251:LVR:0:POS:org.apache.commons.io.HexDump:129:0 |==> 1
3252:LVR:0:NEG:org.apache.commons.io.HexDump:129:0 |==> -1
3253:LVR:0:POS:org.apache.commons.io.HexDump@dump:140:0 |==> 1
3254:LVR:0:NEG:org.apache.commons.io.HexDump@dump:140:0 |==> -1
3255:LVR:POS:0:org.apache.commons.io.HexDump@dump:140:8 |==> 0
3256:LVR:POS:NEG:org.apache.commons.io.HexDump@dump:140:8 |==> -8
3257:ROR:<(int,int):!=(int,int):org.apache.commons.io.HexDump@dump:140:j < 8 |==> j != 8
3258:ROR:<(int,int):<=(int,int):org.apache.commons.io.HexDump@dump:140:j < 8 |==> j <= 8
3259:ROR:<(int,int):FALSE(int,int):org.apache.commons.io.HexDump@dump:140:j < 8 |==> false
3260:SOR:>>(long,int):<<(long,int):org.apache.commons.io.HexDump@dump:142:value >> _shifts[j] |==> value << _shifts[j]
3261:SOR:>>(long,int):>>>(long,int):org.apache.commons.io.HexDump@dump:142:value >> _shifts[j] |==> value >>> _shifts[j]
3262:LVR:POS:0:org.apache.commons.io.HexDump@dump:142:15 |==> 0
3263:LVR:POS:NEG:org.apache.commons.io.HexDump@dump:142:15 |==> -15
3264:LOR:&(int,int):^(int,int):org.apache.commons.io.HexDump@dump:142:(int)(value >> _shifts[j]) & 15 |==> (int)(value >> _shifts[j]) ^ 15
3265:LOR:&(int,int):|(int,int):org.apache.commons.io.HexDump@dump:142:(int)(value >> _shifts[j]) & 15 |==> (int)(value >> _shifts[j]) | 15
3266:STD:<CALL>:<NO-OP>:org.apache.commons.io.HexDump@dump:141:_lbuffer.append(_hexcodes[(int)(value >> _shifts[j]) & 15]) |==> <NO-OP>
3267:LVR:0:POS:org.apache.commons.io.HexDump@dump:155:0 |==> 1
3268:LVR:0:NEG:org.apache.commons.io.HexDump@dump:155:0 |==> -1
3269:LVR:POS:0:org.apache.commons.io.HexDump@dump:155:2 |==> 0
3270:LVR:POS:NEG:org.apache.commons.io.HexDump@dump:155:2 |==> -2
3271:ROR:<(int,int):!=(int,int):org.apache.commons.io.HexDump@dump:155:j < 2 |==> j != 2
3272:ROR:<(int,int):<=(int,int):org.apache.commons.io.HexDump@dump:155:j < 2 |==> j <= 2
3273:ROR:<(int,int):FALSE(int,int):org.apache.commons.io.HexDump@dump:155:j < 2 |==> false
3274:LVR:POS:0:org.apache.commons.io.HexDump@dump:156:6 |==> 0
3275:LVR:POS:NEG:org.apache.commons.io.HexDump@dump:156:6 |==> -6
3276:AOR:+(int,int):%(int,int):org.apache.commons.io.HexDump@dump:156:j + 6 |==> j % 6
3277:AOR:+(int,int):*(int,int):org.apache.commons.io.HexDump@dump:156:j + 6 |==> j * 6
3278:AOR:+(int,int):-(int,int):org.apache.commons.io.HexDump@dump:156:j + 6 |==> j - 6
3279:AOR:+(int,int):/(int,int):org.apache.commons.io.HexDump@dump:156:j + 6 |==> j / 6
3280:SOR:>>(int,int):<<(int,int):org.apache.commons.io.HexDump@dump:156:value >> _shifts[j + 6] |==> value << _shifts[j + 6]
3281:SOR:>>(int,int):>>>(int,int):org.apache.commons.io.HexDump@dump:156:value >> _shifts[j + 6] |==> value >>> _shifts[j + 6]
3282:LVR:POS:0:org.apache.commons.io.HexDump@dump:156:15 |==> 0
3283:LVR:POS:NEG:org.apache.commons.io.HexDump@dump:156:15 |==> -15
3284:LOR:&(int,int):^(int,int):org.apache.commons.io.HexDump@dump:156:value >> _shifts[j + 6] & 15 |==> value >> _shifts[j + 6] ^ 15
3285:LOR:&(int,int):|(int,int):org.apache.commons.io.HexDump@dump:156:value >> _shifts[j + 6] & 15 |==> value >> _shifts[j + 6] | 15
3286:STD:<CALL>:<NO-OP>:org.apache.commons.io.HexDump@dump:156:_cbuffer.append(_hexcodes[value >> _shifts[j + 6] & 15]) |==> <NO-OP>
3287:STD:<CALL>:<NO-OP>:org.apache.commons.io.IOExceptionWithCause@<init>:50:this.initCause(cause) |==> <NO-OP>
3288:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.io.IOExceptionWithCause@<init>:64:cause == null |==> false
3289:STD:<CALL>:<NO-OP>:org.apache.commons.io.IOExceptionWithCause@<init>:65:this.initCause(cause) |==> <NO-OP>
3290:LVR:POS:0:org.apache.commons.io.IOUtils:117:4 |==> 0
3291:LVR:POS:NEG:org.apache.commons.io.IOUtils:117:4 |==> -4
3292:STD:<CALL>:<NO-OP>:org.apache.commons.io.IOUtils:119:out.println() |==> <NO-OP>
3293:STD:<CALL>:<NO-OP>:org.apache.commons.io.IOUtils:121:out.close() |==> <NO-OP>
3294:STD:<CALL>:<NO-OP>:org.apache.commons.io.IOUtils@close:165:((HttpURLConnection)conn).disconnect() |==> <NO-OP>
3295:STD:<CALL>:<NO-OP>:org.apache.commons.io.IOUtils@closeQuietly:193:closeQuietly((Closeable)input) |==> <NO-OP>
3296:STD:<CALL>:<NO-OP>:org.apache.commons.io.IOUtils@closeQuietly:219:closeQuietly((Closeable)output) |==> <NO-OP>
3297:STD:<CALL>:<NO-OP>:org.apache.commons.io.IOUtils@closeQuietly:246:closeQuietly((Closeable)input) |==> <NO-OP>
3298:STD:<CALL>:<NO-OP>:org.apache.commons.io.IOUtils@closeQuietly:274:closeQuietly((Closeable)output) |==> <NO-OP>
3299:STD:<CALL>:<NO-OP>:org.apache.commons.io.IOUtils@closeQuietly:303:closeable.close() |==> <NO-OP>
3300:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.apache.commons.io.IOUtils@closeQuietly:302:closeable != null |==> true
3301:STD:<CALL>:<NO-OP>:org.apache.commons.io.IOUtils@closeQuietly:336:sock.close() |==> <NO-OP>
3302:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.apache.commons.io.IOUtils@closeQuietly:334:sock != null |==> true
3303:STD:<CALL>:<NO-OP>:org.apache.commons.io.IOUtils@closeQuietly:369:selector.close() |==> <NO-OP>
3304:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.apache.commons.io.IOUtils@closeQuietly:367:selector != null |==> true
3305:STD:<CALL>:<NO-OP>:org.apache.commons.io.IOUtils@closeQuietly:402:sock.close() |==> <NO-OP>
3306:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.apache.commons.io.IOUtils@closeQuietly:400:sock != null |==> true
3307:STD:<CALL>:<NO-OP>:org.apache.commons.io.IOUtils@toByteArray:462:copy(input, output) |==> <NO-OP>
3308:ROR:>(long,long):!=(long,long):org.apache.commons.io.IOUtils@toByteArray:484:size > Integer.MAX_VALUE |==> size != Integer.MAX_VALUE
3309:ROR:>(long,long):>=(long,long):org.apache.commons.io.IOUtils@toByteArray:484:size > Integer.MAX_VALUE |==> size >= Integer.MAX_VALUE
3310:ROR:>(long,long):FALSE(long,long):org.apache.commons.io.IOUtils@toByteArray:484:size > Integer.MAX_VALUE |==> false
3311:LVR:0:POS:org.apache.commons.io.IOUtils@toByteArray:504:0 |==> 1
3312:LVR:0:NEG:org.apache.commons.io.IOUtils@toByteArray:504:0 |==> -1
3313:ROR:<(int,int):!=(int,int):org.apache.commons.io.IOUtils@toByteArray:504:size < 0 |==> size != 0
3314:ROR:<(int,int):<=(int,int):org.apache.commons.io.IOUtils@toByteArray:504:size < 0 |==> size <= 0
3315:ROR:<(int,int):FALSE(int,int):org.apache.commons.io.IOUtils@toByteArray:504:size < 0 |==> false
3316:LVR:0:POS:org.apache.commons.io.IOUtils@toByteArray:509:0 |==> 1
3317:LVR:0:NEG:org.apache.commons.io.IOUtils@toByteArray:509:0 |==> -1
3318:LVR:0:POS:org.apache.commons.io.IOUtils@toByteArray:508:0 |==> 1
3319:LVR:0:NEG:org.apache.commons.io.IOUtils@toByteArray:508:0 |==> -1
3320:ROR:==(int,int):<=(int,int):org.apache.commons.io.IOUtils@toByteArray:508:size == 0 |==> size <= 0
3321:ROR:==(int,int):>=(int,int):org.apache.commons.io.IOUtils@toByteArray:508:size == 0 |==> size >= 0
3322:ROR:==(int,int):FALSE(int,int):org.apache.commons.io.IOUtils@toByteArray:508:size == 0 |==> false
3323:LVR:0:POS:org.apache.commons.io.IOUtils@toByteArray:513:0 |==> 1
3324:LVR:0:NEG:org.apache.commons.io.IOUtils@toByteArray:513:0 |==> -1
3325:ROR:<(int,int):!=(int,int):org.apache.commons.io.IOUtils@toByteArray:516:offset < size |==> offset != size
3326:ROR:<(int,int):<=(int,int):org.apache.commons.io.IOUtils@toByteArray:516:offset < size |==> offset <= size
3327:ROR:<(int,int):FALSE(int,int):org.apache.commons.io.IOUtils@toByteArray:516:offset < size |==> false
3328:AOR:-(int,int):%(int,int):org.apache.commons.io.IOUtils@toByteArray:516:size - offset |==> size % offset
3329:AOR:-(int,int):*(int,int):org.apache.commons.io.IOUtils@toByteArray:516:size - offset |==> size * offset
3330:AOR:-(int,int):+(int,int):org.apache.commons.io.IOUtils@toByteArray:516:size - offset |==> size + offset
3331:AOR:-(int,int):/(int,int):org.apache.commons.io.IOUtils@toByteArray:516:size - offset |==> size / offset
3332:ROR:!=(int,int):<(int,int):org.apache.commons.io.IOUtils@toByteArray:516:(readed = input.read(data, offset, size - offset)) != EOF |==> (readed = input.read(data, offset, size - offset)) < EOF
3333:ROR:!=(int,int):>(int,int):org.apache.commons.io.IOUtils@toByteArray:516:(readed = input.read(data, offset, size - offset)) != EOF |==> (readed = input.read(data, offset, size - offset)) > EOF
3334:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.io.IOUtils@toByteArray:516:offset < size && (readed = input.read(data, offset, size - offset)) != EOF |==> offset < size == ((readed = input.read(data, offset, size - offset)) != EOF)
3335:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.io.IOUtils@toByteArray:516:offset < size && (readed = input.read(data, offset, size - offset)) != EOF |==> (readed = input.read(data, offset, size - offset)) != EOF
3336:STD:<ASSIGN>:<NO-OP>:org.apache.commons.io.IOUtils@toByteArray:517:offset += readed |==> <NO-OP>
3337:ROR:!=(int,int):<(int,int):org.apache.commons.io.IOUtils@toByteArray:520:offset != size |==> offset < size
3338:ROR:!=(int,int):>(int,int):org.apache.commons.io.IOUtils@toByteArray:520:offset != size |==> offset > size
3339:ROR:!=(int,int):TRUE(int,int):org.apache.commons.io.IOUtils@toByteArray:520:offset != size |==> true
3340:STD:<CALL>:<NO-OP>:org.apache.commons.io.IOUtils@toByteArray:559:copy(input, output, encoding) |==> <NO-OP>
3341:STD:<CALL>:<NO-OP>:org.apache.commons.io.IOUtils@toByteArray:637:close(conn) |==> <NO-OP>
3342:STD:<CALL>:<NO-OP>:org.apache.commons.io.IOUtils@toByteArray:658:inputStream.close() |==> <NO-OP>
3343:STD:<CALL>:<NO-OP>:org.apache.commons.io.IOUtils@toCharArray:698:copy(is, output, encoding) |==> <NO-OP>
3344:STD:<CALL>:<NO-OP>:org.apache.commons.io.IOUtils@toCharArray:740:copy(input, sw) |==> <NO-OP>
3345:STD:<CALL>:<NO-OP>:org.apache.commons.io.IOUtils@toString:778:copy(input, sw, encoding) |==> <NO-OP>
3346:STD:<CALL>:<NO-OP>:org.apache.commons.io.IOUtils@toString:819:copy(input, sw) |==> <NO-OP>
3347:STD:<CALL>:<NO-OP>:org.apache.commons.io.IOUtils@toString:898:inputStream.close() |==> <NO-OP>
3348:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.apache.commons.io.IOUtils@readLines:1031:line != null |==> true
3349:STD:<CALL>:<NO-OP>:org.apache.commons.io.IOUtils@readLines:1032:list.add(line) |==> <NO-OP>
3350:STD:<CALL>:<NO-OP>:org.apache.commons.io.IOUtils@write:1250:output.write(data) |==> <NO-OP>
3351:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.apache.commons.io.IOUtils@write:1249:data != null |==> true
3352:STD:<CALL>:<NO-OP>:org.apache.commons.io.IOUtils@write:1268:write(data, output, Charset.defaultCharset()) |==> <NO-OP>
3353:STD:<CALL>:<NO-OP>:org.apache.commons.io.IOUtils@write:1287:output.write(new String(data, Charsets.toCharset(encoding))) |==> <NO-OP>
3354:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.apache.commons.io.IOUtils@write:1286:data != null |==> true
3355:STD:<CALL>:<NO-OP>:org.apache.commons.io.IOUtils@write:1312:write(data, output, Charsets.toCharset(encoding)) |==> <NO-OP>
3356:STD:<CALL>:<NO-OP>:org.apache.commons.io.IOUtils@write:1330:output.write(data) |==> <NO-OP>
3357:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.apache.commons.io.IOUtils@write:1329:data != null |==> true
3358:STD:<CALL>:<NO-OP>:org.apache.commons.io.IOUtils@write:1350:write(data, output, Charset.defaultCharset()) |==> <NO-OP>
3359:STD:<CALL>:<NO-OP>:org.apache.commons.io.IOUtils@write:1370:output.write(new String(data).getBytes(Charsets.toCharset(encoding))) |==> <NO-OP>
3360:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.apache.commons.io.IOUtils@write:1369:data != null |==> true
3361:STD:<CALL>:<NO-OP>:org.apache.commons.io.IOUtils@write:1397:write(data, output, Charsets.toCharset(encoding)) |==> <NO-OP>
3362:STD:<CALL>:<NO-OP>:org.apache.commons.io.IOUtils@write:1413:write(data.toString(), output) |==> <NO-OP>
3363:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.apache.commons.io.IOUtils@write:1412:data != null |==> true
3364:STD:<CALL>:<NO-OP>:org.apache.commons.io.IOUtils@write:1432:write(data, output, Charset.defaultCharset()) |==> <NO-OP>
3365:STD:<CALL>:<NO-OP>:org.apache.commons.io.IOUtils@write:1450:write(data.toString(), output, encoding) |==> <NO-OP>
3366:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.apache.commons.io.IOUtils@write:1449:data != null |==> true
3367:STD:<CALL>:<NO-OP>:org.apache.commons.io.IOUtils@write:1474:write(data, output, Charsets.toCharset(encoding)) |==> <NO-OP>
3368:STD:<CALL>:<NO-OP>:org.apache.commons.io.IOUtils@write:1490:output.write(data) |==> <NO-OP>
3369:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.apache.commons.io.IOUtils@write:1489:data != null |==> true
3370:STD:<CALL>:<NO-OP>:org.apache.commons.io.IOUtils@write:1509:write(data, output, Charset.defaultCharset()) |==> <NO-OP>
3371:STD:<CALL>:<NO-OP>:org.apache.commons.io.IOUtils@write:1527:output.write(data.getBytes(Charsets.toCharset(encoding))) |==> <NO-OP>
3372:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.apache.commons.io.IOUtils@write:1526:data != null |==> true
3373:STD:<CALL>:<NO-OP>:org.apache.commons.io.IOUtils@write:1552:write(data, output, Charsets.toCharset(encoding)) |==> <NO-OP>
3374:STD:<CALL>:<NO-OP>:org.apache.commons.io.IOUtils@write:1571:output.write(data.toString()) |==> <NO-OP>
3375:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.apache.commons.io.IOUtils@write:1570:data != null |==> true
3376:STD:<CALL>:<NO-OP>:org.apache.commons.io.IOUtils@write:1592:write(data, output, (String)null) |==> <NO-OP>
3377:STD:<CALL>:<NO-OP>:org.apache.commons.io.IOUtils@write:1618:output.write(data.toString().getBytes(Charsets.toCharset(encoding))) |==> <NO-OP>
3378:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.apache.commons.io.IOUtils@write:1617:data != null |==> true
3379:STD:<CALL>:<NO-OP>:org.apache.commons.io.IOUtils@writeLines:1638:writeLines(lines, lineEnding, output, Charset.defaultCharset()) |==> <NO-OP>
3380:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.io.IOUtils@writeLines:1656:lines == null |==> false
3381:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.io.IOUtils@writeLines:1659:lineEnding == null |==> false
3382:STD:<CALL>:<NO-OP>:org.apache.commons.io.IOUtils@writeLines:1665:output.write(line.toString().getBytes(cs)) |==> <NO-OP>
3383:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.apache.commons.io.IOUtils@writeLines:1664:line != null |==> true
3384:STD:<CALL>:<NO-OP>:org.apache.commons.io.IOUtils@writeLines:1667:output.write(lineEnding.getBytes(cs)) |==> <NO-OP>
3385:STD:<CALL>:<NO-OP>:org.apache.commons.io.IOUtils@writeLines:1692:writeLines(lines, lineEnding, output, Charsets.toCharset(encoding)) |==> <NO-OP>
3386:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.io.IOUtils@writeLines:1708:lines == null |==> false
3387:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.io.IOUtils@writeLines:1711:lineEnding == null |==> false
3388:STD:<CALL>:<NO-OP>:org.apache.commons.io.IOUtils@writeLines:1716:writer.write(line.toString()) |==> <NO-OP>
3389:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.apache.commons.io.IOUtils@writeLines:1715:line != null |==> true
3390:STD:<CALL>:<NO-OP>:org.apache.commons.io.IOUtils@writeLines:1718:writer.write(lineEnding) |==> <NO-OP>
3391:LVR:NEG:0:org.apache.commons.io.IOUtils@copy:1746:-1 |==> 0
3392:LVR:NEG:POS:org.apache.commons.io.IOUtils@copy:1746:-1 |==> 1
3393:ROR:>(long,long):!=(long,long):org.apache.commons.io.IOUtils@copy:1745:count > Integer.MAX_VALUE |==> count != Integer.MAX_VALUE
3394:ROR:>(long,long):>=(long,long):org.apache.commons.io.IOUtils@copy:1745:count > Integer.MAX_VALUE |==> count >= Integer.MAX_VALUE
3395:ROR:>(long,long):FALSE(long,long):org.apache.commons.io.IOUtils@copy:1745:count > Integer.MAX_VALUE |==> false
3396:LVR:0:POS:org.apache.commons.io.IOUtils@copyLarge:1790:0 |==> 1
3397:LVR:0:NEG:org.apache.commons.io.IOUtils@copyLarge:1790:0 |==> -1
3398:LVR:0:POS:org.apache.commons.io.IOUtils@copyLarge:1791:0 |==> 1
3399:LVR:0:NEG:org.apache.commons.io.IOUtils@copyLarge:1791:0 |==> -1
3400:ROR:!=(int,int):<(int,int):org.apache.commons.io.IOUtils@copyLarge:1792:EOF != (n = input.read(buffer)) |==> EOF < (n = input.read(buffer))
3401:ROR:!=(int,int):>(int,int):org.apache.commons.io.IOUtils@copyLarge:1792:EOF != (n = input.read(buffer)) |==> EOF > (n = input.read(buffer))
3402:ROR:!=(int,int):TRUE(int,int):org.apache.commons.io.IOUtils@copyLarge:1792:EOF != (n = input.read(buffer)) |==> true
3403:LVR:0:POS:org.apache.commons.io.IOUtils@copyLarge:1793:0 |==> 1
3404:LVR:0:NEG:org.apache.commons.io.IOUtils@copyLarge:1793:0 |==> -1
3405:STD:<CALL>:<NO-OP>:org.apache.commons.io.IOUtils@copyLarge:1793:output.write(buffer, 0, n) |==> <NO-OP>
3406:STD:<ASSIGN>:<NO-OP>:org.apache.commons.io.IOUtils@copyLarge:1794:count += n |==> <NO-OP>
3407:STD:<CALL>:<NO-OP>:org.apache.commons.io.IOUtils@copyLarge:1846:skipFully(input, inputOffset) |==> <NO-OP>
3408:LVR:0:POS:org.apache.commons.io.IOUtils@copyLarge:1845:0 |==> 1
3409:LVR:0:NEG:org.apache.commons.io.IOUtils@copyLarge:1845:0 |==> -1
3410:ROR:>(long,long):!=(long,long):org.apache.commons.io.IOUtils@copyLarge:1845:inputOffset > 0 |==> inputOffset != 0
3411:ROR:>(long,long):>=(long,long):org.apache.commons.io.IOUtils@copyLarge:1845:inputOffset > 0 |==> inputOffset >= 0
3412:ROR:>(long,long):FALSE(long,long):org.apache.commons.io.IOUtils@copyLarge:1845:inputOffset > 0 |==> false
3413:LVR:0:POS:org.apache.commons.io.IOUtils@copyLarge:1849:0 |==> 1
3414:LVR:0:NEG:org.apache.commons.io.IOUtils@copyLarge:1849:0 |==> -1
3415:LVR:0:POS:org.apache.commons.io.IOUtils@copyLarge:1848:0 |==> 1
3416:LVR:0:NEG:org.apache.commons.io.IOUtils@copyLarge:1848:0 |==> -1
3417:ROR:==(long,long):<=(long,long):org.apache.commons.io.IOUtils@copyLarge:1848:length == 0 |==> length <= 0
3418:ROR:==(long,long):>=(long,long):org.apache.commons.io.IOUtils@copyLarge:1848:length == 0 |==> length >= 0
3419:ROR:==(long,long):FALSE(long,long):org.apache.commons.io.IOUtils@copyLarge:1848:length == 0 |==> false
3420:LVR:0:POS:org.apache.commons.io.IOUtils@copyLarge:1853:0 |==> 1
3421:LVR:0:NEG:org.apache.commons.io.IOUtils@copyLarge:1853:0 |==> -1
3422:ROR:>(long,long):!=(long,long):org.apache.commons.io.IOUtils@copyLarge:1853:length > 0 |==> length != 0
3423:ROR:>(long,long):>=(long,long):org.apache.commons.io.IOUtils@copyLarge:1853:length > 0 |==> length >= 0
3424:ROR:>(long,long):FALSE(long,long):org.apache.commons.io.IOUtils@copyLarge:1853:length > 0 |==> false
3425:ROR:<(long,long):!=(long,long):org.apache.commons.io.IOUtils@copyLarge:1853:length < bufferLength |==> length != bufferLength
3426:ROR:<(long,long):<=(long,long):org.apache.commons.io.IOUtils@copyLarge:1853:length < bufferLength |==> length <= bufferLength
3427:ROR:<(long,long):FALSE(long,long):org.apache.commons.io.IOUtils@copyLarge:1853:length < bufferLength |==> false
3428:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.io.IOUtils@copyLarge:1853:length > 0 && length < bufferLength |==> length > 0 == length < bufferLength
3429:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.io.IOUtils@copyLarge:1853:length > 0 && length < bufferLength |==> false
3430:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.io.IOUtils@copyLarge:1853:length > 0 && length < bufferLength |==> length > 0
3431:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.io.IOUtils@copyLarge:1853:length > 0 && length < bufferLength |==> length < bufferLength
3432:LVR:0:POS:org.apache.commons.io.IOUtils@copyLarge:1857:0 |==> 1
3433:LVR:0:NEG:org.apache.commons.io.IOUtils@copyLarge:1857:0 |==> -1
3434:LVR:0:POS:org.apache.commons.io.IOUtils@copyLarge:1858:0 |==> 1
3435:LVR:0:NEG:org.apache.commons.io.IOUtils@copyLarge:1858:0 |==> -1
3436:ROR:>(int,int):!=(int,int):org.apache.commons.io.IOUtils@copyLarge:1858:bytesToRead > 0 |==> bytesToRead != 0
3437:ROR:>(int,int):>=(int,int):org.apache.commons.io.IOUtils@copyLarge:1858:bytesToRead > 0 |==> bytesToRead >= 0
3438:ROR:>(int,int):FALSE(int,int):org.apache.commons.io.IOUtils@copyLarge:1858:bytesToRead > 0 |==> false
3439:LVR:0:POS:org.apache.commons.io.IOUtils@copyLarge:1858:0 |==> 1
3440:LVR:0:NEG:org.apache.commons.io.IOUtils@copyLarge:1858:0 |==> -1
3441:ROR:!=(int,int):<(int,int):org.apache.commons.io.IOUtils@copyLarge:1858:EOF != (read = input.read(buffer, 0, bytesToRead)) |==> EOF < (read = input.read(buffer, 0, bytesToRead))
3442:ROR:!=(int,int):>(int,int):org.apache.commons.io.IOUtils@copyLarge:1858:EOF != (read = input.read(buffer, 0, bytesToRead)) |==> EOF > (read = input.read(buffer, 0, bytesToRead))
3443:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.io.IOUtils@copyLarge:1858:bytesToRead > 0 && EOF != (read = input.read(buffer, 0, bytesToRead)) |==> bytesToRead > 0 == (EOF != (read = input.read(buffer, 0, bytesToRead)))
3444:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.io.IOUtils@copyLarge:1858:bytesToRead > 0 && EOF != (read = input.read(buffer, 0, bytesToRead)) |==> EOF != (read = input.read(buffer, 0, bytesToRead))
3445:LVR:0:POS:org.apache.commons.io.IOUtils@copyLarge:1859:0 |==> 1
3446:LVR:0:NEG:org.apache.commons.io.IOUtils@copyLarge:1859:0 |==> -1
3447:STD:<CALL>:<NO-OP>:org.apache.commons.io.IOUtils@copyLarge:1859:output.write(buffer, 0, read) |==> <NO-OP>
3448:STD:<ASSIGN>:<NO-OP>:org.apache.commons.io.IOUtils@copyLarge:1860:totalRead += read |==> <NO-OP>
3449:AOR:-(long,long):%(long,long):org.apache.commons.io.IOUtils@copyLarge:1863:length - totalRead |==> length % totalRead
3450:AOR:-(long,long):*(long,long):org.apache.commons.io.IOUtils@copyLarge:1863:length - totalRead |==> length * totalRead
3451:AOR:-(long,long):+(long,long):org.apache.commons.io.IOUtils@copyLarge:1863:length - totalRead |==> length + totalRead
3452:AOR:-(long,long):/(long,long):org.apache.commons.io.IOUtils@copyLarge:1863:length - totalRead |==> length / totalRead
3453:LVR:0:POS:org.apache.commons.io.IOUtils@copyLarge:1861:0 |==> 1
3454:LVR:0:NEG:org.apache.commons.io.IOUtils@copyLarge:1861:0 |==> -1
3455:ROR:>(long,long):!=(long,long):org.apache.commons.io.IOUtils@copyLarge:1861:length > 0 |==> length != 0
3456:ROR:>(long,long):>=(long,long):org.apache.commons.io.IOUtils@copyLarge:1861:length > 0 |==> length >= 0
3457:ROR:>(long,long):FALSE(long,long):org.apache.commons.io.IOUtils@copyLarge:1861:length > 0 |==> false
3458:STD:<CALL>:<NO-OP>:org.apache.commons.io.IOUtils@copy:1886:copy(input, output, Charset.defaultCharset()) |==> <NO-OP>
3459:STD:<CALL>:<NO-OP>:org.apache.commons.io.IOUtils@copy:1907:copy(in, output) |==> <NO-OP>
3460:STD:<CALL>:<NO-OP>:org.apache.commons.io.IOUtils@copy:1933:copy(input, output, Charsets.toCharset(encoding)) |==> <NO-OP>
3461:LVR:NEG:0:org.apache.commons.io.IOUtils@copy:1959:-1 |==> 0
3462:LVR:NEG:POS:org.apache.commons.io.IOUtils@copy:1959:-1 |==> 1
3463:ROR:>(long,long):!=(long,long):org.apache.commons.io.IOUtils@copy:1958:count > Integer.MAX_VALUE |==> count != Integer.MAX_VALUE
3464:ROR:>(long,long):>=(long,long):org.apache.commons.io.IOUtils@copy:1958:count > Integer.MAX_VALUE |==> count >= Integer.MAX_VALUE
3465:ROR:>(long,long):FALSE(long,long):org.apache.commons.io.IOUtils@copy:1958:count > Integer.MAX_VALUE |==> false
3466:LVR:0:POS:org.apache.commons.io.IOUtils@copyLarge:1999:0 |==> 1
3467:LVR:0:NEG:org.apache.commons.io.IOUtils@copyLarge:1999:0 |==> -1
3468:LVR:0:POS:org.apache.commons.io.IOUtils@copyLarge:2000:0 |==> 1
3469:LVR:0:NEG:org.apache.commons.io.IOUtils@copyLarge:2000:0 |==> -1
3470:ROR:!=(int,int):<(int,int):org.apache.commons.io.IOUtils@copyLarge:2001:EOF != (n = input.read(buffer)) |==> EOF < (n = input.read(buffer))
3471:ROR:!=(int,int):>(int,int):org.apache.commons.io.IOUtils@copyLarge:2001:EOF != (n = input.read(buffer)) |==> EOF > (n = input.read(buffer))
3472:ROR:!=(int,int):TRUE(int,int):org.apache.commons.io.IOUtils@copyLarge:2001:EOF != (n = input.read(buffer)) |==> true
3473:LVR:0:POS:org.apache.commons.io.IOUtils@copyLarge:2002:0 |==> 1
3474:LVR:0:NEG:org.apache.commons.io.IOUtils@copyLarge:2002:0 |==> -1
3475:STD:<CALL>:<NO-OP>:org.apache.commons.io.IOUtils@copyLarge:2002:output.write(buffer, 0, n) |==> <NO-OP>
3476:STD:<ASSIGN>:<NO-OP>:org.apache.commons.io.IOUtils@copyLarge:2003:count += n |==> <NO-OP>
3477:STD:<CALL>:<NO-OP>:org.apache.commons.io.IOUtils@copyLarge:2054:skipFully(input, inputOffset) |==> <NO-OP>
3478:LVR:0:POS:org.apache.commons.io.IOUtils@copyLarge:2053:0 |==> 1
3479:LVR:0:NEG:org.apache.commons.io.IOUtils@copyLarge:2053:0 |==> -1
3480:ROR:>(long,long):!=(long,long):org.apache.commons.io.IOUtils@copyLarge:2053:inputOffset > 0 |==> inputOffset != 0
3481:ROR:>(long,long):>=(long,long):org.apache.commons.io.IOUtils@copyLarge:2053:inputOffset > 0 |==> inputOffset >= 0
3482:ROR:>(long,long):FALSE(long,long):org.apache.commons.io.IOUtils@copyLarge:2053:inputOffset > 0 |==> false
3483:LVR:0:POS:org.apache.commons.io.IOUtils@copyLarge:2057:0 |==> 1
3484:LVR:0:NEG:org.apache.commons.io.IOUtils@copyLarge:2057:0 |==> -1
3485:LVR:0:POS:org.apache.commons.io.IOUtils@copyLarge:2056:0 |==> 1
3486:LVR:0:NEG:org.apache.commons.io.IOUtils@copyLarge:2056:0 |==> -1
3487:ROR:==(long,long):<=(long,long):org.apache.commons.io.IOUtils@copyLarge:2056:length == 0 |==> length <= 0
3488:ROR:==(long,long):>=(long,long):org.apache.commons.io.IOUtils@copyLarge:2056:length == 0 |==> length >= 0
3489:ROR:==(long,long):FALSE(long,long):org.apache.commons.io.IOUtils@copyLarge:2056:length == 0 |==> false
3490:LVR:0:POS:org.apache.commons.io.IOUtils@copyLarge:2060:0 |==> 1
3491:LVR:0:NEG:org.apache.commons.io.IOUtils@copyLarge:2060:0 |==> -1
3492:ROR:>(long,long):!=(long,long):org.apache.commons.io.IOUtils@copyLarge:2060:length > 0 |==> length != 0
3493:ROR:>(long,long):>=(long,long):org.apache.commons.io.IOUtils@copyLarge:2060:length > 0 |==> length >= 0
3494:ROR:>(long,long):FALSE(long,long):org.apache.commons.io.IOUtils@copyLarge:2060:length > 0 |==> false
3495:ROR:<(long,long):!=(long,long):org.apache.commons.io.IOUtils@copyLarge:2060:length < buffer.length |==> length != buffer.length
3496:ROR:<(long,long):<=(long,long):org.apache.commons.io.IOUtils@copyLarge:2060:length < buffer.length |==> length <= buffer.length
3497:ROR:<(long,long):FALSE(long,long):org.apache.commons.io.IOUtils@copyLarge:2060:length < buffer.length |==> false
3498:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.io.IOUtils@copyLarge:2060:length > 0 && length < buffer.length |==> length > 0 == length < buffer.length
3499:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.io.IOUtils@copyLarge:2060:length > 0 && length < buffer.length |==> false
3500:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.io.IOUtils@copyLarge:2060:length > 0 && length < buffer.length |==> length > 0
3501:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.io.IOUtils@copyLarge:2060:length > 0 && length < buffer.length |==> length < buffer.length
3502:LVR:0:POS:org.apache.commons.io.IOUtils@copyLarge:2064:0 |==> 1
3503:LVR:0:NEG:org.apache.commons.io.IOUtils@copyLarge:2064:0 |==> -1
3504:LVR:0:POS:org.apache.commons.io.IOUtils@copyLarge:2065:0 |==> 1
3505:LVR:0:NEG:org.apache.commons.io.IOUtils@copyLarge:2065:0 |==> -1
3506:ROR:>(int,int):!=(int,int):org.apache.commons.io.IOUtils@copyLarge:2065:bytesToRead > 0 |==> bytesToRead != 0
3507:ROR:>(int,int):>=(int,int):org.apache.commons.io.IOUtils@copyLarge:2065:bytesToRead > 0 |==> bytesToRead >= 0
3508:ROR:>(int,int):FALSE(int,int):org.apache.commons.io.IOUtils@copyLarge:2065:bytesToRead > 0 |==> false
3509:LVR:0:POS:org.apache.commons.io.IOUtils@copyLarge:2065:0 |==> 1
3510:LVR:0:NEG:org.apache.commons.io.IOUtils@copyLarge:2065:0 |==> -1
3511:ROR:!=(int,int):<(int,int):org.apache.commons.io.IOUtils@copyLarge:2065:EOF != (read = input.read(buffer, 0, bytesToRead)) |==> EOF < (read = input.read(buffer, 0, bytesToRead))
3512:ROR:!=(int,int):>(int,int):org.apache.commons.io.IOUtils@copyLarge:2065:EOF != (read = input.read(buffer, 0, bytesToRead)) |==> EOF > (read = input.read(buffer, 0, bytesToRead))
3513:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.io.IOUtils@copyLarge:2065:bytesToRead > 0 && EOF != (read = input.read(buffer, 0, bytesToRead)) |==> bytesToRead > 0 == (EOF != (read = input.read(buffer, 0, bytesToRead)))
3514:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.io.IOUtils@copyLarge:2065:bytesToRead > 0 && EOF != (read = input.read(buffer, 0, bytesToRead)) |==> EOF != (read = input.read(buffer, 0, bytesToRead))
3515:LVR:0:POS:org.apache.commons.io.IOUtils@copyLarge:2066:0 |==> 1
3516:LVR:0:NEG:org.apache.commons.io.IOUtils@copyLarge:2066:0 |==> -1
3517:STD:<CALL>:<NO-OP>:org.apache.commons.io.IOUtils@copyLarge:2066:output.write(buffer, 0, read) |==> <NO-OP>
3518:STD:<ASSIGN>:<NO-OP>:org.apache.commons.io.IOUtils@copyLarge:2067:totalRead += read |==> <NO-OP>
3519:AOR:-(long,long):%(long,long):org.apache.commons.io.IOUtils@copyLarge:2070:length - totalRead |==> length % totalRead
3520:AOR:-(long,long):*(long,long):org.apache.commons.io.IOUtils@copyLarge:2070:length - totalRead |==> length * totalRead
3521:AOR:-(long,long):+(long,long):org.apache.commons.io.IOUtils@copyLarge:2070:length - totalRead |==> length + totalRead
3522:AOR:-(long,long):/(long,long):org.apache.commons.io.IOUtils@copyLarge:2070:length - totalRead |==> length / totalRead
3523:LVR:0:POS:org.apache.commons.io.IOUtils@copyLarge:2068:0 |==> 1
3524:LVR:0:NEG:org.apache.commons.io.IOUtils@copyLarge:2068:0 |==> -1
3525:ROR:>(long,long):!=(long,long):org.apache.commons.io.IOUtils@copyLarge:2068:length > 0 |==> length != 0
3526:ROR:>(long,long):>=(long,long):org.apache.commons.io.IOUtils@copyLarge:2068:length > 0 |==> length >= 0
3527:ROR:>(long,long):FALSE(long,long):org.apache.commons.io.IOUtils@copyLarge:2068:length > 0 |==> false
3528:STD:<CALL>:<NO-OP>:org.apache.commons.io.IOUtils@copy:2097:copy(input, output, Charset.defaultCharset()) |==> <NO-OP>
3529:STD:<CALL>:<NO-OP>:org.apache.commons.io.IOUtils@copy:2125:copy(input, out) |==> <NO-OP>
3530:STD:<CALL>:<NO-OP>:org.apache.commons.io.IOUtils@copy:2128:out.flush() |==> <NO-OP>
3531:STD:<CALL>:<NO-OP>:org.apache.commons.io.IOUtils@copy:2158:copy(input, output, Charsets.toCharset(encoding)) |==> <NO-OP>
3532:ROR:!=(int,int):<(int,int):org.apache.commons.io.IOUtils@contentEquals:2187:EOF != ch |==> EOF < ch
3533:ROR:!=(int,int):>(int,int):org.apache.commons.io.IOUtils@contentEquals:2187:EOF != ch |==> EOF > ch
3534:ROR:!=(int,int):TRUE(int,int):org.apache.commons.io.IOUtils@contentEquals:2187:EOF != ch |==> true
3535:LVR:FALSE:TRUE:org.apache.commons.io.IOUtils@contentEquals:2190:false |==> true
3536:ROR:!=(int,int):<(int,int):org.apache.commons.io.IOUtils@contentEquals:2189:ch != ch2 |==> ch < ch2
3537:ROR:!=(int,int):>(int,int):org.apache.commons.io.IOUtils@contentEquals:2189:ch != ch2 |==> ch > ch2
3538:ROR:!=(int,int):TRUE(int,int):org.apache.commons.io.IOUtils@contentEquals:2189:ch != ch2 |==> true
3539:ROR:==(int,int):<=(int,int):org.apache.commons.io.IOUtils@contentEquals:2196:ch2 == EOF |==> ch2 <= EOF
3540:ROR:==(int,int):>=(int,int):org.apache.commons.io.IOUtils@contentEquals:2196:ch2 == EOF |==> ch2 >= EOF
3541:ROR:==(int,int):FALSE(int,int):org.apache.commons.io.IOUtils@contentEquals:2196:ch2 == EOF |==> false
3542:ROR:!=(int,int):<(int,int):org.apache.commons.io.IOUtils@contentEquals:2221:EOF != ch |==> EOF < ch
3543:ROR:!=(int,int):>(int,int):org.apache.commons.io.IOUtils@contentEquals:2221:EOF != ch |==> EOF > ch
3544:ROR:!=(int,int):TRUE(int,int):org.apache.commons.io.IOUtils@contentEquals:2221:EOF != ch |==> true
3545:LVR:FALSE:TRUE:org.apache.commons.io.IOUtils@contentEquals:2224:false |==> true
3546:ROR:!=(int,int):<(int,int):org.apache.commons.io.IOUtils@contentEquals:2223:ch != ch2 |==> ch < ch2
3547:ROR:!=(int,int):>(int,int):org.apache.commons.io.IOUtils@contentEquals:2223:ch != ch2 |==> ch > ch2
3548:ROR:!=(int,int):TRUE(int,int):org.apache.commons.io.IOUtils@contentEquals:2223:ch != ch2 |==> true
3549:ROR:==(int,int):<=(int,int):org.apache.commons.io.IOUtils@contentEquals:2230:ch2 == EOF |==> ch2 <= EOF
3550:ROR:==(int,int):>=(int,int):org.apache.commons.io.IOUtils@contentEquals:2230:ch2 == EOF |==> ch2 >= EOF
3551:ROR:==(int,int):FALSE(int,int):org.apache.commons.io.IOUtils@contentEquals:2230:ch2 == EOF |==> false
3552:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.apache.commons.io.IOUtils@contentEqualsIgnoreEOL:2254:line1 != null |==> true
3553:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.apache.commons.io.IOUtils@contentEqualsIgnoreEOL:2254:line2 != null |==> true
3554:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.io.IOUtils@contentEqualsIgnoreEOL:2254:line1 != null && line2 != null |==> line1 != null == (line2 != null)
3555:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.io.IOUtils@contentEqualsIgnoreEOL:2254:line1 != null && line2 != null |==> false
3556:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.io.IOUtils@contentEqualsIgnoreEOL:2254:line1 != null && line2 != null |==> line1 != null
3557:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.io.IOUtils@contentEqualsIgnoreEOL:2254:line1 != null && line2 != null |==> line2 != null
3558:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.io.IOUtils@contentEqualsIgnoreEOL:2254:line1 != null && line2 != null && line1.equals(line2) |==> (line1 != null && line2 != null) == line1.equals(line2)
3559:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.io.IOUtils@contentEqualsIgnoreEOL:2254:line1 != null && line2 != null && line1.equals(line2) |==> false
3560:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.io.IOUtils@contentEqualsIgnoreEOL:2254:line1 != null && line2 != null && line1.equals(line2) |==> line1 != null && line2 != null
3561:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.io.IOUtils@contentEqualsIgnoreEOL:2254:line1 != null && line2 != null && line1.equals(line2) |==> line1.equals(line2)
3562:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.io.IOUtils@contentEqualsIgnoreEOL:2258:line1 == null |==> false
3563:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.io.IOUtils@contentEqualsIgnoreEOL:2258:line2 == null |==> false
3564:LVR:TRUE:FALSE:org.apache.commons.io.IOUtils@contentEqualsIgnoreEOL:2258:true |==> false
3565:LVR:FALSE:TRUE:org.apache.commons.io.IOUtils@contentEqualsIgnoreEOL:2258:false |==> true
3566:LVR:0:POS:org.apache.commons.io.IOUtils@skip:2278:0 |==> 1
3567:LVR:0:NEG:org.apache.commons.io.IOUtils@skip:2278:0 |==> -1
3568:ROR:<(long,long):!=(long,long):org.apache.commons.io.IOUtils@skip:2278:toSkip < 0 |==> toSkip != 0
3569:ROR:<(long,long):<=(long,long):org.apache.commons.io.IOUtils@skip:2278:toSkip < 0 |==> toSkip <= 0
3570:ROR:<(long,long):FALSE(long,long):org.apache.commons.io.IOUtils@skip:2278:toSkip < 0 |==> false
3571:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.io.IOUtils@skip:2286:SKIP_BYTE_BUFFER == null |==> false
3572:LVR:0:POS:org.apache.commons.io.IOUtils@skip:2290:0 |==> 1
3573:LVR:0:NEG:org.apache.commons.io.IOUtils@skip:2290:0 |==> -1
3574:ROR:>(long,long):!=(long,long):org.apache.commons.io.IOUtils@skip:2290:remain > 0 |==> remain != 0
3575:ROR:>(long,long):>=(long,long):org.apache.commons.io.IOUtils@skip:2290:remain > 0 |==> remain >= 0
3576:ROR:>(long,long):FALSE(long,long):org.apache.commons.io.IOUtils@skip:2290:remain > 0 |==> false
3577:LVR:0:POS:org.apache.commons.io.IOUtils@skip:2291:0 |==> 1
3578:LVR:0:NEG:org.apache.commons.io.IOUtils@skip:2291:0 |==> -1
3579:LVR:0:POS:org.apache.commons.io.IOUtils@skip:2292:0 |==> 1
3580:LVR:0:NEG:org.apache.commons.io.IOUtils@skip:2292:0 |==> -1
3581:ROR:<(long,long):!=(long,long):org.apache.commons.io.IOUtils@skip:2292:n < 0 |==> n != 0
3582:ROR:<(long,long):<=(long,long):org.apache.commons.io.IOUtils@skip:2292:n < 0 |==> n <= 0
3583:ROR:<(long,long):FALSE(long,long):org.apache.commons.io.IOUtils@skip:2292:n < 0 |==> false
3584:STD:<ASSIGN>:<NO-OP>:org.apache.commons.io.IOUtils@skip:2295:remain -= n |==> <NO-OP>
3585:AOR:-(long,long):%(long,long):org.apache.commons.io.IOUtils@skip:2297:toSkip - remain |==> toSkip % remain
3586:AOR:-(long,long):*(long,long):org.apache.commons.io.IOUtils@skip:2297:toSkip - remain |==> toSkip * remain
3587:AOR:-(long,long):+(long,long):org.apache.commons.io.IOUtils@skip:2297:toSkip - remain |==> toSkip + remain
3588:AOR:-(long,long):/(long,long):org.apache.commons.io.IOUtils@skip:2297:toSkip - remain |==> toSkip / remain
3589:LVR:0:POS:org.apache.commons.io.IOUtils@skip:2317:0 |==> 1
3590:LVR:0:NEG:org.apache.commons.io.IOUtils@skip:2317:0 |==> -1
3591:ROR:<(long,long):!=(long,long):org.apache.commons.io.IOUtils@skip:2317:toSkip < 0 |==> toSkip != 0
3592:ROR:<(long,long):<=(long,long):org.apache.commons.io.IOUtils@skip:2317:toSkip < 0 |==> toSkip <= 0
3593:ROR:<(long,long):FALSE(long,long):org.apache.commons.io.IOUtils@skip:2317:toSkip < 0 |==> false
3594:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.io.IOUtils@skip:2325:SKIP_CHAR_BUFFER == null |==> false
3595:LVR:0:POS:org.apache.commons.io.IOUtils@skip:2329:0 |==> 1
3596:LVR:0:NEG:org.apache.commons.io.IOUtils@skip:2329:0 |==> -1
3597:ROR:>(long,long):!=(long,long):org.apache.commons.io.IOUtils@skip:2329:remain > 0 |==> remain != 0
3598:ROR:>(long,long):>=(long,long):org.apache.commons.io.IOUtils@skip:2329:remain > 0 |==> remain >= 0
3599:ROR:>(long,long):FALSE(long,long):org.apache.commons.io.IOUtils@skip:2329:remain > 0 |==> false
3600:LVR:0:POS:org.apache.commons.io.IOUtils@skip:2330:0 |==> 1
3601:LVR:0:NEG:org.apache.commons.io.IOUtils@skip:2330:0 |==> -1
3602:LVR:0:POS:org.apache.commons.io.IOUtils@skip:2331:0 |==> 1
3603:LVR:0:NEG:org.apache.commons.io.IOUtils@skip:2331:0 |==> -1
3604:ROR:<(long,long):!=(long,long):org.apache.commons.io.IOUtils@skip:2331:n < 0 |==> n != 0
3605:ROR:<(long,long):<=(long,long):org.apache.commons.io.IOUtils@skip:2331:n < 0 |==> n <= 0
3606:ROR:<(long,long):FALSE(long,long):org.apache.commons.io.IOUtils@skip:2331:n < 0 |==> false
3607:STD:<ASSIGN>:<NO-OP>:org.apache.commons.io.IOUtils@skip:2334:remain -= n |==> <NO-OP>
3608:AOR:-(long,long):%(long,long):org.apache.commons.io.IOUtils@skip:2336:toSkip - remain |==> toSkip % remain
3609:AOR:-(long,long):*(long,long):org.apache.commons.io.IOUtils@skip:2336:toSkip - remain |==> toSkip * remain
3610:AOR:-(long,long):+(long,long):org.apache.commons.io.IOUtils@skip:2336:toSkip - remain |==> toSkip + remain
3611:AOR:-(long,long):/(long,long):org.apache.commons.io.IOUtils@skip:2336:toSkip - remain |==> toSkip / remain
3612:LVR:0:POS:org.apache.commons.io.IOUtils@skipFully:2355:0 |==> 1
3613:LVR:0:NEG:org.apache.commons.io.IOUtils@skipFully:2355:0 |==> -1
3614:ROR:<(long,long):!=(long,long):org.apache.commons.io.IOUtils@skipFully:2355:toSkip < 0 |==> toSkip != 0
3615:ROR:<(long,long):<=(long,long):org.apache.commons.io.IOUtils@skipFully:2355:toSkip < 0 |==> toSkip <= 0
3616:ROR:<(long,long):FALSE(long,long):org.apache.commons.io.IOUtils@skipFully:2355:toSkip < 0 |==> false
3617:ROR:!=(long,long):<(long,long):org.apache.commons.io.IOUtils@skipFully:2359:skipped != toSkip |==> skipped < toSkip
3618:ROR:!=(long,long):>(long,long):org.apache.commons.io.IOUtils@skipFully:2359:skipped != toSkip |==> skipped > toSkip
3619:ROR:!=(long,long):TRUE(long,long):org.apache.commons.io.IOUtils@skipFully:2359:skipped != toSkip |==> true
3620:ROR:!=(long,long):<(long,long):org.apache.commons.io.IOUtils@skipFully:2381:skipped != toSkip |==> skipped < toSkip
3621:ROR:!=(long,long):>(long,long):org.apache.commons.io.IOUtils@skipFully:2381:skipped != toSkip |==> skipped > toSkip
3622:ROR:!=(long,long):TRUE(long,long):org.apache.commons.io.IOUtils@skipFully:2381:skipped != toSkip |==> true
3623:LVR:0:POS:org.apache.commons.io.IOUtils@read:2402:0 |==> 1
3624:LVR:0:NEG:org.apache.commons.io.IOUtils@read:2402:0 |==> -1
3625:ROR:<(int,int):!=(int,int):org.apache.commons.io.IOUtils@read:2402:length < 0 |==> length != 0
3626:ROR:<(int,int):<=(int,int):org.apache.commons.io.IOUtils@read:2402:length < 0 |==> length <= 0
3627:ROR:<(int,int):FALSE(int,int):org.apache.commons.io.IOUtils@read:2402:length < 0 |==> false
3628:LVR:0:POS:org.apache.commons.io.IOUtils@read:2406:0 |==> 1
3629:LVR:0:NEG:org.apache.commons.io.IOUtils@read:2406:0 |==> -1
3630:ROR:>(int,int):!=(int,int):org.apache.commons.io.IOUtils@read:2406:remaining > 0 |==> remaining != 0
3631:ROR:>(int,int):>=(int,int):org.apache.commons.io.IOUtils@read:2406:remaining > 0 |==> remaining >= 0
3632:ROR:>(int,int):FALSE(int,int):org.apache.commons.io.IOUtils@read:2406:remaining > 0 |==> false
3633:AOR:-(int,int):%(int,int):org.apache.commons.io.IOUtils@read:2407:length - remaining |==> length % remaining
3634:AOR:-(int,int):*(int,int):org.apache.commons.io.IOUtils@read:2407:length - remaining |==> length * remaining
3635:AOR:-(int,int):+(int,int):org.apache.commons.io.IOUtils@read:2407:length - remaining |==> length + remaining
3636:AOR:-(int,int):/(int,int):org.apache.commons.io.IOUtils@read:2407:length - remaining |==> length / remaining
3637:AOR:+(int,int):%(int,int):org.apache.commons.io.IOUtils@read:2408:offset + location |==> offset % location
3638:AOR:+(int,int):*(int,int):org.apache.commons.io.IOUtils@read:2408:offset + location |==> offset * location
3639:AOR:+(int,int):-(int,int):org.apache.commons.io.IOUtils@read:2408:offset + location |==> offset - location
3640:AOR:+(int,int):/(int,int):org.apache.commons.io.IOUtils@read:2408:offset + location |==> offset / location
3641:ROR:==(int,int):<=(int,int):org.apache.commons.io.IOUtils@read:2409:EOF == count |==> EOF <= count
3642:ROR:==(int,int):>=(int,int):org.apache.commons.io.IOUtils@read:2409:EOF == count |==> EOF >= count
3643:ROR:==(int,int):FALSE(int,int):org.apache.commons.io.IOUtils@read:2409:EOF == count |==> false
3644:STD:<ASSIGN>:<NO-OP>:org.apache.commons.io.IOUtils@read:2412:remaining -= count |==> <NO-OP>
3645:AOR:-(int,int):%(int,int):org.apache.commons.io.IOUtils@read:2414:length - remaining |==> length % remaining
3646:AOR:-(int,int):*(int,int):org.apache.commons.io.IOUtils@read:2414:length - remaining |==> length * remaining
3647:AOR:-(int,int):+(int,int):org.apache.commons.io.IOUtils@read:2414:length - remaining |==> length + remaining
3648:AOR:-(int,int):/(int,int):org.apache.commons.io.IOUtils@read:2414:length - remaining |==> length / remaining
3649:LVR:0:POS:org.apache.commons.io.IOUtils@read:2430:0 |==> 1
3650:LVR:0:NEG:org.apache.commons.io.IOUtils@read:2430:0 |==> -1
3651:LVR:0:POS:org.apache.commons.io.IOUtils@read:2448:0 |==> 1
3652:LVR:0:NEG:org.apache.commons.io.IOUtils@read:2448:0 |==> -1
3653:ROR:<(int,int):!=(int,int):org.apache.commons.io.IOUtils@read:2448:length < 0 |==> length != 0
3654:ROR:<(int,int):<=(int,int):org.apache.commons.io.IOUtils@read:2448:length < 0 |==> length <= 0
3655:ROR:<(int,int):FALSE(int,int):org.apache.commons.io.IOUtils@read:2448:length < 0 |==> false
3656:LVR:0:POS:org.apache.commons.io.IOUtils@read:2452:0 |==> 1
3657:LVR:0:NEG:org.apache.commons.io.IOUtils@read:2452:0 |==> -1
3658:ROR:>(int,int):!=(int,int):org.apache.commons.io.IOUtils@read:2452:remaining > 0 |==> remaining != 0
3659:ROR:>(int,int):>=(int,int):org.apache.commons.io.IOUtils@read:2452:remaining > 0 |==> remaining >= 0
3660:ROR:>(int,int):FALSE(int,int):org.apache.commons.io.IOUtils@read:2452:remaining > 0 |==> false
3661:AOR:-(int,int):%(int,int):org.apache.commons.io.IOUtils@read:2453:length - remaining |==> length % remaining
3662:AOR:-(int,int):*(int,int):org.apache.commons.io.IOUtils@read:2453:length - remaining |==> length * remaining
3663:AOR:-(int,int):+(int,int):org.apache.commons.io.IOUtils@read:2453:length - remaining |==> length + remaining
3664:AOR:-(int,int):/(int,int):org.apache.commons.io.IOUtils@read:2453:length - remaining |==> length / remaining
3665:AOR:+(int,int):%(int,int):org.apache.commons.io.IOUtils@read:2454:offset + location |==> offset % location
3666:AOR:+(int,int):*(int,int):org.apache.commons.io.IOUtils@read:2454:offset + location |==> offset * location
3667:AOR:+(int,int):-(int,int):org.apache.commons.io.IOUtils@read:2454:offset + location |==> offset - location
3668:AOR:+(int,int):/(int,int):org.apache.commons.io.IOUtils@read:2454:offset + location |==> offset / location
3669:ROR:==(int,int):<=(int,int):org.apache.commons.io.IOUtils@read:2455:EOF == count |==> EOF <= count
3670:ROR:==(int,int):>=(int,int):org.apache.commons.io.IOUtils@read:2455:EOF == count |==> EOF >= count
3671:ROR:==(int,int):FALSE(int,int):org.apache.commons.io.IOUtils@read:2455:EOF == count |==> false
3672:STD:<ASSIGN>:<NO-OP>:org.apache.commons.io.IOUtils@read:2458:remaining -= count |==> <NO-OP>
3673:AOR:-(int,int):%(int,int):org.apache.commons.io.IOUtils@read:2460:length - remaining |==> length % remaining
3674:AOR:-(int,int):*(int,int):org.apache.commons.io.IOUtils@read:2460:length - remaining |==> length * remaining
3675:AOR:-(int,int):+(int,int):org.apache.commons.io.IOUtils@read:2460:length - remaining |==> length + remaining
3676:AOR:-(int,int):/(int,int):org.apache.commons.io.IOUtils@read:2460:length - remaining |==> length / remaining
3677:LVR:0:POS:org.apache.commons.io.IOUtils@read:2476:0 |==> 1
3678:LVR:0:NEG:org.apache.commons.io.IOUtils@read:2476:0 |==> -1
3679:ROR:!=(int,int):<(int,int):org.apache.commons.io.IOUtils@readFully:2497:actual != length |==> actual < length
3680:ROR:!=(int,int):>(int,int):org.apache.commons.io.IOUtils@readFully:2497:actual != length |==> actual > length
3681:ROR:!=(int,int):TRUE(int,int):org.apache.commons.io.IOUtils@readFully:2497:actual != length |==> true
3682:LVR:0:POS:org.apache.commons.io.IOUtils@readFully:2517:0 |==> 1
3683:LVR:0:NEG:org.apache.commons.io.IOUtils@readFully:2517:0 |==> -1
3684:STD:<CALL>:<NO-OP>:org.apache.commons.io.IOUtils@readFully:2517:readFully(input, buffer, 0, buffer.length) |==> <NO-OP>
3685:ROR:!=(int,int):<(int,int):org.apache.commons.io.IOUtils@readFully:2538:actual != length |==> actual < length
3686:ROR:!=(int,int):>(int,int):org.apache.commons.io.IOUtils@readFully:2538:actual != length |==> actual > length
3687:ROR:!=(int,int):TRUE(int,int):org.apache.commons.io.IOUtils@readFully:2538:actual != length |==> true
3688:LVR:0:POS:org.apache.commons.io.IOUtils@readFully:2558:0 |==> 1
3689:LVR:0:NEG:org.apache.commons.io.IOUtils@readFully:2558:0 |==> -1
3690:STD:<CALL>:<NO-OP>:org.apache.commons.io.IOUtils@readFully:2558:readFully(input, buffer, 0, buffer.length) |==> <NO-OP>
3691:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.apache.commons.io.TaggedIOException@isTaggedWith:65:tag != null |==> true
3692:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.io.TaggedIOException@isTaggedWith:65:tag != null && throwable instanceof TaggedIOException |==> tag != null == throwable instanceof TaggedIOException
3693:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.io.TaggedIOException@isTaggedWith:66:tag != null && throwable instanceof TaggedIOException |==> false
3694:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.io.TaggedIOException@isTaggedWith:65:tag != null && throwable instanceof TaggedIOException |==> tag != null
3695:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.io.TaggedIOException@isTaggedWith:66:tag != null && throwable instanceof TaggedIOException |==> throwable instanceof TaggedIOException
3696:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.io.TaggedIOException@isTaggedWith:65:tag != null && throwable instanceof TaggedIOException && tag.equals(((TaggedIOException)throwable).tag) |==> (tag != null && throwable instanceof TaggedIOException) == tag.equals(((TaggedIOException)throwable).tag)
3697:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.io.TaggedIOException@isTaggedWith:67:tag != null && throwable instanceof TaggedIOException && tag.equals(((TaggedIOException)throwable).tag) |==> false
3698:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.io.TaggedIOException@isTaggedWith:65:tag != null && throwable instanceof TaggedIOException && tag.equals(((TaggedIOException)throwable).tag) |==> tag != null && throwable instanceof TaggedIOException
3699:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.io.TaggedIOException@isTaggedWith:67:tag != null && throwable instanceof TaggedIOException && tag.equals(((TaggedIOException)throwable).tag) |==> tag.equals(((TaggedIOException)throwable).tag)
3700:COR:isTaggedWith(throwable, tag):TRUE:org.apache.commons.io.TaggedIOException@throwCauseIfTaggedWith:94:isTaggedWith(throwable, tag) |==> false
3701:COR:isTaggedWith(throwable, tag):FALSE:org.apache.commons.io.TaggedIOException@throwCauseIfTaggedWith:94:isTaggedWith(throwable, tag) |==> true
3702:LVR:TRUE:FALSE:org.apache.commons.io.ThreadMonitor@start:72:true |==> false
3703:STD:<CALL>:<NO-OP>:org.apache.commons.io.ThreadMonitor@start:72:monitor.setDaemon(true) |==> <NO-OP>
3704:STD:<CALL>:<NO-OP>:org.apache.commons.io.ThreadMonitor@start:73:monitor.start() |==> <NO-OP>
3705:LVR:0:POS:org.apache.commons.io.ThreadMonitor@start:69:0 |==> 1
3706:LVR:0:NEG:org.apache.commons.io.ThreadMonitor@start:69:0 |==> -1
3707:ROR:>(long,long):!=(long,long):org.apache.commons.io.ThreadMonitor@start:69:timeout > 0 |==> timeout != 0
3708:ROR:>(long,long):>=(long,long):org.apache.commons.io.ThreadMonitor@start:69:timeout > 0 |==> timeout >= 0
3709:ROR:>(long,long):FALSE(long,long):org.apache.commons.io.ThreadMonitor@start:69:timeout > 0 |==> false
3710:STD:<CALL>:<NO-OP>:org.apache.commons.io.ThreadMonitor@stop:85:thread.interrupt() |==> <NO-OP>
3711:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.apache.commons.io.ThreadMonitor@stop:84:thread != null |==> true
3712:STD:<CALL>:<NO-OP>:org.apache.commons.io.ThreadMonitor@run:108:Thread.sleep(timeout) |==> <NO-OP>
3713:STD:<CALL>:<NO-OP>:org.apache.commons.io.ThreadMonitor@run:109:thread.interrupt() |==> <NO-OP>
3714:STD:<CALL>:<NO-OP>:org.apache.commons.io.comparator.AbstractFileComparator@sort:45:Arrays.sort(files, this) |==> <NO-OP>
3715:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.apache.commons.io.comparator.AbstractFileComparator@sort:44:files != null |==> true
3716:STD:<CALL>:<NO-OP>:org.apache.commons.io.comparator.AbstractFileComparator@sort:62:Collections.sort(files, this) |==> <NO-OP>
3717:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.apache.commons.io.comparator.AbstractFileComparator@sort:61:files != null |==> true
3718:LVR:0:POS:org.apache.commons.io.comparator.CompositeFileComparator@<init>:61:0 |==> 1
3719:LVR:0:NEG:org.apache.commons.io.comparator.CompositeFileComparator@<init>:61:0 |==> -1
3720:LVR:0:POS:org.apache.commons.io.comparator.CompositeFileComparator@<init>:61:0 |==> 1
3721:LVR:0:NEG:org.apache.commons.io.comparator.CompositeFileComparator@<init>:61:0 |==> -1
3722:STD:<CALL>:<NO-OP>:org.apache.commons.io.comparator.CompositeFileComparator@<init>:61:System.arraycopy(delegates, 0, this.delegates, 0, delegates.length) |==> <NO-OP>
3723:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.io.comparator.CompositeFileComparator@<init>:57:delegates == null |==> false
3724:STD:<CALL>:<NO-OP>:org.apache.commons.io.comparator.CompositeFileComparator@<init>:77:list.add(comparator) |==> <NO-OP>
3725:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.io.comparator.CompositeFileComparator@<init>:72:delegates == null |==> false
3726:LVR:0:POS:org.apache.commons.io.comparator.CompositeFileComparator@compare:92:0 |==> 1
3727:LVR:0:NEG:org.apache.commons.io.comparator.CompositeFileComparator@compare:92:0 |==> -1
3728:LVR:0:POS:org.apache.commons.io.comparator.CompositeFileComparator@compare:95:0 |==> 1
3729:LVR:0:NEG:org.apache.commons.io.comparator.CompositeFileComparator@compare:95:0 |==> -1
3730:ROR:!=(int,int):<(int,int):org.apache.commons.io.comparator.CompositeFileComparator@compare:95:result != 0 |==> result < 0
3731:ROR:!=(int,int):>(int,int):org.apache.commons.io.comparator.CompositeFileComparator@compare:95:result != 0 |==> result > 0
3732:ROR:!=(int,int):TRUE(int,int):org.apache.commons.io.comparator.CompositeFileComparator@compare:95:result != 0 |==> true
3733:STD:<CALL>:<NO-OP>:org.apache.commons.io.comparator.CompositeFileComparator@toString:110:builder.append(super.toString()) |==> <NO-OP>
3734:STD:<CALL>:<NO-OP>:org.apache.commons.io.comparator.CompositeFileComparator@toString:111:builder.append('{') |==> <NO-OP>
3735:LVR:0:POS:org.apache.commons.io.comparator.CompositeFileComparator@toString:112:0 |==> 1
3736:LVR:0:NEG:org.apache.commons.io.comparator.CompositeFileComparator@toString:112:0 |==> -1
3737:ROR:<(int,int):!=(int,int):org.apache.commons.io.comparator.CompositeFileComparator@toString:112:i < delegates.length |==> i != delegates.length
3738:ROR:<(int,int):<=(int,int):org.apache.commons.io.comparator.CompositeFileComparator@toString:112:i < delegates.length |==> i <= delegates.length
3739:ROR:<(int,int):FALSE(int,int):org.apache.commons.io.comparator.CompositeFileComparator@toString:112:i < delegates.length |==> false
3740:STD:<CALL>:<NO-OP>:org.apache.commons.io.comparator.CompositeFileComparator@toString:114:builder.append(',') |==> <NO-OP>
3741:LVR:0:POS:org.apache.commons.io.comparator.CompositeFileComparator@toString:113:0 |==> 1
3742:LVR:0:NEG:org.apache.commons.io.comparator.CompositeFileComparator@toString:113:0 |==> -1
3743:ROR:>(int,int):!=(int,int):org.apache.commons.io.comparator.CompositeFileComparator@toString:113:i > 0 |==> i != 0
3744:ROR:>(int,int):>=(int,int):org.apache.commons.io.comparator.CompositeFileComparator@toString:113:i > 0 |==> i >= 0
3745:ROR:>(int,int):FALSE(int,int):org.apache.commons.io.comparator.CompositeFileComparator@toString:113:i > 0 |==> false
3746:STD:<CALL>:<NO-OP>:org.apache.commons.io.comparator.CompositeFileComparator@toString:116:builder.append(delegates[i]) |==> <NO-OP>
3747:STD:<CALL>:<NO-OP>:org.apache.commons.io.comparator.CompositeFileComparator@toString:118:builder.append('}') |==> <NO-OP>
3748:AOR:-(int,int):%(int,int):org.apache.commons.io.comparator.DirectoryFileComparator@compare:63:getType(file1) - getType(file2) |==> getType(file1) % getType(file2)
3749:AOR:-(int,int):*(int,int):org.apache.commons.io.comparator.DirectoryFileComparator@compare:63:getType(file1) - getType(file2) |==> getType(file1) * getType(file2)
3750:AOR:-(int,int):+(int,int):org.apache.commons.io.comparator.DirectoryFileComparator@compare:63:getType(file1) - getType(file2) |==> getType(file1) + getType(file2)
3751:AOR:-(int,int):/(int,int):org.apache.commons.io.comparator.DirectoryFileComparator@compare:63:getType(file1) - getType(file2) |==> getType(file1) / getType(file2)
3752:LVR:POS:0:org.apache.commons.io.comparator.DirectoryFileComparator@getType:74:1 |==> 0
3753:LVR:POS:NEG:org.apache.commons.io.comparator.DirectoryFileComparator@getType:74:1 |==> -1
3754:LVR:POS:0:org.apache.commons.io.comparator.DirectoryFileComparator@getType:76:2 |==> 0
3755:LVR:POS:NEG:org.apache.commons.io.comparator.DirectoryFileComparator@getType:76:2 |==> -2
3756:COR:file.isDirectory():TRUE:org.apache.commons.io.comparator.DirectoryFileComparator@getType:73:file.isDirectory() |==> false
3757:COR:file.isDirectory():FALSE:org.apache.commons.io.comparator.DirectoryFileComparator@getType:73:file.isDirectory() |==> true
3758:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.io.comparator.ExtensionFileComparator@<init>:92:caseSensitivity == null |==> false
3759:AOR:-(long,long):%(long,long):org.apache.commons.io.comparator.LastModifiedFileComparator@compare:68:file1.lastModified() - file2.lastModified() |==> file1.lastModified() % file2.lastModified()
3760:AOR:-(long,long):*(long,long):org.apache.commons.io.comparator.LastModifiedFileComparator@compare:68:file1.lastModified() - file2.lastModified() |==> file1.lastModified() * file2.lastModified()
3761:AOR:-(long,long):+(long,long):org.apache.commons.io.comparator.LastModifiedFileComparator@compare:68:file1.lastModified() - file2.lastModified() |==> file1.lastModified() + file2.lastModified()
3762:AOR:-(long,long):/(long,long):org.apache.commons.io.comparator.LastModifiedFileComparator@compare:68:file1.lastModified() - file2.lastModified() |==> file1.lastModified() / file2.lastModified()
3763:LVR:NEG:0:org.apache.commons.io.comparator.LastModifiedFileComparator@compare:70:-1 |==> 0
3764:LVR:NEG:POS:org.apache.commons.io.comparator.LastModifiedFileComparator@compare:70:-1 |==> 1
3765:LVR:POS:0:org.apache.commons.io.comparator.LastModifiedFileComparator@compare:72:1 |==> 0
3766:LVR:POS:NEG:org.apache.commons.io.comparator.LastModifiedFileComparator@compare:72:1 |==> -1
3767:LVR:0:POS:org.apache.commons.io.comparator.LastModifiedFileComparator@compare:74:0 |==> 1
3768:LVR:0:NEG:org.apache.commons.io.comparator.LastModifiedFileComparator@compare:74:0 |==> -1
3769:LVR:0:POS:org.apache.commons.io.comparator.LastModifiedFileComparator@compare:71:0 |==> 1
3770:LVR:0:NEG:org.apache.commons.io.comparator.LastModifiedFileComparator@compare:71:0 |==> -1
3771:ROR:>(long,long):!=(long,long):org.apache.commons.io.comparator.LastModifiedFileComparator@compare:71:result > 0 |==> result != 0
3772:ROR:>(long,long):>=(long,long):org.apache.commons.io.comparator.LastModifiedFileComparator@compare:71:result > 0 |==> result >= 0
3773:ROR:>(long,long):FALSE(long,long):org.apache.commons.io.comparator.LastModifiedFileComparator@compare:71:result > 0 |==> false
3774:LVR:0:POS:org.apache.commons.io.comparator.LastModifiedFileComparator@compare:69:0 |==> 1
3775:LVR:0:NEG:org.apache.commons.io.comparator.LastModifiedFileComparator@compare:69:0 |==> -1
3776:ROR:<(long,long):!=(long,long):org.apache.commons.io.comparator.LastModifiedFileComparator@compare:69:result < 0 |==> result != 0
3777:ROR:<(long,long):<=(long,long):org.apache.commons.io.comparator.LastModifiedFileComparator@compare:69:result < 0 |==> result <= 0
3778:ROR:<(long,long):FALSE(long,long):org.apache.commons.io.comparator.LastModifiedFileComparator@compare:69:result < 0 |==> false
3779:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.io.comparator.NameFileComparator@<init>:88:caseSensitivity == null |==> false
3780:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.io.comparator.PathFileComparator@<init>:88:caseSensitivity == null |==> false
3781:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.io.comparator.ReverseComparator@<init>:40:delegate == null |==> false
3782:LVR:TRUE:FALSE:org.apache.commons.io.comparator.SizeFileComparator:64:true |==> false
3783:LVR:FALSE:TRUE:org.apache.commons.io.comparator.SizeFileComparator@<init>:79:false |==> true
3784:LVR:0:POS:org.apache.commons.io.comparator.SizeFileComparator@compare:109:0 |==> 1
3785:LVR:0:NEG:org.apache.commons.io.comparator.SizeFileComparator@compare:109:0 |==> -1
3786:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.io.comparator.SizeFileComparator@compare:111:sumDirectoryContents && file1.exists() |==> sumDirectoryContents == file1.exists()
3787:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.io.comparator.SizeFileComparator@compare:111:sumDirectoryContents && file1.exists() |==> false
3788:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.io.comparator.SizeFileComparator@compare:111:sumDirectoryContents && file1.exists() |==> sumDirectoryContents
3789:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.io.comparator.SizeFileComparator@compare:111:sumDirectoryContents && file1.exists() |==> file1.exists()
3790:LVR:0:POS:org.apache.commons.io.comparator.SizeFileComparator@compare:111:0 |==> 1
3791:LVR:0:NEG:org.apache.commons.io.comparator.SizeFileComparator@compare:111:0 |==> -1
3792:COR:file1.isDirectory():TRUE:org.apache.commons.io.comparator.SizeFileComparator@compare:110:file1.isDirectory() |==> false
3793:COR:file1.isDirectory():FALSE:org.apache.commons.io.comparator.SizeFileComparator@compare:110:file1.isDirectory() |==> true
3794:LVR:0:POS:org.apache.commons.io.comparator.SizeFileComparator@compare:115:0 |==> 1
3795:LVR:0:NEG:org.apache.commons.io.comparator.SizeFileComparator@compare:115:0 |==> -1
3796:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.io.comparator.SizeFileComparator@compare:117:sumDirectoryContents && file2.exists() |==> sumDirectoryContents == file2.exists()
3797:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.io.comparator.SizeFileComparator@compare:117:sumDirectoryContents && file2.exists() |==> false
3798:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.io.comparator.SizeFileComparator@compare:117:sumDirectoryContents && file2.exists() |==> sumDirectoryContents
3799:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.io.comparator.SizeFileComparator@compare:117:sumDirectoryContents && file2.exists() |==> file2.exists()
3800:LVR:0:POS:org.apache.commons.io.comparator.SizeFileComparator@compare:117:0 |==> 1
3801:LVR:0:NEG:org.apache.commons.io.comparator.SizeFileComparator@compare:117:0 |==> -1
3802:COR:file2.isDirectory():TRUE:org.apache.commons.io.comparator.SizeFileComparator@compare:116:file2.isDirectory() |==> false
3803:COR:file2.isDirectory():FALSE:org.apache.commons.io.comparator.SizeFileComparator@compare:116:file2.isDirectory() |==> true
3804:AOR:-(long,long):%(long,long):org.apache.commons.io.comparator.SizeFileComparator@compare:121:size1 - size2 |==> size1 % size2
3805:AOR:-(long,long):*(long,long):org.apache.commons.io.comparator.SizeFileComparator@compare:121:size1 - size2 |==> size1 * size2
3806:AOR:-(long,long):+(long,long):org.apache.commons.io.comparator.SizeFileComparator@compare:121:size1 - size2 |==> size1 + size2
3807:AOR:-(long,long):/(long,long):org.apache.commons.io.comparator.SizeFileComparator@compare:121:size1 - size2 |==> size1 / size2
3808:LVR:NEG:0:org.apache.commons.io.comparator.SizeFileComparator@compare:123:-1 |==> 0
3809:LVR:NEG:POS:org.apache.commons.io.comparator.SizeFileComparator@compare:123:-1 |==> 1
3810:LVR:POS:0:org.apache.commons.io.comparator.SizeFileComparator@compare:125:1 |==> 0
3811:LVR:POS:NEG:org.apache.commons.io.comparator.SizeFileComparator@compare:125:1 |==> -1
3812:LVR:0:POS:org.apache.commons.io.comparator.SizeFileComparator@compare:127:0 |==> 1
3813:LVR:0:NEG:org.apache.commons.io.comparator.SizeFileComparator@compare:127:0 |==> -1
3814:LVR:0:POS:org.apache.commons.io.comparator.SizeFileComparator@compare:124:0 |==> 1
3815:LVR:0:NEG:org.apache.commons.io.comparator.SizeFileComparator@compare:124:0 |==> -1
3816:ROR:>(long,long):!=(long,long):org.apache.commons.io.comparator.SizeFileComparator@compare:124:result > 0 |==> result != 0
3817:ROR:>(long,long):>=(long,long):org.apache.commons.io.comparator.SizeFileComparator@compare:124:result > 0 |==> result >= 0
3818:ROR:>(long,long):FALSE(long,long):org.apache.commons.io.comparator.SizeFileComparator@compare:124:result > 0 |==> false
3819:LVR:0:POS:org.apache.commons.io.comparator.SizeFileComparator@compare:122:0 |==> 1
3820:LVR:0:NEG:org.apache.commons.io.comparator.SizeFileComparator@compare:122:0 |==> -1
3821:ROR:<(long,long):!=(long,long):org.apache.commons.io.comparator.SizeFileComparator@compare:122:result < 0 |==> result != 0
3822:ROR:<(long,long):<=(long,long):org.apache.commons.io.comparator.SizeFileComparator@compare:122:result < 0 |==> result <= 0
3823:ROR:<(long,long):FALSE(long,long):org.apache.commons.io.comparator.SizeFileComparator@compare:122:result < 0 |==> false
3824:LVR:TRUE:FALSE:org.apache.commons.io.filefilter.AgeFileFilter@<init>:65:true |==> false
3825:LVR:TRUE:FALSE:org.apache.commons.io.filefilter.AgeFileFilter@<init>:88:true |==> false
3826:LVR:TRUE:FALSE:org.apache.commons.io.filefilter.AgeFileFilter@<init>:111:true |==> false
3827:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.io.filefilter.AndFileFilter@<init>:61:fileFilters == null |==> false
3828:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.io.filefilter.AndFileFilter@<init>:76:filter1 == null |==> false
3829:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.io.filefilter.AndFileFilter@<init>:76:filter2 == null |==> false
3830:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.io.filefilter.AndFileFilter@<init>:76:filter1 == null || filter2 == null |==> filter1 == null != (filter2 == null)
3831:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.io.filefilter.AndFileFilter@<init>:76:filter1 == null || filter2 == null |==> filter1 == null
3832:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.io.filefilter.AndFileFilter@<init>:76:filter1 == null || filter2 == null |==> filter2 == null
3833:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.io.filefilter.AndFileFilter@<init>:76:filter1 == null || filter2 == null |==> true
3834:LVR:POS:0:org.apache.commons.io.filefilter.AndFileFilter@<init>:79:2 |==> 0
3835:LVR:POS:NEG:org.apache.commons.io.filefilter.AndFileFilter@<init>:79:2 |==> -2
3836:STD:<CALL>:<NO-OP>:org.apache.commons.io.filefilter.AndFileFilter@<init>:80:addFileFilter(filter1) |==> <NO-OP>
3837:STD:<CALL>:<NO-OP>:org.apache.commons.io.filefilter.AndFileFilter@<init>:81:addFileFilter(filter2) |==> <NO-OP>
3838:STD:<CALL>:<NO-OP>:org.apache.commons.io.filefilter.AndFileFilter@addFileFilter:88:this.fileFilters.add(ioFileFilter) |==> <NO-OP>
3839:STD:<CALL>:<NO-OP>:org.apache.commons.io.filefilter.AndFileFilter@setFileFilters:109:this.fileFilters.clear() |==> <NO-OP>
3840:STD:<CALL>:<NO-OP>:org.apache.commons.io.filefilter.AndFileFilter@setFileFilters:110:this.fileFilters.addAll(fileFilters) |==> <NO-OP>
3841:LVR:FALSE:TRUE:org.apache.commons.io.filefilter.AndFileFilter@accept:119:false |==> true
3842:COR:this.fileFilters.isEmpty():TRUE:org.apache.commons.io.filefilter.AndFileFilter@accept:118:this.fileFilters.isEmpty() |==> false
3843:COR:this.fileFilters.isEmpty():FALSE:org.apache.commons.io.filefilter.AndFileFilter@accept:118:this.fileFilters.isEmpty() |==> true
3844:LVR:FALSE:TRUE:org.apache.commons.io.filefilter.AndFileFilter@accept:123:false |==> true
3845:LVR:TRUE:FALSE:org.apache.commons.io.filefilter.AndFileFilter@accept:126:true |==> false
3846:LVR:FALSE:TRUE:org.apache.commons.io.filefilter.AndFileFilter@accept:135:false |==> true
3847:COR:this.fileFilters.isEmpty():TRUE:org.apache.commons.io.filefilter.AndFileFilter@accept:134:this.fileFilters.isEmpty() |==> false
3848:COR:this.fileFilters.isEmpty():FALSE:org.apache.commons.io.filefilter.AndFileFilter@accept:134:this.fileFilters.isEmpty() |==> true
3849:LVR:FALSE:TRUE:org.apache.commons.io.filefilter.AndFileFilter@accept:139:false |==> true
3850:LVR:TRUE:FALSE:org.apache.commons.io.filefilter.AndFileFilter@accept:142:true |==> false
3851:STD:<CALL>:<NO-OP>:org.apache.commons.io.filefilter.AndFileFilter@toString:153:buffer.append(super.toString()) |==> <NO-OP>
3852:STD:<CALL>:<NO-OP>:org.apache.commons.io.filefilter.AndFileFilter@toString:154:buffer.append("(") |==> <NO-OP>
3853:LVR:0:POS:org.apache.commons.io.filefilter.AndFileFilter@toString:156:0 |==> 1
3854:LVR:0:NEG:org.apache.commons.io.filefilter.AndFileFilter@toString:156:0 |==> -1
3855:ROR:<(int,int):!=(int,int):org.apache.commons.io.filefilter.AndFileFilter@toString:156:i < fileFilters.size() |==> i != fileFilters.size()
3856:ROR:<(int,int):<=(int,int):org.apache.commons.io.filefilter.AndFileFilter@toString:156:i < fileFilters.size() |==> i <= fileFilters.size()
3857:ROR:<(int,int):FALSE(int,int):org.apache.commons.io.filefilter.AndFileFilter@toString:156:i < fileFilters.size() |==> false
3858:STD:<CALL>:<NO-OP>:org.apache.commons.io.filefilter.AndFileFilter@toString:158:buffer.append(",") |==> <NO-OP>
3859:LVR:0:POS:org.apache.commons.io.filefilter.AndFileFilter@toString:157:0 |==> 1
3860:LVR:0:NEG:org.apache.commons.io.filefilter.AndFileFilter@toString:157:0 |==> -1
3861:ROR:>(int,int):!=(int,int):org.apache.commons.io.filefilter.AndFileFilter@toString:157:i > 0 |==> i != 0
3862:ROR:>(int,int):>=(int,int):org.apache.commons.io.filefilter.AndFileFilter@toString:157:i > 0 |==> i >= 0
3863:ROR:>(int,int):FALSE(int,int):org.apache.commons.io.filefilter.AndFileFilter@toString:157:i > 0 |==> false
3864:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.io.filefilter.AndFileFilter@toString:161:filter == null |==> false
3865:STD:<CALL>:<NO-OP>:org.apache.commons.io.filefilter.AndFileFilter@toString:161:buffer.append(filter == null ? "null" : filter.toString()) |==> <NO-OP>
3866:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.apache.commons.io.filefilter.AndFileFilter@toString:155:fileFilters != null |==> true
3867:STD:<CALL>:<NO-OP>:org.apache.commons.io.filefilter.AndFileFilter@toString:164:buffer.append(")") |==> <NO-OP>
3868:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.io.filefilter.DelegateFileFilter@<init>:46:filter == null |==> false
3869:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.io.filefilter.DelegateFileFilter@<init>:59:filter == null |==> false
3870:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.apache.commons.io.filefilter.DelegateFileFilter@accept:74:fileFilter != null |==> true
3871:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.apache.commons.io.filefilter.DelegateFileFilter@accept:90:filenameFilter != null |==> true
3872:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.apache.commons.io.filefilter.DelegateFileFilter@toString:104:fileFilter != null |==> true
3873:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.io.filefilter.EmptyFileFilter@accept:79:files == null |==> false
3874:LVR:0:POS:org.apache.commons.io.filefilter.EmptyFileFilter@accept:79:0 |==> 1
3875:LVR:0:NEG:org.apache.commons.io.filefilter.EmptyFileFilter@accept:79:0 |==> -1
3876:ROR:==(int,int):<=(int,int):org.apache.commons.io.filefilter.EmptyFileFilter@accept:79:files.length == 0 |==> files.length <= 0
3877:ROR:==(int,int):>=(int,int):org.apache.commons.io.filefilter.EmptyFileFilter@accept:79:files.length == 0 |==> files.length >= 0
3878:ROR:==(int,int):FALSE(int,int):org.apache.commons.io.filefilter.EmptyFileFilter@accept:79:files.length == 0 |==> false
3879:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.io.filefilter.EmptyFileFilter@accept:79:files == null || files.length == 0 |==> files == null != (files.length == 0)
3880:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.io.filefilter.EmptyFileFilter@accept:79:files == null || files.length == 0 |==> files == null
3881:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.io.filefilter.EmptyFileFilter@accept:79:files == null || files.length == 0 |==> files.length == 0
3882:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.io.filefilter.EmptyFileFilter@accept:79:files == null || files.length == 0 |==> true
3883:LVR:0:POS:org.apache.commons.io.filefilter.EmptyFileFilter@accept:81:0 |==> 1
3884:LVR:0:NEG:org.apache.commons.io.filefilter.EmptyFileFilter@accept:81:0 |==> -1
3885:ROR:==(long,long):<=(long,long):org.apache.commons.io.filefilter.EmptyFileFilter@accept:81:file.length() == 0 |==> file.length() <= 0
3886:ROR:==(long,long):>=(long,long):org.apache.commons.io.filefilter.EmptyFileFilter@accept:81:file.length() == 0 |==> file.length() >= 0
3887:ROR:==(long,long):FALSE(long,long):org.apache.commons.io.filefilter.EmptyFileFilter@accept:81:file.length() == 0 |==> false
3888:COR:file.isDirectory():TRUE:org.apache.commons.io.filefilter.EmptyFileFilter@accept:77:file.isDirectory() |==> false
3889:COR:file.isDirectory():FALSE:org.apache.commons.io.filefilter.EmptyFileFilter@accept:77:file.isDirectory() |==> true
3890:LVR:FALSE:TRUE:org.apache.commons.io.filefilter.FalseFileFilter@accept:58:false |==> true
3891:LVR:FALSE:TRUE:org.apache.commons.io.filefilter.FalseFileFilter@accept:69:false |==> true
3892:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.io.filefilter.FileFilterUtils@filter:77:filter == null |==> false
3893:LVR:0:POS:org.apache.commons.io.filefilter.FileFilterUtils@filter:81:0 |==> 1
3894:LVR:0:NEG:org.apache.commons.io.filefilter.FileFilterUtils@filter:81:0 |==> -1
3895:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.io.filefilter.FileFilterUtils@filter:80:files == null |==> false
3896:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.io.filefilter.FileFilterUtils@filter:85:file == null |==> false
3897:STD:<CALL>:<NO-OP>:org.apache.commons.io.filefilter.FileFilterUtils@filter:89:acceptedFiles.add(file) |==> <NO-OP>
3898:COR:filter.accept(file):TRUE:org.apache.commons.io.filefilter.FileFilterUtils@filter:88:filter.accept(file) |==> false
3899:COR:filter.accept(file):FALSE:org.apache.commons.io.filefilter.FileFilterUtils@filter:88:filter.accept(file) |==> true
3900:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.io.filefilter.FileFilterUtils@filter:270:filter == null |==> false
3901:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.io.filefilter.FileFilterUtils@filter:275:file == null |==> false
3902:STD:<CALL>:<NO-OP>:org.apache.commons.io.filefilter.FileFilterUtils@filter:279:acceptedFiles.add(file) |==> <NO-OP>
3903:COR:filter.accept(file):TRUE:org.apache.commons.io.filefilter.FileFilterUtils@filter:278:filter.accept(file) |==> false
3904:COR:filter.accept(file):FALSE:org.apache.commons.io.filefilter.FileFilterUtils@filter:278:filter.accept(file) |==> true
3905:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.apache.commons.io.filefilter.FileFilterUtils@filter:273:files != null |==> true
3906:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.io.filefilter.FileFilterUtils@toList:449:filters == null |==> false
3907:LVR:0:POS:org.apache.commons.io.filefilter.FileFilterUtils@toList:453:0 |==> 1
3908:LVR:0:NEG:org.apache.commons.io.filefilter.FileFilterUtils@toList:453:0 |==> -1
3909:ROR:<(int,int):!=(int,int):org.apache.commons.io.filefilter.FileFilterUtils@toList:453:i < filters.length |==> i != filters.length
3910:ROR:<(int,int):<=(int,int):org.apache.commons.io.filefilter.FileFilterUtils@toList:453:i < filters.length |==> i <= filters.length
3911:ROR:<(int,int):FALSE(int,int):org.apache.commons.io.filefilter.FileFilterUtils@toList:453:i < filters.length |==> false
3912:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.io.filefilter.FileFilterUtils@toList:454:filters[i] == null |==> false
3913:STD:<CALL>:<NO-OP>:org.apache.commons.io.filefilter.FileFilterUtils@toList:457:list.add(filters[i]) |==> <NO-OP>
3914:LVR:TRUE:FALSE:org.apache.commons.io.filefilter.FileFilterUtils@sizeRangeFileFilter:637:true |==> false
3915:LVR:POS:0:org.apache.commons.io.filefilter.FileFilterUtils@sizeRangeFileFilter:638:1L |==> 0L
3916:LVR:POS:NEG:org.apache.commons.io.filefilter.FileFilterUtils@sizeRangeFileFilter:638:1L |==> -1L
3917:AOR:+(long,long):%(long,long):org.apache.commons.io.filefilter.FileFilterUtils@sizeRangeFileFilter:638:maxSizeInclusive + 1L |==> maxSizeInclusive % 1L
3918:AOR:+(long,long):*(long,long):org.apache.commons.io.filefilter.FileFilterUtils@sizeRangeFileFilter:638:maxSizeInclusive + 1L |==> maxSizeInclusive * 1L
3919:AOR:+(long,long):-(long,long):org.apache.commons.io.filefilter.FileFilterUtils@sizeRangeFileFilter:638:maxSizeInclusive + 1L |==> maxSizeInclusive - 1L
3920:AOR:+(long,long):/(long,long):org.apache.commons.io.filefilter.FileFilterUtils@sizeRangeFileFilter:638:maxSizeInclusive + 1L |==> maxSizeInclusive / 1L
3921:LVR:FALSE:TRUE:org.apache.commons.io.filefilter.FileFilterUtils@sizeRangeFileFilter:638:false |==> true
3922:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.io.filefilter.FileFilterUtils@makeCVSAware:741:filter == null |==> false
3923:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.io.filefilter.FileFilterUtils@makeSVNAware:758:filter == null |==> false
3924:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.io.filefilter.FileFilterUtils@makeDirectoryOnly:775:filter == null |==> false
3925:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.io.filefilter.FileFilterUtils@makeFileOnly:790:filter == null |==> false
3926:LVR:0:POS:org.apache.commons.io.filefilter.MagicNumberFileFilter@<init>:112:0 |==> 1
3927:LVR:0:NEG:org.apache.commons.io.filefilter.MagicNumberFileFilter@<init>:112:0 |==> -1
3928:LVR:0:POS:org.apache.commons.io.filefilter.MagicNumberFileFilter@<init>:137:0 |==> 1
3929:LVR:0:NEG:org.apache.commons.io.filefilter.MagicNumberFileFilter@<init>:137:0 |==> -1
3930:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.io.filefilter.MagicNumberFileFilter@<init>:161:magicNumber == null |==> false
3931:LVR:0:POS:org.apache.commons.io.filefilter.MagicNumberFileFilter@<init>:164:0 |==> 1
3932:LVR:0:NEG:org.apache.commons.io.filefilter.MagicNumberFileFilter@<init>:164:0 |==> -1
3933:ROR:==(int,int):<=(int,int):org.apache.commons.io.filefilter.MagicNumberFileFilter@<init>:164:magicNumber.length() == 0 |==> magicNumber.length() <= 0
3934:ROR:==(int,int):>=(int,int):org.apache.commons.io.filefilter.MagicNumberFileFilter@<init>:164:magicNumber.length() == 0 |==> magicNumber.length() >= 0
3935:ROR:==(int,int):FALSE(int,int):org.apache.commons.io.filefilter.MagicNumberFileFilter@<init>:164:magicNumber.length() == 0 |==> false
3936:LVR:0:POS:org.apache.commons.io.filefilter.MagicNumberFileFilter@<init>:167:0 |==> 1
3937:LVR:0:NEG:org.apache.commons.io.filefilter.MagicNumberFileFilter@<init>:167:0 |==> -1
3938:ROR:<(long,long):!=(long,long):org.apache.commons.io.filefilter.MagicNumberFileFilter@<init>:167:offset < 0 |==> offset != 0
3939:ROR:<(long,long):<=(long,long):org.apache.commons.io.filefilter.MagicNumberFileFilter@<init>:167:offset < 0 |==> offset <= 0
3940:ROR:<(long,long):FALSE(long,long):org.apache.commons.io.filefilter.MagicNumberFileFilter@<init>:167:offset < 0 |==> false
3941:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.io.filefilter.MagicNumberFileFilter@<init>:206:magicNumber == null |==> false
3942:LVR:0:POS:org.apache.commons.io.filefilter.MagicNumberFileFilter@<init>:209:0 |==> 1
3943:LVR:0:NEG:org.apache.commons.io.filefilter.MagicNumberFileFilter@<init>:209:0 |==> -1
3944:ROR:==(int,int):<=(int,int):org.apache.commons.io.filefilter.MagicNumberFileFilter@<init>:209:magicNumber.length == 0 |==> magicNumber.length <= 0
3945:ROR:==(int,int):>=(int,int):org.apache.commons.io.filefilter.MagicNumberFileFilter@<init>:209:magicNumber.length == 0 |==> magicNumber.length >= 0
3946:ROR:==(int,int):FALSE(int,int):org.apache.commons.io.filefilter.MagicNumberFileFilter@<init>:209:magicNumber.length == 0 |==> false
3947:LVR:0:POS:org.apache.commons.io.filefilter.MagicNumberFileFilter@<init>:212:0 |==> 1
3948:LVR:0:NEG:org.apache.commons.io.filefilter.MagicNumberFileFilter@<init>:212:0 |==> -1
3949:ROR:<(long,long):!=(long,long):org.apache.commons.io.filefilter.MagicNumberFileFilter@<init>:212:offset < 0 |==> offset != 0
3950:ROR:<(long,long):<=(long,long):org.apache.commons.io.filefilter.MagicNumberFileFilter@<init>:212:offset < 0 |==> offset <= 0
3951:ROR:<(long,long):FALSE(long,long):org.apache.commons.io.filefilter.MagicNumberFileFilter@<init>:212:offset < 0 |==> false
3952:LVR:0:POS:org.apache.commons.io.filefilter.MagicNumberFileFilter@<init>:217:0 |==> 1
3953:LVR:0:NEG:org.apache.commons.io.filefilter.MagicNumberFileFilter@<init>:217:0 |==> -1
3954:LVR:0:POS:org.apache.commons.io.filefilter.MagicNumberFileFilter@<init>:217:0 |==> 1
3955:LVR:0:NEG:org.apache.commons.io.filefilter.MagicNumberFileFilter@<init>:217:0 |==> -1
3956:STD:<CALL>:<NO-OP>:org.apache.commons.io.filefilter.MagicNumberFileFilter@<init>:217:System.arraycopy(magicNumber, 0, this.magicNumbers, 0, magicNumber.length) |==> <NO-OP>
3957:STD:<CALL>:<NO-OP>:org.apache.commons.io.filefilter.MagicNumberFileFilter@accept:244:randomAccessFile.seek(byteOffset) |==> <NO-OP>
3958:LVR:FALSE:TRUE:org.apache.commons.io.filefilter.MagicNumberFileFilter@accept:247:false |==> true
3959:ROR:!=(int,int):<(int,int):org.apache.commons.io.filefilter.MagicNumberFileFilter@accept:246:read != magicNumbers.length |==> read < magicNumbers.length
3960:ROR:!=(int,int):>(int,int):org.apache.commons.io.filefilter.MagicNumberFileFilter@accept:246:read != magicNumbers.length |==> read > magicNumbers.length
3961:ROR:!=(int,int):TRUE(int,int):org.apache.commons.io.filefilter.MagicNumberFileFilter@accept:246:read != magicNumbers.length |==> true
3962:STD:<CALL>:<NO-OP>:org.apache.commons.io.filefilter.MagicNumberFileFilter@accept:253:IOUtils.closeQuietly(randomAccessFile) |==> <NO-OP>
3963:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.apache.commons.io.filefilter.MagicNumberFileFilter@accept:239:file != null |==> true
3964:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.io.filefilter.MagicNumberFileFilter@accept:239:file != null && file.isFile() |==> file != null == file.isFile()
3965:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.io.filefilter.MagicNumberFileFilter@accept:239:file != null && file.isFile() |==> false
3966:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.io.filefilter.MagicNumberFileFilter@accept:239:file != null && file.isFile() |==> file != null
3967:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.io.filefilter.MagicNumberFileFilter@accept:239:file != null && file.isFile() |==> file.isFile()
3968:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.io.filefilter.MagicNumberFileFilter@accept:239:file != null && file.isFile() && file.canRead() |==> (file != null && file.isFile()) == file.canRead()
3969:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.io.filefilter.MagicNumberFileFilter@accept:239:file != null && file.isFile() && file.canRead() |==> false
3970:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.io.filefilter.MagicNumberFileFilter@accept:239:file != null && file.isFile() && file.canRead() |==> file != null && file.isFile()
3971:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.io.filefilter.MagicNumberFileFilter@accept:239:file != null && file.isFile() && file.canRead() |==> file.canRead()
3972:LVR:FALSE:TRUE:org.apache.commons.io.filefilter.MagicNumberFileFilter@accept:257:false |==> true
3973:STD:<CALL>:<NO-OP>:org.apache.commons.io.filefilter.MagicNumberFileFilter@toString:269:builder.append("(") |==> <NO-OP>
3974:STD:<CALL>:<NO-OP>:org.apache.commons.io.filefilter.MagicNumberFileFilter@toString:270:builder.append(new String(magicNumbers)) |==> <NO-OP>
3975:STD:<CALL>:<NO-OP>:org.apache.commons.io.filefilter.MagicNumberFileFilter@toString:271:builder.append(",") |==> <NO-OP>
3976:STD:<CALL>:<NO-OP>:org.apache.commons.io.filefilter.MagicNumberFileFilter@toString:272:builder.append(this.byteOffset) |==> <NO-OP>
3977:STD:<CALL>:<NO-OP>:org.apache.commons.io.filefilter.MagicNumberFileFilter@toString:273:builder.append(")") |==> <NO-OP>
3978:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.io.filefilter.NameFileFilter@<init>:69:name == null |==> false
3979:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.io.filefilter.NameFileFilter@<init>:73:caseSensitivity == null |==> false
3980:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.io.filefilter.NameFileFilter@<init>:100:names == null |==> false
3981:LVR:0:POS:org.apache.commons.io.filefilter.NameFileFilter@<init>:104:0 |==> 1
3982:LVR:0:NEG:org.apache.commons.io.filefilter.NameFileFilter@<init>:104:0 |==> -1
3983:LVR:0:POS:org.apache.commons.io.filefilter.NameFileFilter@<init>:104:0 |==> 1
3984:LVR:0:NEG:org.apache.commons.io.filefilter.NameFileFilter@<init>:104:0 |==> -1
3985:STD:<CALL>:<NO-OP>:org.apache.commons.io.filefilter.NameFileFilter@<init>:104:System.arraycopy(names, 0, this.names, 0, names.length) |==> <NO-OP>
3986:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.io.filefilter.NameFileFilter@<init>:105:caseSensitivity == null |==> false
3987:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.io.filefilter.NameFileFilter@<init>:128:names == null |==> false
3988:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.io.filefilter.NameFileFilter@<init>:132:caseSensitivity == null |==> false
3989:LVR:TRUE:FALSE:org.apache.commons.io.filefilter.NameFileFilter@accept:147:true |==> false
3990:COR:caseSensitivity.checkEquals(name, name2):TRUE:org.apache.commons.io.filefilter.NameFileFilter@accept:146:caseSensitivity.checkEquals(name, name2) |==> false
3991:COR:caseSensitivity.checkEquals(name, name2):FALSE:org.apache.commons.io.filefilter.NameFileFilter@accept:146:caseSensitivity.checkEquals(name, name2) |==> true
3992:LVR:FALSE:TRUE:org.apache.commons.io.filefilter.NameFileFilter@accept:150:false |==> true
3993:LVR:TRUE:FALSE:org.apache.commons.io.filefilter.NameFileFilter@accept:164:true |==> false
3994:COR:caseSensitivity.checkEquals(name, name2):TRUE:org.apache.commons.io.filefilter.NameFileFilter@accept:163:caseSensitivity.checkEquals(name, name2) |==> false
3995:COR:caseSensitivity.checkEquals(name, name2):FALSE:org.apache.commons.io.filefilter.NameFileFilter@accept:163:caseSensitivity.checkEquals(name, name2) |==> true
3996:LVR:FALSE:TRUE:org.apache.commons.io.filefilter.NameFileFilter@accept:167:false |==> true
3997:STD:<CALL>:<NO-OP>:org.apache.commons.io.filefilter.NameFileFilter@toString:178:buffer.append(super.toString()) |==> <NO-OP>
3998:STD:<CALL>:<NO-OP>:org.apache.commons.io.filefilter.NameFileFilter@toString:179:buffer.append("(") |==> <NO-OP>
3999:LVR:0:POS:org.apache.commons.io.filefilter.NameFileFilter@toString:181:0 |==> 1
4000:LVR:0:NEG:org.apache.commons.io.filefilter.NameFileFilter@toString:181:0 |==> -1
4001:ROR:<(int,int):!=(int,int):org.apache.commons.io.filefilter.NameFileFilter@toString:181:i < names.length |==> i != names.length
4002:ROR:<(int,int):<=(int,int):org.apache.commons.io.filefilter.NameFileFilter@toString:181:i < names.length |==> i <= names.length
4003:ROR:<(int,int):FALSE(int,int):org.apache.commons.io.filefilter.NameFileFilter@toString:181:i < names.length |==> false
4004:STD:<CALL>:<NO-OP>:org.apache.commons.io.filefilter.NameFileFilter@toString:183:buffer.append(",") |==> <NO-OP>
4005:LVR:0:POS:org.apache.commons.io.filefilter.NameFileFilter@toString:182:0 |==> 1
4006:LVR:0:NEG:org.apache.commons.io.filefilter.NameFileFilter@toString:182:0 |==> -1
4007:ROR:>(int,int):!=(int,int):org.apache.commons.io.filefilter.NameFileFilter@toString:182:i > 0 |==> i != 0
4008:ROR:>(int,int):>=(int,int):org.apache.commons.io.filefilter.NameFileFilter@toString:182:i > 0 |==> i >= 0
4009:ROR:>(int,int):FALSE(int,int):org.apache.commons.io.filefilter.NameFileFilter@toString:182:i > 0 |==> false
4010:STD:<CALL>:<NO-OP>:org.apache.commons.io.filefilter.NameFileFilter@toString:185:buffer.append(names[i]) |==> <NO-OP>
4011:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.apache.commons.io.filefilter.NameFileFilter@toString:180:names != null |==> true
4012:STD:<CALL>:<NO-OP>:org.apache.commons.io.filefilter.NameFileFilter@toString:188:buffer.append(")") |==> <NO-OP>
4013:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.io.filefilter.NotFileFilter@<init>:41:filter == null |==> false
4014:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.io.filefilter.OrFileFilter@<init>:60:fileFilters == null |==> false
4015:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.io.filefilter.OrFileFilter@<init>:75:filter1 == null |==> false
4016:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.io.filefilter.OrFileFilter@<init>:75:filter2 == null |==> false
4017:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.io.filefilter.OrFileFilter@<init>:75:filter1 == null || filter2 == null |==> filter1 == null != (filter2 == null)
4018:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.io.filefilter.OrFileFilter@<init>:75:filter1 == null || filter2 == null |==> filter1 == null
4019:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.io.filefilter.OrFileFilter@<init>:75:filter1 == null || filter2 == null |==> filter2 == null
4020:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.io.filefilter.OrFileFilter@<init>:75:filter1 == null || filter2 == null |==> true
4021:LVR:POS:0:org.apache.commons.io.filefilter.OrFileFilter@<init>:78:2 |==> 0
4022:LVR:POS:NEG:org.apache.commons.io.filefilter.OrFileFilter@<init>:78:2 |==> -2
4023:STD:<CALL>:<NO-OP>:org.apache.commons.io.filefilter.OrFileFilter@<init>:79:addFileFilter(filter1) |==> <NO-OP>
4024:STD:<CALL>:<NO-OP>:org.apache.commons.io.filefilter.OrFileFilter@<init>:80:addFileFilter(filter2) |==> <NO-OP>
4025:STD:<CALL>:<NO-OP>:org.apache.commons.io.filefilter.OrFileFilter@addFileFilter:87:this.fileFilters.add(ioFileFilter) |==> <NO-OP>
4026:STD:<CALL>:<NO-OP>:org.apache.commons.io.filefilter.OrFileFilter@setFileFilters:108:this.fileFilters.clear() |==> <NO-OP>
4027:STD:<CALL>:<NO-OP>:org.apache.commons.io.filefilter.OrFileFilter@setFileFilters:109:this.fileFilters.addAll(fileFilters) |==> <NO-OP>
4028:LVR:TRUE:FALSE:org.apache.commons.io.filefilter.OrFileFilter@accept:119:true |==> false
4029:COR:fileFilter.accept(file):TRUE:org.apache.commons.io.filefilter.OrFileFilter@accept:118:fileFilter.accept(file) |==> false
4030:COR:fileFilter.accept(file):FALSE:org.apache.commons.io.filefilter.OrFileFilter@accept:118:fileFilter.accept(file) |==> true
4031:LVR:FALSE:TRUE:org.apache.commons.io.filefilter.OrFileFilter@accept:122:false |==> true
4032:LVR:TRUE:FALSE:org.apache.commons.io.filefilter.OrFileFilter@accept:132:true |==> false
4033:COR:fileFilter.accept(file, name):TRUE:org.apache.commons.io.filefilter.OrFileFilter@accept:131:fileFilter.accept(file, name) |==> false
4034:COR:fileFilter.accept(file, name):FALSE:org.apache.commons.io.filefilter.OrFileFilter@accept:131:fileFilter.accept(file, name) |==> true
4035:LVR:FALSE:TRUE:org.apache.commons.io.filefilter.OrFileFilter@accept:135:false |==> true
4036:STD:<CALL>:<NO-OP>:org.apache.commons.io.filefilter.OrFileFilter@toString:146:buffer.append(super.toString()) |==> <NO-OP>
4037:STD:<CALL>:<NO-OP>:org.apache.commons.io.filefilter.OrFileFilter@toString:147:buffer.append("(") |==> <NO-OP>
4038:LVR:0:POS:org.apache.commons.io.filefilter.OrFileFilter@toString:149:0 |==> 1
4039:LVR:0:NEG:org.apache.commons.io.filefilter.OrFileFilter@toString:149:0 |==> -1
4040:ROR:<(int,int):!=(int,int):org.apache.commons.io.filefilter.OrFileFilter@toString:149:i < fileFilters.size() |==> i != fileFilters.size()
4041:ROR:<(int,int):<=(int,int):org.apache.commons.io.filefilter.OrFileFilter@toString:149:i < fileFilters.size() |==> i <= fileFilters.size()
4042:ROR:<(int,int):FALSE(int,int):org.apache.commons.io.filefilter.OrFileFilter@toString:149:i < fileFilters.size() |==> false
4043:STD:<CALL>:<NO-OP>:org.apache.commons.io.filefilter.OrFileFilter@toString:151:buffer.append(",") |==> <NO-OP>
4044:LVR:0:POS:org.apache.commons.io.filefilter.OrFileFilter@toString:150:0 |==> 1
4045:LVR:0:NEG:org.apache.commons.io.filefilter.OrFileFilter@toString:150:0 |==> -1
4046:ROR:>(int,int):!=(int,int):org.apache.commons.io.filefilter.OrFileFilter@toString:150:i > 0 |==> i != 0
4047:ROR:>(int,int):>=(int,int):org.apache.commons.io.filefilter.OrFileFilter@toString:150:i > 0 |==> i >= 0
4048:ROR:>(int,int):FALSE(int,int):org.apache.commons.io.filefilter.OrFileFilter@toString:150:i > 0 |==> false
4049:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.io.filefilter.OrFileFilter@toString:154:filter == null |==> false
4050:STD:<CALL>:<NO-OP>:org.apache.commons.io.filefilter.OrFileFilter@toString:154:buffer.append(filter == null ? "null" : filter.toString()) |==> <NO-OP>
4051:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.apache.commons.io.filefilter.OrFileFilter@toString:148:fileFilters != null |==> true
4052:STD:<CALL>:<NO-OP>:org.apache.commons.io.filefilter.OrFileFilter@toString:157:buffer.append(")") |==> <NO-OP>
4053:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.io.filefilter.PrefixFileFilter@<init>:72:prefix == null |==> false
4054:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.io.filefilter.PrefixFileFilter@<init>:76:caseSensitivity == null |==> false
4055:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.io.filefilter.PrefixFileFilter@<init>:105:prefixes == null |==> false
4056:LVR:0:POS:org.apache.commons.io.filefilter.PrefixFileFilter@<init>:109:0 |==> 1
4057:LVR:0:NEG:org.apache.commons.io.filefilter.PrefixFileFilter@<init>:109:0 |==> -1
4058:LVR:0:POS:org.apache.commons.io.filefilter.PrefixFileFilter@<init>:109:0 |==> 1
4059:LVR:0:NEG:org.apache.commons.io.filefilter.PrefixFileFilter@<init>:109:0 |==> -1
4060:STD:<CALL>:<NO-OP>:org.apache.commons.io.filefilter.PrefixFileFilter@<init>:109:System.arraycopy(prefixes, 0, this.prefixes, 0, prefixes.length) |==> <NO-OP>
4061:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.io.filefilter.PrefixFileFilter@<init>:110:caseSensitivity == null |==> false
4062:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.io.filefilter.PrefixFileFilter@<init>:135:prefixes == null |==> false
4063:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.io.filefilter.PrefixFileFilter@<init>:139:caseSensitivity == null |==> false
4064:LVR:TRUE:FALSE:org.apache.commons.io.filefilter.PrefixFileFilter@accept:153:true |==> false
4065:COR:caseSensitivity.checkStartsWith(name, prefix):TRUE:org.apache.commons.io.filefilter.PrefixFileFilter@accept:152:caseSensitivity.checkStartsWith(name, prefix) |==> false
4066:COR:caseSensitivity.checkStartsWith(name, prefix):FALSE:org.apache.commons.io.filefilter.PrefixFileFilter@accept:152:caseSensitivity.checkStartsWith(name, prefix) |==> true
4067:LVR:FALSE:TRUE:org.apache.commons.io.filefilter.PrefixFileFilter@accept:156:false |==> true
4068:LVR:TRUE:FALSE:org.apache.commons.io.filefilter.PrefixFileFilter@accept:170:true |==> false
4069:COR:caseSensitivity.checkStartsWith(name, prefix):TRUE:org.apache.commons.io.filefilter.PrefixFileFilter@accept:169:caseSensitivity.checkStartsWith(name, prefix) |==> false
4070:COR:caseSensitivity.checkStartsWith(name, prefix):FALSE:org.apache.commons.io.filefilter.PrefixFileFilter@accept:169:caseSensitivity.checkStartsWith(name, prefix) |==> true
4071:LVR:FALSE:TRUE:org.apache.commons.io.filefilter.PrefixFileFilter@accept:173:false |==> true
4072:STD:<CALL>:<NO-OP>:org.apache.commons.io.filefilter.PrefixFileFilter@toString:184:buffer.append(super.toString()) |==> <NO-OP>
4073:STD:<CALL>:<NO-OP>:org.apache.commons.io.filefilter.PrefixFileFilter@toString:185:buffer.append("(") |==> <NO-OP>
4074:LVR:0:POS:org.apache.commons.io.filefilter.PrefixFileFilter@toString:187:0 |==> 1
4075:LVR:0:NEG:org.apache.commons.io.filefilter.PrefixFileFilter@toString:187:0 |==> -1
4076:ROR:<(int,int):!=(int,int):org.apache.commons.io.filefilter.PrefixFileFilter@toString:187:i < prefixes.length |==> i != prefixes.length
4077:ROR:<(int,int):<=(int,int):org.apache.commons.io.filefilter.PrefixFileFilter@toString:187:i < prefixes.length |==> i <= prefixes.length
4078:ROR:<(int,int):FALSE(int,int):org.apache.commons.io.filefilter.PrefixFileFilter@toString:187:i < prefixes.length |==> false
4079:STD:<CALL>:<NO-OP>:org.apache.commons.io.filefilter.PrefixFileFilter@toString:189:buffer.append(",") |==> <NO-OP>
4080:LVR:0:POS:org.apache.commons.io.filefilter.PrefixFileFilter@toString:188:0 |==> 1
4081:LVR:0:NEG:org.apache.commons.io.filefilter.PrefixFileFilter@toString:188:0 |==> -1
4082:ROR:>(int,int):!=(int,int):org.apache.commons.io.filefilter.PrefixFileFilter@toString:188:i > 0 |==> i != 0
4083:ROR:>(int,int):>=(int,int):org.apache.commons.io.filefilter.PrefixFileFilter@toString:188:i > 0 |==> i >= 0
4084:ROR:>(int,int):FALSE(int,int):org.apache.commons.io.filefilter.PrefixFileFilter@toString:188:i > 0 |==> false
4085:STD:<CALL>:<NO-OP>:org.apache.commons.io.filefilter.PrefixFileFilter@toString:191:buffer.append(prefixes[i]) |==> <NO-OP>
4086:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.apache.commons.io.filefilter.PrefixFileFilter@toString:186:prefixes != null |==> true
4087:STD:<CALL>:<NO-OP>:org.apache.commons.io.filefilter.PrefixFileFilter@toString:194:buffer.append(")") |==> <NO-OP>
4088:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.io.filefilter.RegexFileFilter@<init>:57:pattern == null |==> false
4089:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.io.filefilter.RegexFileFilter@<init>:72:pattern == null |==> false
4090:LVR:0:POS:org.apache.commons.io.filefilter.RegexFileFilter@<init>:75:0 |==> 1
4091:LVR:0:NEG:org.apache.commons.io.filefilter.RegexFileFilter@<init>:75:0 |==> -1
4092:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.apache.commons.io.filefilter.RegexFileFilter@<init>:76:caseSensitivity != null |==> true
4093:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.io.filefilter.RegexFileFilter@<init>:76:caseSensitivity != null && !caseSensitivity.isCaseSensitive() |==> caseSensitivity != null == !caseSensitivity.isCaseSensitive()
4094:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.io.filefilter.RegexFileFilter@<init>:76:caseSensitivity != null && !caseSensitivity.isCaseSensitive() |==> false
4095:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.io.filefilter.RegexFileFilter@<init>:76:caseSensitivity != null && !caseSensitivity.isCaseSensitive() |==> caseSensitivity != null
4096:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.io.filefilter.RegexFileFilter@<init>:76:caseSensitivity != null && !caseSensitivity.isCaseSensitive() |==> !caseSensitivity.isCaseSensitive()
4097:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.io.filefilter.RegexFileFilter@<init>:90:pattern == null |==> false
4098:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.io.filefilter.RegexFileFilter@<init>:103:pattern == null |==> false
4099:LVR:TRUE:FALSE:org.apache.commons.io.filefilter.SizeFileFilter@<init>:58:true |==> false
4100:LVR:0:POS:org.apache.commons.io.filefilter.SizeFileFilter@<init>:71:0 |==> 1
4101:LVR:0:NEG:org.apache.commons.io.filefilter.SizeFileFilter@<init>:71:0 |==> -1
4102:ROR:<(long,long):!=(long,long):org.apache.commons.io.filefilter.SizeFileFilter@<init>:71:size < 0 |==> size != 0
4103:ROR:<(long,long):<=(long,long):org.apache.commons.io.filefilter.SizeFileFilter@<init>:71:size < 0 |==> size <= 0
4104:ROR:<(long,long):FALSE(long,long):org.apache.commons.io.filefilter.SizeFileFilter@<init>:71:size < 0 |==> false
4105:ROR:<(long,long):!=(long,long):org.apache.commons.io.filefilter.SizeFileFilter@accept:92:file.length() < size |==> file.length() != size
4106:ROR:<(long,long):<=(long,long):org.apache.commons.io.filefilter.SizeFileFilter@accept:92:file.length() < size |==> file.length() <= size
4107:ROR:<(long,long):FALSE(long,long):org.apache.commons.io.filefilter.SizeFileFilter@accept:92:file.length() < size |==> false
4108:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.io.filefilter.SuffixFileFilter@<init>:73:suffix == null |==> false
4109:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.io.filefilter.SuffixFileFilter@<init>:77:caseSensitivity == null |==> false
4110:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.io.filefilter.SuffixFileFilter@<init>:106:suffixes == null |==> false
4111:LVR:0:POS:org.apache.commons.io.filefilter.SuffixFileFilter@<init>:110:0 |==> 1
4112:LVR:0:NEG:org.apache.commons.io.filefilter.SuffixFileFilter@<init>:110:0 |==> -1
4113:LVR:0:POS:org.apache.commons.io.filefilter.SuffixFileFilter@<init>:110:0 |==> 1
4114:LVR:0:NEG:org.apache.commons.io.filefilter.SuffixFileFilter@<init>:110:0 |==> -1
4115:STD:<CALL>:<NO-OP>:org.apache.commons.io.filefilter.SuffixFileFilter@<init>:110:System.arraycopy(suffixes, 0, this.suffixes, 0, suffixes.length) |==> <NO-OP>
4116:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.io.filefilter.SuffixFileFilter@<init>:111:caseSensitivity == null |==> false
4117:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.io.filefilter.SuffixFileFilter@<init>:136:suffixes == null |==> false
4118:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.io.filefilter.SuffixFileFilter@<init>:140:caseSensitivity == null |==> false
4119:LVR:TRUE:FALSE:org.apache.commons.io.filefilter.SuffixFileFilter@accept:154:true |==> false
4120:COR:caseSensitivity.checkEndsWith(name, suffix):TRUE:org.apache.commons.io.filefilter.SuffixFileFilter@accept:153:caseSensitivity.checkEndsWith(name, suffix) |==> false
4121:COR:caseSensitivity.checkEndsWith(name, suffix):FALSE:org.apache.commons.io.filefilter.SuffixFileFilter@accept:153:caseSensitivity.checkEndsWith(name, suffix) |==> true
4122:LVR:FALSE:TRUE:org.apache.commons.io.filefilter.SuffixFileFilter@accept:157:false |==> true
4123:LVR:TRUE:FALSE:org.apache.commons.io.filefilter.SuffixFileFilter@accept:171:true |==> false
4124:COR:caseSensitivity.checkEndsWith(name, suffix):TRUE:org.apache.commons.io.filefilter.SuffixFileFilter@accept:170:caseSensitivity.checkEndsWith(name, suffix) |==> false
4125:COR:caseSensitivity.checkEndsWith(name, suffix):FALSE:org.apache.commons.io.filefilter.SuffixFileFilter@accept:170:caseSensitivity.checkEndsWith(name, suffix) |==> true
4126:LVR:FALSE:TRUE:org.apache.commons.io.filefilter.SuffixFileFilter@accept:174:false |==> true
4127:STD:<CALL>:<NO-OP>:org.apache.commons.io.filefilter.SuffixFileFilter@toString:185:buffer.append(super.toString()) |==> <NO-OP>
4128:STD:<CALL>:<NO-OP>:org.apache.commons.io.filefilter.SuffixFileFilter@toString:186:buffer.append("(") |==> <NO-OP>
4129:LVR:0:POS:org.apache.commons.io.filefilter.SuffixFileFilter@toString:188:0 |==> 1
4130:LVR:0:NEG:org.apache.commons.io.filefilter.SuffixFileFilter@toString:188:0 |==> -1
4131:ROR:<(int,int):!=(int,int):org.apache.commons.io.filefilter.SuffixFileFilter@toString:188:i < suffixes.length |==> i != suffixes.length
4132:ROR:<(int,int):<=(int,int):org.apache.commons.io.filefilter.SuffixFileFilter@toString:188:i < suffixes.length |==> i <= suffixes.length
4133:ROR:<(int,int):FALSE(int,int):org.apache.commons.io.filefilter.SuffixFileFilter@toString:188:i < suffixes.length |==> false
4134:STD:<CALL>:<NO-OP>:org.apache.commons.io.filefilter.SuffixFileFilter@toString:190:buffer.append(",") |==> <NO-OP>
4135:LVR:0:POS:org.apache.commons.io.filefilter.SuffixFileFilter@toString:189:0 |==> 1
4136:LVR:0:NEG:org.apache.commons.io.filefilter.SuffixFileFilter@toString:189:0 |==> -1
4137:ROR:>(int,int):!=(int,int):org.apache.commons.io.filefilter.SuffixFileFilter@toString:189:i > 0 |==> i != 0
4138:ROR:>(int,int):>=(int,int):org.apache.commons.io.filefilter.SuffixFileFilter@toString:189:i > 0 |==> i >= 0
4139:ROR:>(int,int):FALSE(int,int):org.apache.commons.io.filefilter.SuffixFileFilter@toString:189:i > 0 |==> false
4140:STD:<CALL>:<NO-OP>:org.apache.commons.io.filefilter.SuffixFileFilter@toString:192:buffer.append(suffixes[i]) |==> <NO-OP>
4141:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.apache.commons.io.filefilter.SuffixFileFilter@toString:187:suffixes != null |==> true
4142:STD:<CALL>:<NO-OP>:org.apache.commons.io.filefilter.SuffixFileFilter@toString:195:buffer.append(")") |==> <NO-OP>
4143:LVR:TRUE:FALSE:org.apache.commons.io.filefilter.TrueFileFilter@accept:57:true |==> false
4144:LVR:TRUE:FALSE:org.apache.commons.io.filefilter.TrueFileFilter@accept:68:true |==> false
4145:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.io.filefilter.WildcardFileFilter@<init>:76:wildcard == null |==> false
4146:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.io.filefilter.WildcardFileFilter@<init>:80:caseSensitivity == null |==> false
4147:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.io.filefilter.WildcardFileFilter@<init>:107:wildcards == null |==> false
4148:LVR:0:POS:org.apache.commons.io.filefilter.WildcardFileFilter@<init>:111:0 |==> 1
4149:LVR:0:NEG:org.apache.commons.io.filefilter.WildcardFileFilter@<init>:111:0 |==> -1
4150:LVR:0:POS:org.apache.commons.io.filefilter.WildcardFileFilter@<init>:111:0 |==> 1
4151:LVR:0:NEG:org.apache.commons.io.filefilter.WildcardFileFilter@<init>:111:0 |==> -1
4152:STD:<CALL>:<NO-OP>:org.apache.commons.io.filefilter.WildcardFileFilter@<init>:111:System.arraycopy(wildcards, 0, this.wildcards, 0, wildcards.length) |==> <NO-OP>
4153:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.io.filefilter.WildcardFileFilter@<init>:112:caseSensitivity == null |==> false
4154:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.io.filefilter.WildcardFileFilter@<init>:135:wildcards == null |==> false
4155:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.io.filefilter.WildcardFileFilter@<init>:139:caseSensitivity == null |==> false
4156:LVR:TRUE:FALSE:org.apache.commons.io.filefilter.WildcardFileFilter@accept:154:true |==> false
4157:COR:FilenameUtils.wildcardMatch(name, wildcard, caseSensitivity):TRUE:org.apache.commons.io.filefilter.WildcardFileFilter@accept:153:FilenameUtils.wildcardMatch(name, wildcard, caseSensitivity) |==> false
4158:COR:FilenameUtils.wildcardMatch(name, wildcard, caseSensitivity):FALSE:org.apache.commons.io.filefilter.WildcardFileFilter@accept:153:FilenameUtils.wildcardMatch(name, wildcard, caseSensitivity) |==> true
4159:LVR:FALSE:TRUE:org.apache.commons.io.filefilter.WildcardFileFilter@accept:157:false |==> true
4160:LVR:TRUE:FALSE:org.apache.commons.io.filefilter.WildcardFileFilter@accept:171:true |==> false
4161:COR:FilenameUtils.wildcardMatch(name, wildcard, caseSensitivity):TRUE:org.apache.commons.io.filefilter.WildcardFileFilter@accept:170:FilenameUtils.wildcardMatch(name, wildcard, caseSensitivity) |==> false
4162:COR:FilenameUtils.wildcardMatch(name, wildcard, caseSensitivity):FALSE:org.apache.commons.io.filefilter.WildcardFileFilter@accept:170:FilenameUtils.wildcardMatch(name, wildcard, caseSensitivity) |==> true
4163:LVR:FALSE:TRUE:org.apache.commons.io.filefilter.WildcardFileFilter@accept:174:false |==> true
4164:STD:<CALL>:<NO-OP>:org.apache.commons.io.filefilter.WildcardFileFilter@toString:185:buffer.append(super.toString()) |==> <NO-OP>
4165:STD:<CALL>:<NO-OP>:org.apache.commons.io.filefilter.WildcardFileFilter@toString:186:buffer.append("(") |==> <NO-OP>
4166:LVR:0:POS:org.apache.commons.io.filefilter.WildcardFileFilter@toString:188:0 |==> 1
4167:LVR:0:NEG:org.apache.commons.io.filefilter.WildcardFileFilter@toString:188:0 |==> -1
4168:ROR:<(int,int):!=(int,int):org.apache.commons.io.filefilter.WildcardFileFilter@toString:188:i < wildcards.length |==> i != wildcards.length
4169:ROR:<(int,int):<=(int,int):org.apache.commons.io.filefilter.WildcardFileFilter@toString:188:i < wildcards.length |==> i <= wildcards.length
4170:ROR:<(int,int):FALSE(int,int):org.apache.commons.io.filefilter.WildcardFileFilter@toString:188:i < wildcards.length |==> false
4171:STD:<CALL>:<NO-OP>:org.apache.commons.io.filefilter.WildcardFileFilter@toString:190:buffer.append(",") |==> <NO-OP>
4172:LVR:0:POS:org.apache.commons.io.filefilter.WildcardFileFilter@toString:189:0 |==> 1
4173:LVR:0:NEG:org.apache.commons.io.filefilter.WildcardFileFilter@toString:189:0 |==> -1
4174:ROR:>(int,int):!=(int,int):org.apache.commons.io.filefilter.WildcardFileFilter@toString:189:i > 0 |==> i != 0
4175:ROR:>(int,int):>=(int,int):org.apache.commons.io.filefilter.WildcardFileFilter@toString:189:i > 0 |==> i >= 0
4176:ROR:>(int,int):FALSE(int,int):org.apache.commons.io.filefilter.WildcardFileFilter@toString:189:i > 0 |==> false
4177:STD:<CALL>:<NO-OP>:org.apache.commons.io.filefilter.WildcardFileFilter@toString:192:buffer.append(wildcards[i]) |==> <NO-OP>
4178:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.apache.commons.io.filefilter.WildcardFileFilter@toString:187:wildcards != null |==> true
4179:STD:<CALL>:<NO-OP>:org.apache.commons.io.filefilter.WildcardFileFilter@toString:195:buffer.append(")") |==> <NO-OP>
4180:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.io.filefilter.WildcardFilter@<init>:65:wildcard == null |==> false
4181:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.io.filefilter.WildcardFilter@<init>:78:wildcards == null |==> false
4182:LVR:0:POS:org.apache.commons.io.filefilter.WildcardFilter@<init>:82:0 |==> 1
4183:LVR:0:NEG:org.apache.commons.io.filefilter.WildcardFilter@<init>:82:0 |==> -1
4184:LVR:0:POS:org.apache.commons.io.filefilter.WildcardFilter@<init>:82:0 |==> 1
4185:LVR:0:NEG:org.apache.commons.io.filefilter.WildcardFilter@<init>:82:0 |==> -1
4186:STD:<CALL>:<NO-OP>:org.apache.commons.io.filefilter.WildcardFilter@<init>:82:System.arraycopy(wildcards, 0, this.wildcards, 0, wildcards.length) |==> <NO-OP>
4187:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.io.filefilter.WildcardFilter@<init>:93:wildcards == null |==> false
4188:LVR:FALSE:TRUE:org.apache.commons.io.filefilter.WildcardFilter@accept:110:false |==> true
4189:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.apache.commons.io.filefilter.WildcardFilter@accept:109:dir != null |==> true
4190:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.io.filefilter.WildcardFilter@accept:109:dir != null && new File(dir, name).isDirectory() |==> dir != null == new File(dir, name).isDirectory()
4191:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.io.filefilter.WildcardFilter@accept:109:dir != null && new File(dir, name).isDirectory() |==> false
4192:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.io.filefilter.WildcardFilter@accept:109:dir != null && new File(dir, name).isDirectory() |==> dir != null
4193:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.io.filefilter.WildcardFilter@accept:109:dir != null && new File(dir, name).isDirectory() |==> new File(dir, name).isDirectory()
4194:LVR:TRUE:FALSE:org.apache.commons.io.filefilter.WildcardFilter@accept:115:true |==> false
4195:COR:FilenameUtils.wildcardMatch(name, wildcard):TRUE:org.apache.commons.io.filefilter.WildcardFilter@accept:114:FilenameUtils.wildcardMatch(name, wildcard) |==> false
4196:COR:FilenameUtils.wildcardMatch(name, wildcard):FALSE:org.apache.commons.io.filefilter.WildcardFilter@accept:114:FilenameUtils.wildcardMatch(name, wildcard) |==> true
4197:LVR:FALSE:TRUE:org.apache.commons.io.filefilter.WildcardFilter@accept:119:false |==> true
4198:LVR:FALSE:TRUE:org.apache.commons.io.filefilter.WildcardFilter@accept:131:false |==> true
4199:COR:file.isDirectory():TRUE:org.apache.commons.io.filefilter.WildcardFilter@accept:130:file.isDirectory() |==> false
4200:COR:file.isDirectory():FALSE:org.apache.commons.io.filefilter.WildcardFilter@accept:130:file.isDirectory() |==> true
4201:LVR:TRUE:FALSE:org.apache.commons.io.filefilter.WildcardFilter@accept:136:true |==> false
4202:COR:FilenameUtils.wildcardMatch(file.getName(), wildcard):TRUE:org.apache.commons.io.filefilter.WildcardFilter@accept:135:FilenameUtils.wildcardMatch(file.getName(), wildcard) |==> false
4203:COR:FilenameUtils.wildcardMatch(file.getName(), wildcard):FALSE:org.apache.commons.io.filefilter.WildcardFilter@accept:135:FilenameUtils.wildcardMatch(file.getName(), wildcard) |==> true
4204:LVR:FALSE:TRUE:org.apache.commons.io.filefilter.WildcardFilter@accept:140:false |==> true
4205:STD:<CALL>:<NO-OP>:org.apache.commons.io.input.AutoCloseInputStream@close:63:in.close() |==> <NO-OP>
4206:STD:<CALL>:<NO-OP>:org.apache.commons.io.input.AutoCloseInputStream@afterRead:77:close() |==> <NO-OP>
4207:LVR:NEG:0:org.apache.commons.io.input.AutoCloseInputStream@afterRead:76:-1 |==> 0
4208:LVR:NEG:POS:org.apache.commons.io.input.AutoCloseInputStream@afterRead:76:-1 |==> 1
4209:ROR:==(int,int):<=(int,int):org.apache.commons.io.input.AutoCloseInputStream@afterRead:76:n == -1 |==> n <= -1
4210:ROR:==(int,int):>=(int,int):org.apache.commons.io.input.AutoCloseInputStream@afterRead:76:n == -1 |==> n >= -1
4211:ROR:==(int,int):FALSE(int,int):org.apache.commons.io.input.AutoCloseInputStream@afterRead:76:n == -1 |==> false
4212:STD:<CALL>:<NO-OP>:org.apache.commons.io.input.AutoCloseInputStream@finalize:89:close() |==> <NO-OP>
4213:STD:<CALL>:<NO-OP>:org.apache.commons.io.input.AutoCloseInputStream@finalize:90:super.finalize() |==> <NO-OP>
4214:LVR:POS:0:org.apache.commons.io.input.ProxyInputStream@read:57:1 |==> 0
4215:LVR:POS:NEG:org.apache.commons.io.input.ProxyInputStream@read:57:1 |==> -1
4216:STD:<CALL>:<NO-OP>:org.apache.commons.io.input.ProxyInputStream@read:57:beforeRead(1) |==> <NO-OP>
4217:LVR:NEG:0:org.apache.commons.io.input.ProxyInputStream@read:59:-1 |==> 0
4218:LVR:NEG:POS:org.apache.commons.io.input.ProxyInputStream@read:59:-1 |==> 1
4219:ROR:!=(int,int):<(int,int):org.apache.commons.io.input.ProxyInputStream@read:59:b != -1 |==> b < -1
4220:ROR:!=(int,int):>(int,int):org.apache.commons.io.input.ProxyInputStream@read:59:b != -1 |==> b > -1
4221:ROR:!=(int,int):TRUE(int,int):org.apache.commons.io.input.ProxyInputStream@read:59:b != -1 |==> true
4222:LVR:POS:0:org.apache.commons.io.input.ProxyInputStream@read:59:1 |==> 0
4223:LVR:POS:NEG:org.apache.commons.io.input.ProxyInputStream@read:59:1 |==> -1
4224:LVR:NEG:0:org.apache.commons.io.input.ProxyInputStream@read:59:-1 |==> 0
4225:LVR:NEG:POS:org.apache.commons.io.input.ProxyInputStream@read:59:-1 |==> 1
4226:STD:<CALL>:<NO-OP>:org.apache.commons.io.input.ProxyInputStream@read:59:afterRead(b != -1 ? 1 : -1) |==> <NO-OP>
4227:STD:<CALL>:<NO-OP>:org.apache.commons.io.input.ProxyInputStream@read:62:handleIOException(e) |==> <NO-OP>
4228:LVR:NEG:0:org.apache.commons.io.input.ProxyInputStream@read:63:-1 |==> 0
4229:LVR:NEG:POS:org.apache.commons.io.input.ProxyInputStream@read:63:-1 |==> 1
4230:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.apache.commons.io.input.ProxyInputStream@read:76:bts != null |==> true
4231:LVR:0:POS:org.apache.commons.io.input.ProxyInputStream@read:76:0 |==> 1
4232:LVR:0:NEG:org.apache.commons.io.input.ProxyInputStream@read:76:0 |==> -1
4233:STD:<CALL>:<NO-OP>:org.apache.commons.io.input.ProxyInputStream@read:76:beforeRead(bts != null ? bts.length : 0) |==> <NO-OP>
4234:STD:<CALL>:<NO-OP>:org.apache.commons.io.input.ProxyInputStream@read:78:afterRead(n) |==> <NO-OP>
4235:STD:<CALL>:<NO-OP>:org.apache.commons.io.input.ProxyInputStream@read:81:handleIOException(e) |==> <NO-OP>
4236:LVR:NEG:0:org.apache.commons.io.input.ProxyInputStream@read:82:-1 |==> 0
4237:LVR:NEG:POS:org.apache.commons.io.input.ProxyInputStream@read:82:-1 |==> 1
4238:STD:<CALL>:<NO-OP>:org.apache.commons.io.input.ProxyInputStream@read:97:beforeRead(len) |==> <NO-OP>
4239:STD:<CALL>:<NO-OP>:org.apache.commons.io.input.ProxyInputStream@read:99:afterRead(n) |==> <NO-OP>
4240:STD:<CALL>:<NO-OP>:org.apache.commons.io.input.ProxyInputStream@read:102:handleIOException(e) |==> <NO-OP>
4241:LVR:NEG:0:org.apache.commons.io.input.ProxyInputStream@read:103:-1 |==> 0
4242:LVR:NEG:POS:org.apache.commons.io.input.ProxyInputStream@read:103:-1 |==> 1
4243:STD:<CALL>:<NO-OP>:org.apache.commons.io.input.ProxyInputStream@skip:118:handleIOException(e) |==> <NO-OP>
4244:LVR:0:POS:org.apache.commons.io.input.ProxyInputStream@skip:119:0 |==> 1
4245:LVR:0:NEG:org.apache.commons.io.input.ProxyInputStream@skip:119:0 |==> -1
4246:STD:<CALL>:<NO-OP>:org.apache.commons.io.input.ProxyInputStream@available:133:handleIOException(e) |==> <NO-OP>
4247:LVR:0:POS:org.apache.commons.io.input.ProxyInputStream@available:134:0 |==> 1
4248:LVR:0:NEG:org.apache.commons.io.input.ProxyInputStream@available:134:0 |==> -1
4249:STD:<CALL>:<NO-OP>:org.apache.commons.io.input.ProxyInputStream@close:145:in.close() |==> <NO-OP>
4250:STD:<CALL>:<NO-OP>:org.apache.commons.io.input.ProxyInputStream@close:147:handleIOException(e) |==> <NO-OP>
4251:STD:<CALL>:<NO-OP>:org.apache.commons.io.input.ProxyInputStream@mark:157:in.mark(readlimit) |==> <NO-OP>
4252:STD:<CALL>:<NO-OP>:org.apache.commons.io.input.ProxyInputStream@reset:167:in.reset() |==> <NO-OP>
4253:STD:<CALL>:<NO-OP>:org.apache.commons.io.input.ProxyInputStream@reset:169:handleIOException(e) |==> <NO-OP>
4254:LVR:FALSE:TRUE:org.apache.commons.io.input.BOMInputStream@<init>:107:false |==> true
4255:LVR:FALSE:TRUE:org.apache.commons.io.input.BOMInputStream@<init>:131:false |==> true
4256:LVR:NEG:0:org.apache.commons.io.input.BOMInputStream$1@compare:143:-1 |==> 0
4257:LVR:NEG:POS:org.apache.commons.io.input.BOMInputStream$1@compare:143:-1 |==> 1
4258:ROR:>(int,int):!=(int,int):org.apache.commons.io.input.BOMInputStream$1@compare:142:len1 > len2 |==> len1 != len2
4259:ROR:>(int,int):>=(int,int):org.apache.commons.io.input.BOMInputStream$1@compare:142:len1 > len2 |==> len1 >= len2
4260:ROR:>(int,int):FALSE(int,int):org.apache.commons.io.input.BOMInputStream$1@compare:142:len1 > len2 |==> false
4261:LVR:POS:0:org.apache.commons.io.input.BOMInputStream$1@compare:146:1 |==> 0
4262:LVR:POS:NEG:org.apache.commons.io.input.BOMInputStream$1@compare:146:1 |==> -1
4263:ROR:>(int,int):!=(int,int):org.apache.commons.io.input.BOMInputStream$1@compare:145:len2 > len1 |==> len2 != len1
4264:ROR:>(int,int):>=(int,int):org.apache.commons.io.input.BOMInputStream$1@compare:145:len2 > len1 |==> len2 >= len1
4265:ROR:>(int,int):FALSE(int,int):org.apache.commons.io.input.BOMInputStream$1@compare:145:len2 > len1 |==> false
4266:LVR:0:POS:org.apache.commons.io.input.BOMInputStream$1@compare:148:0 |==> 1
4267:LVR:0:NEG:org.apache.commons.io.input.BOMInputStream$1@compare:148:0 |==> -1
4268:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.io.input.BOMInputStream@<init>:164:boms == null |==> false
4269:LVR:0:POS:org.apache.commons.io.input.BOMInputStream@<init>:164:0 |==> 1
4270:LVR:0:NEG:org.apache.commons.io.input.BOMInputStream@<init>:164:0 |==> -1
4271:ROR:==(int,int):<=(int,int):org.apache.commons.io.input.BOMInputStream@<init>:164:boms.length == 0 |==> boms.length <= 0
4272:ROR:==(int,int):>=(int,int):org.apache.commons.io.input.BOMInputStream@<init>:164:boms.length == 0 |==> boms.length >= 0
4273:ROR:==(int,int):FALSE(int,int):org.apache.commons.io.input.BOMInputStream@<init>:164:boms.length == 0 |==> false
4274:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.io.input.BOMInputStream@<init>:164:boms == null || boms.length == 0 |==> boms == null != (boms.length == 0)
4275:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.io.input.BOMInputStream@<init>:164:boms == null || boms.length == 0 |==> boms == null
4276:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.io.input.BOMInputStream@<init>:164:boms == null || boms.length == 0 |==> boms.length == 0
4277:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.io.input.BOMInputStream@<init>:164:boms == null || boms.length == 0 |==> true
4278:STD:<CALL>:<NO-OP>:org.apache.commons.io.input.BOMInputStream@<init>:169:Arrays.sort(boms, ByteOrderMarkLengthComparator) |==> <NO-OP>
4279:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.apache.commons.io.input.BOMInputStream@hasBOM:182:getBOM() != null |==> true
4280:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.apache.commons.io.input.BOMInputStream@hasBOM:200:byteOrderMark != null |==> true
4281:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.io.input.BOMInputStream@hasBOM:200:byteOrderMark != null && getBOM().equals(bom) |==> byteOrderMark != null == getBOM().equals(bom)
4282:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.io.input.BOMInputStream@hasBOM:200:byteOrderMark != null && getBOM().equals(bom) |==> false
4283:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.io.input.BOMInputStream@hasBOM:200:byteOrderMark != null && getBOM().equals(bom) |==> byteOrderMark != null
4284:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.io.input.BOMInputStream@hasBOM:200:byteOrderMark != null && getBOM().equals(bom) |==> getBOM().equals(bom)
4285:LVR:0:POS:org.apache.commons.io.input.BOMInputStream@getBOM:212:0 |==> 1
4286:LVR:0:NEG:org.apache.commons.io.input.BOMInputStream@getBOM:212:0 |==> -1
4287:LVR:0:POS:org.apache.commons.io.input.BOMInputStream@getBOM:214:0 |==> 1
4288:LVR:0:NEG:org.apache.commons.io.input.BOMInputStream@getBOM:214:0 |==> -1
4289:LVR:0:POS:org.apache.commons.io.input.BOMInputStream@getBOM:217:0 |==> 1
4290:LVR:0:NEG:org.apache.commons.io.input.BOMInputStream@getBOM:217:0 |==> -1
4291:ROR:<(int,int):!=(int,int):org.apache.commons.io.input.BOMInputStream@getBOM:217:i < firstBytes.length |==> i != firstBytes.length
4292:ROR:<(int,int):<=(int,int):org.apache.commons.io.input.BOMInputStream@getBOM:217:i < firstBytes.length |==> i <= firstBytes.length
4293:ROR:<(int,int):FALSE(int,int):org.apache.commons.io.input.BOMInputStream@getBOM:217:i < firstBytes.length |==> false
4294:STD:<INC/DEC>:<NO-OP>:org.apache.commons.io.input.BOMInputStream@getBOM:219:fbLength++ |==> <NO-OP>
4295:LVR:0:POS:org.apache.commons.io.input.BOMInputStream@getBOM:220:0 |==> 1
4296:LVR:0:NEG:org.apache.commons.io.input.BOMInputStream@getBOM:220:0 |==> -1
4297:ROR:<(int,int):!=(int,int):org.apache.commons.io.input.BOMInputStream@getBOM:220:firstBytes[i] < 0 |==> firstBytes[i] != 0
4298:ROR:<(int,int):<=(int,int):org.apache.commons.io.input.BOMInputStream@getBOM:220:firstBytes[i] < 0 |==> firstBytes[i] <= 0
4299:ROR:<(int,int):FALSE(int,int):org.apache.commons.io.input.BOMInputStream@getBOM:220:firstBytes[i] < 0 |==> false
4300:LVR:0:POS:org.apache.commons.io.input.BOMInputStream@getBOM:231:0 |==> 1
4301:LVR:0:NEG:org.apache.commons.io.input.BOMInputStream@getBOM:231:0 |==> -1
4302:ROR:<(int,int):!=(int,int):org.apache.commons.io.input.BOMInputStream@getBOM:228:byteOrderMark.length() < firstBytes.length |==> byteOrderMark.length() != firstBytes.length
4303:ROR:<(int,int):<=(int,int):org.apache.commons.io.input.BOMInputStream@getBOM:228:byteOrderMark.length() < firstBytes.length |==> byteOrderMark.length() <= firstBytes.length
4304:ROR:<(int,int):FALSE(int,int):org.apache.commons.io.input.BOMInputStream@getBOM:228:byteOrderMark.length() < firstBytes.length |==> false
4305:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.apache.commons.io.input.BOMInputStream@getBOM:226:byteOrderMark != null |==> true
4306:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.io.input.BOMInputStream@getBOM:211:firstBytes == null |==> false
4307:STD:<CALL>:<NO-OP>:org.apache.commons.io.input.BOMInputStream@getBOMCharsetName:248:getBOM() |==> <NO-OP>
4308:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.io.input.BOMInputStream@getBOMCharsetName:249:byteOrderMark == null |==> false
4309:STD:<CALL>:<NO-OP>:org.apache.commons.io.input.BOMInputStream@readFirstBytes:262:getBOM() |==> <NO-OP>
4310:ROR:<(int,int):!=(int,int):org.apache.commons.io.input.BOMInputStream@readFirstBytes:263:fbIndex < fbLength |==> fbIndex != fbLength
4311:ROR:<(int,int):<=(int,int):org.apache.commons.io.input.BOMInputStream@readFirstBytes:263:fbIndex < fbLength |==> fbIndex <= fbLength
4312:ROR:<(int,int):FALSE(int,int):org.apache.commons.io.input.BOMInputStream@readFirstBytes:263:fbIndex < fbLength |==> false
4313:LVR:NEG:0:org.apache.commons.io.input.BOMInputStream@readFirstBytes:263:-1 |==> 0
4314:LVR:NEG:POS:org.apache.commons.io.input.BOMInputStream@readFirstBytes:263:-1 |==> 1
4315:COR:matches(bom):TRUE:org.apache.commons.io.input.BOMInputStream@find:273:matches(bom) |==> false
4316:COR:matches(bom):FALSE:org.apache.commons.io.input.BOMInputStream@find:273:matches(bom) |==> true
4317:LVR:0:POS:org.apache.commons.io.input.BOMInputStream@matches:292:0 |==> 1
4318:LVR:0:NEG:org.apache.commons.io.input.BOMInputStream@matches:292:0 |==> -1
4319:ROR:<(int,int):!=(int,int):org.apache.commons.io.input.BOMInputStream@matches:292:i < bom.length() |==> i != bom.length()
4320:ROR:<(int,int):<=(int,int):org.apache.commons.io.input.BOMInputStream@matches:292:i < bom.length() |==> i <= bom.length()
4321:ROR:<(int,int):FALSE(int,int):org.apache.commons.io.input.BOMInputStream@matches:292:i < bom.length() |==> false
4322:LVR:FALSE:TRUE:org.apache.commons.io.input.BOMInputStream@matches:294:false |==> true
4323:ROR:!=(int,int):<(int,int):org.apache.commons.io.input.BOMInputStream@matches:293:bom.get(i) != firstBytes[i] |==> bom.get(i) < firstBytes[i]
4324:ROR:!=(int,int):>(int,int):org.apache.commons.io.input.BOMInputStream@matches:293:bom.get(i) != firstBytes[i] |==> bom.get(i) > firstBytes[i]
4325:ROR:!=(int,int):TRUE(int,int):org.apache.commons.io.input.BOMInputStream@matches:293:bom.get(i) != firstBytes[i] |==> true
4326:LVR:TRUE:FALSE:org.apache.commons.io.input.BOMInputStream@matches:297:true |==> false
4327:LVR:0:POS:org.apache.commons.io.input.BOMInputStream@read:314:0 |==> 1
4328:LVR:0:NEG:org.apache.commons.io.input.BOMInputStream@read:314:0 |==> -1
4329:ROR:>=(int,int):==(int,int):org.apache.commons.io.input.BOMInputStream@read:314:b >= 0 |==> b == 0
4330:ROR:>=(int,int):>(int,int):org.apache.commons.io.input.BOMInputStream@read:314:b >= 0 |==> b > 0
4331:ROR:>=(int,int):TRUE(int,int):org.apache.commons.io.input.BOMInputStream@read:314:b >= 0 |==> true
4332:LVR:0:POS:org.apache.commons.io.input.BOMInputStream@read:332:0 |==> 1
4333:LVR:0:NEG:org.apache.commons.io.input.BOMInputStream@read:332:0 |==> -1
4334:LVR:0:POS:org.apache.commons.io.input.BOMInputStream@read:333:0 |==> 1
4335:LVR:0:NEG:org.apache.commons.io.input.BOMInputStream@read:333:0 |==> -1
4336:LVR:0:POS:org.apache.commons.io.input.BOMInputStream@read:334:0 |==> 1
4337:LVR:0:NEG:org.apache.commons.io.input.BOMInputStream@read:334:0 |==> -1
4338:ROR:>(int,int):!=(int,int):org.apache.commons.io.input.BOMInputStream@read:334:len > 0 |==> len != 0
4339:ROR:>(int,int):>=(int,int):org.apache.commons.io.input.BOMInputStream@read:334:len > 0 |==> len >= 0
4340:ROR:>(int,int):FALSE(int,int):org.apache.commons.io.input.BOMInputStream@read:334:len > 0 |==> false
4341:LVR:0:POS:org.apache.commons.io.input.BOMInputStream@read:334:0 |==> 1
4342:LVR:0:NEG:org.apache.commons.io.input.BOMInputStream@read:334:0 |==> -1
4343:ROR:>=(int,int):==(int,int):org.apache.commons.io.input.BOMInputStream@read:334:b >= 0 |==> b == 0
4344:ROR:>=(int,int):>(int,int):org.apache.commons.io.input.BOMInputStream@read:334:b >= 0 |==> b > 0
4345:ROR:>=(int,int):TRUE(int,int):org.apache.commons.io.input.BOMInputStream@read:334:b >= 0 |==> true
4346:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.io.input.BOMInputStream@read:334:len > 0 && b >= 0 |==> len > 0 == b >= 0
4347:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.io.input.BOMInputStream@read:334:len > 0 && b >= 0 |==> false
4348:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.io.input.BOMInputStream@read:334:len > 0 && b >= 0 |==> len > 0
4349:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.io.input.BOMInputStream@read:334:len > 0 && b >= 0 |==> b >= 0
4350:LVR:POS:0:org.apache.commons.io.input.BOMInputStream@read:337:255 |==> 0
4351:LVR:POS:NEG:org.apache.commons.io.input.BOMInputStream@read:337:255 |==> -255
4352:LOR:&(int,int):^(int,int):org.apache.commons.io.input.BOMInputStream@read:337:b & 255 |==> b ^ 255
4353:LOR:&(int,int):|(int,int):org.apache.commons.io.input.BOMInputStream@read:337:b & 255 |==> b | 255
4354:STD:<INC/DEC>:<NO-OP>:org.apache.commons.io.input.BOMInputStream@read:338:len-- |==> <NO-OP>
4355:STD:<INC/DEC>:<NO-OP>:org.apache.commons.io.input.BOMInputStream@read:339:firstCount++ |==> <NO-OP>
4356:LVR:0:POS:org.apache.commons.io.input.BOMInputStream@read:336:0 |==> 1
4357:LVR:0:NEG:org.apache.commons.io.input.BOMInputStream@read:336:0 |==> -1
4358:ROR:>=(int,int):==(int,int):org.apache.commons.io.input.BOMInputStream@read:336:b >= 0 |==> b == 0
4359:ROR:>=(int,int):>(int,int):org.apache.commons.io.input.BOMInputStream@read:336:b >= 0 |==> b > 0
4360:ROR:>=(int,int):TRUE(int,int):org.apache.commons.io.input.BOMInputStream@read:336:b >= 0 |==> true
4361:LVR:0:POS:org.apache.commons.io.input.BOMInputStream@read:343:0 |==> 1
4362:LVR:0:NEG:org.apache.commons.io.input.BOMInputStream@read:343:0 |==> -1
4363:ROR:<(int,int):!=(int,int):org.apache.commons.io.input.BOMInputStream@read:343:secondCount < 0 |==> secondCount != 0
4364:ROR:<(int,int):<=(int,int):org.apache.commons.io.input.BOMInputStream@read:343:secondCount < 0 |==> secondCount <= 0
4365:ROR:<(int,int):FALSE(int,int):org.apache.commons.io.input.BOMInputStream@read:343:secondCount < 0 |==> false
4366:LVR:0:POS:org.apache.commons.io.input.BOMInputStream@read:343:0 |==> 1
4367:LVR:0:NEG:org.apache.commons.io.input.BOMInputStream@read:343:0 |==> -1
4368:ROR:>(int,int):!=(int,int):org.apache.commons.io.input.BOMInputStream@read:343:firstCount > 0 |==> firstCount != 0
4369:ROR:>(int,int):>=(int,int):org.apache.commons.io.input.BOMInputStream@read:343:firstCount > 0 |==> firstCount >= 0
4370:ROR:>(int,int):FALSE(int,int):org.apache.commons.io.input.BOMInputStream@read:343:firstCount > 0 |==> false
4371:LVR:NEG:0:org.apache.commons.io.input.BOMInputStream@read:343:-1 |==> 0
4372:LVR:NEG:POS:org.apache.commons.io.input.BOMInputStream@read:343:-1 |==> 1
4373:AOR:+(int,int):%(int,int):org.apache.commons.io.input.BOMInputStream@read:343:firstCount + secondCount |==> firstCount % secondCount
4374:AOR:+(int,int):*(int,int):org.apache.commons.io.input.BOMInputStream@read:343:firstCount + secondCount |==> firstCount * secondCount
4375:AOR:+(int,int):-(int,int):org.apache.commons.io.input.BOMInputStream@read:343:firstCount + secondCount |==> firstCount - secondCount
4376:AOR:+(int,int):/(int,int):org.apache.commons.io.input.BOMInputStream@read:343:firstCount + secondCount |==> firstCount / secondCount
4377:LVR:0:POS:org.apache.commons.io.input.BOMInputStream@read:357:0 |==> 1
4378:LVR:0:NEG:org.apache.commons.io.input.BOMInputStream@read:357:0 |==> -1
4379:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.io.input.BOMInputStream@mark:369:firstBytes == null |==> false
4380:STD:<CALL>:<NO-OP>:org.apache.commons.io.input.BOMInputStream@mark:370:in.mark(readlimit) |==> <NO-OP>
4381:COR:markedAtStart:TRUE:org.apache.commons.io.input.BOMInputStream@reset:382:markedAtStart |==> false
4382:COR:markedAtStart:FALSE:org.apache.commons.io.input.BOMInputStream@reset:382:markedAtStart |==> true
4383:STD:<CALL>:<NO-OP>:org.apache.commons.io.input.BOMInputStream@reset:386:in.reset() |==> <NO-OP>
4384:LVR:0:POS:org.apache.commons.io.input.BOMInputStream@skip:400:0 |==> 1
4385:LVR:0:NEG:org.apache.commons.io.input.BOMInputStream@skip:400:0 |==> -1
4386:ROR:>(long,long):!=(long,long):org.apache.commons.io.input.BOMInputStream@skip:400:n > 0 |==> n != 0
4387:ROR:>(long,long):>=(long,long):org.apache.commons.io.input.BOMInputStream@skip:400:n > 0 |==> n >= 0
4388:ROR:>(long,long):FALSE(long,long):org.apache.commons.io.input.BOMInputStream@skip:400:n > 0 |==> false
4389:LVR:0:POS:org.apache.commons.io.input.BOMInputStream@skip:400:0 |==> 1
4390:LVR:0:NEG:org.apache.commons.io.input.BOMInputStream@skip:400:0 |==> -1
4391:ROR:>=(int,int):==(int,int):org.apache.commons.io.input.BOMInputStream@skip:400:readFirstBytes() >= 0 |==> readFirstBytes() == 0
4392:ROR:>=(int,int):>(int,int):org.apache.commons.io.input.BOMInputStream@skip:400:readFirstBytes() >= 0 |==> readFirstBytes() > 0
4393:ROR:>=(int,int):TRUE(int,int):org.apache.commons.io.input.BOMInputStream@skip:400:readFirstBytes() >= 0 |==> true
4394:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.io.input.BOMInputStream@skip:400:n > 0 && readFirstBytes() >= 0 |==> n > 0 == readFirstBytes() >= 0
4395:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.io.input.BOMInputStream@skip:400:n > 0 && readFirstBytes() >= 0 |==> false
4396:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.io.input.BOMInputStream@skip:400:n > 0 && readFirstBytes() >= 0 |==> n > 0
4397:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.io.input.BOMInputStream@skip:400:n > 0 && readFirstBytes() >= 0 |==> readFirstBytes() >= 0
4398:STD:<INC/DEC>:<NO-OP>:org.apache.commons.io.input.BOMInputStream@skip:401:n-- |==> <NO-OP>
4399:LVR:0:POS:org.apache.commons.io.input.BoundedInputStream:45:0 |==> 1
4400:LVR:0:NEG:org.apache.commons.io.input.BoundedInputStream:45:0 |==> -1
4401:LVR:NEG:0:org.apache.commons.io.input.BoundedInputStream:48:-1 |==> 0
4402:LVR:NEG:POS:org.apache.commons.io.input.BoundedInputStream:48:-1 |==> 1
4403:LVR:TRUE:FALSE:org.apache.commons.io.input.BoundedInputStream:51:true |==> false
4404:LVR:NEG:0:org.apache.commons.io.input.BoundedInputStream@<init>:74:-1 |==> 0
4405:LVR:NEG:POS:org.apache.commons.io.input.BoundedInputStream@<init>:74:-1 |==> 1
4406:LVR:NEG:0:org.apache.commons.io.input.BoundedInputStream@read:87:-1 |==> 0
4407:LVR:NEG:POS:org.apache.commons.io.input.BoundedInputStream@read:87:-1 |==> 1
4408:LVR:0:POS:org.apache.commons.io.input.BoundedInputStream@read:86:0 |==> 1
4409:LVR:0:NEG:org.apache.commons.io.input.BoundedInputStream@read:86:0 |==> -1
4410:ROR:>=(long,long):==(long,long):org.apache.commons.io.input.BoundedInputStream@read:86:max >= 0 |==> max == 0
4411:ROR:>=(long,long):>(long,long):org.apache.commons.io.input.BoundedInputStream@read:86:max >= 0 |==> max > 0
4412:ROR:>=(long,long):TRUE(long,long):org.apache.commons.io.input.BoundedInputStream@read:86:max >= 0 |==> true
4413:ROR:>=(long,long):==(long,long):org.apache.commons.io.input.BoundedInputStream@read:86:pos >= max |==> pos == max
4414:ROR:>=(long,long):>(long,long):org.apache.commons.io.input.BoundedInputStream@read:86:pos >= max |==> pos > max
4415:ROR:>=(long,long):TRUE(long,long):org.apache.commons.io.input.BoundedInputStream@read:86:pos >= max |==> true
4416:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.io.input.BoundedInputStream@read:86:max >= 0 && pos >= max |==> max >= 0 == pos >= max
4417:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.io.input.BoundedInputStream@read:86:max >= 0 && pos >= max |==> false
4418:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.io.input.BoundedInputStream@read:86:max >= 0 && pos >= max |==> max >= 0
4419:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.io.input.BoundedInputStream@read:86:max >= 0 && pos >= max |==> pos >= max
4420:STD:<INC/DEC>:<NO-OP>:org.apache.commons.io.input.BoundedInputStream@read:90:pos++ |==> <NO-OP>
4421:LVR:0:POS:org.apache.commons.io.input.BoundedInputStream@read:103:0 |==> 1
4422:LVR:0:NEG:org.apache.commons.io.input.BoundedInputStream@read:103:0 |==> -1
4423:LVR:NEG:0:org.apache.commons.io.input.BoundedInputStream@read:118:-1 |==> 0
4424:LVR:NEG:POS:org.apache.commons.io.input.BoundedInputStream@read:118:-1 |==> 1
4425:LVR:0:POS:org.apache.commons.io.input.BoundedInputStream@read:117:0 |==> 1
4426:LVR:0:NEG:org.apache.commons.io.input.BoundedInputStream@read:117:0 |==> -1
4427:ROR:>=(long,long):==(long,long):org.apache.commons.io.input.BoundedInputStream@read:117:max >= 0 |==> max == 0
4428:ROR:>=(long,long):>(long,long):org.apache.commons.io.input.BoundedInputStream@read:117:max >= 0 |==> max > 0
4429:ROR:>=(long,long):TRUE(long,long):org.apache.commons.io.input.BoundedInputStream@read:117:max >= 0 |==> true
4430:ROR:>=(long,long):==(long,long):org.apache.commons.io.input.BoundedInputStream@read:117:pos >= max |==> pos == max
4431:ROR:>=(long,long):>(long,long):org.apache.commons.io.input.BoundedInputStream@read:117:pos >= max |==> pos > max
4432:ROR:>=(long,long):TRUE(long,long):org.apache.commons.io.input.BoundedInputStream@read:117:pos >= max |==> true
4433:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.io.input.BoundedInputStream@read:117:max >= 0 && pos >= max |==> max >= 0 == pos >= max
4434:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.io.input.BoundedInputStream@read:117:max >= 0 && pos >= max |==> false
4435:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.io.input.BoundedInputStream@read:117:max >= 0 && pos >= max |==> max >= 0
4436:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.io.input.BoundedInputStream@read:117:max >= 0 && pos >= max |==> pos >= max
4437:LVR:0:POS:org.apache.commons.io.input.BoundedInputStream@read:120:0 |==> 1
4438:LVR:0:NEG:org.apache.commons.io.input.BoundedInputStream@read:120:0 |==> -1
4439:ROR:>=(long,long):==(long,long):org.apache.commons.io.input.BoundedInputStream@read:120:max >= 0 |==> max == 0
4440:ROR:>=(long,long):>(long,long):org.apache.commons.io.input.BoundedInputStream@read:120:max >= 0 |==> max > 0
4441:ROR:>=(long,long):TRUE(long,long):org.apache.commons.io.input.BoundedInputStream@read:120:max >= 0 |==> true
4442:AOR:-(long,long):%(long,long):org.apache.commons.io.input.BoundedInputStream@read:120:max - pos |==> max % pos
4443:AOR:-(long,long):*(long,long):org.apache.commons.io.input.BoundedInputStream@read:120:max - pos |==> max * pos
4444:AOR:-(long,long):+(long,long):org.apache.commons.io.input.BoundedInputStream@read:120:max - pos |==> max + pos
4445:AOR:-(long,long):/(long,long):org.apache.commons.io.input.BoundedInputStream@read:120:max - pos |==> max / pos
4446:LVR:NEG:0:org.apache.commons.io.input.BoundedInputStream@read:124:-1 |==> 0
4447:LVR:NEG:POS:org.apache.commons.io.input.BoundedInputStream@read:124:-1 |==> 1
4448:LVR:NEG:0:org.apache.commons.io.input.BoundedInputStream@read:123:-1 |==> 0
4449:LVR:NEG:POS:org.apache.commons.io.input.BoundedInputStream@read:123:-1 |==> 1
4450:ROR:==(int,int):<=(int,int):org.apache.commons.io.input.BoundedInputStream@read:123:bytesRead == -1 |==> bytesRead <= -1
4451:ROR:==(int,int):>=(int,int):org.apache.commons.io.input.BoundedInputStream@read:123:bytesRead == -1 |==> bytesRead >= -1
4452:ROR:==(int,int):FALSE(int,int):org.apache.commons.io.input.BoundedInputStream@read:123:bytesRead == -1 |==> false
4453:STD:<ASSIGN>:<NO-OP>:org.apache.commons.io.input.BoundedInputStream@read:127:pos += bytesRead |==> <NO-OP>
4454:LVR:0:POS:org.apache.commons.io.input.BoundedInputStream@skip:139:0 |==> 1
4455:LVR:0:NEG:org.apache.commons.io.input.BoundedInputStream@skip:139:0 |==> -1
4456:ROR:>=(long,long):==(long,long):org.apache.commons.io.input.BoundedInputStream@skip:139:max >= 0 |==> max == 0
4457:ROR:>=(long,long):>(long,long):org.apache.commons.io.input.BoundedInputStream@skip:139:max >= 0 |==> max > 0
4458:ROR:>=(long,long):TRUE(long,long):org.apache.commons.io.input.BoundedInputStream@skip:139:max >= 0 |==> true
4459:AOR:-(long,long):%(long,long):org.apache.commons.io.input.BoundedInputStream@skip:139:max - pos |==> max % pos
4460:AOR:-(long,long):*(long,long):org.apache.commons.io.input.BoundedInputStream@skip:139:max - pos |==> max * pos
4461:AOR:-(long,long):+(long,long):org.apache.commons.io.input.BoundedInputStream@skip:139:max - pos |==> max + pos
4462:AOR:-(long,long):/(long,long):org.apache.commons.io.input.BoundedInputStream@skip:139:max - pos |==> max / pos
4463:STD:<ASSIGN>:<NO-OP>:org.apache.commons.io.input.BoundedInputStream@skip:141:pos += skippedBytes |==> <NO-OP>
4464:LVR:0:POS:org.apache.commons.io.input.BoundedInputStream@available:151:0 |==> 1
4465:LVR:0:NEG:org.apache.commons.io.input.BoundedInputStream@available:151:0 |==> -1
4466:LVR:0:POS:org.apache.commons.io.input.BoundedInputStream@available:150:0 |==> 1
4467:LVR:0:NEG:org.apache.commons.io.input.BoundedInputStream@available:150:0 |==> -1
4468:ROR:>=(long,long):==(long,long):org.apache.commons.io.input.BoundedInputStream@available:150:max >= 0 |==> max == 0
4469:ROR:>=(long,long):>(long,long):org.apache.commons.io.input.BoundedInputStream@available:150:max >= 0 |==> max > 0
4470:ROR:>=(long,long):TRUE(long,long):org.apache.commons.io.input.BoundedInputStream@available:150:max >= 0 |==> true
4471:ROR:>=(long,long):==(long,long):org.apache.commons.io.input.BoundedInputStream@available:150:pos >= max |==> pos == max
4472:ROR:>=(long,long):>(long,long):org.apache.commons.io.input.BoundedInputStream@available:150:pos >= max |==> pos > max
4473:ROR:>=(long,long):TRUE(long,long):org.apache.commons.io.input.BoundedInputStream@available:150:pos >= max |==> true
4474:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.io.input.BoundedInputStream@available:150:max >= 0 && pos >= max |==> max >= 0 == pos >= max
4475:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.io.input.BoundedInputStream@available:150:max >= 0 && pos >= max |==> false
4476:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.io.input.BoundedInputStream@available:150:max >= 0 && pos >= max |==> max >= 0
4477:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.io.input.BoundedInputStream@available:150:max >= 0 && pos >= max |==> pos >= max
4478:STD:<CALL>:<NO-OP>:org.apache.commons.io.input.BoundedInputStream@close:173:in.close() |==> <NO-OP>
4479:COR:propagateClose:TRUE:org.apache.commons.io.input.BoundedInputStream@close:172:propagateClose |==> false
4480:COR:propagateClose:FALSE:org.apache.commons.io.input.BoundedInputStream@close:172:propagateClose |==> true
4481:STD:<CALL>:<NO-OP>:org.apache.commons.io.input.BoundedInputStream@reset:183:in.reset() |==> <NO-OP>
4482:STD:<CALL>:<NO-OP>:org.apache.commons.io.input.BoundedInputStream@mark:193:in.mark(readlimit) |==> <NO-OP>
4483:STD:<CALL>:<NO-OP>:org.apache.commons.io.input.CharSequenceInputStream@<init>:59:this.bbuf.flip() |==> <NO-OP>
4484:LVR:NEG:0:org.apache.commons.io.input.CharSequenceInputStream@<init>:61:-1 |==> 0
4485:LVR:NEG:POS:org.apache.commons.io.input.CharSequenceInputStream@<init>:61:-1 |==> 1
4486:LVR:POS:0:org.apache.commons.io.input.CharSequenceInputStream@<init>:83:2048 |==> 0
4487:LVR:POS:NEG:org.apache.commons.io.input.CharSequenceInputStream@<init>:83:2048 |==> -2048
4488:LVR:POS:0:org.apache.commons.io.input.CharSequenceInputStream@<init>:94:2048 |==> 0
4489:LVR:POS:NEG:org.apache.commons.io.input.CharSequenceInputStream@<init>:94:2048 |==> -2048
4490:STD:<CALL>:<NO-OP>:org.apache.commons.io.input.CharSequenceInputStream@fillBuffer:104:this.bbuf.compact() |==> <NO-OP>
4491:LVR:TRUE:FALSE:org.apache.commons.io.input.CharSequenceInputStream@fillBuffer:105:true |==> false
4492:STD:<CALL>:<NO-OP>:org.apache.commons.io.input.CharSequenceInputStream@fillBuffer:107:result.throwException() |==> <NO-OP>
4493:COR:result.isError():TRUE:org.apache.commons.io.input.CharSequenceInputStream@fillBuffer:106:result.isError() |==> false
4494:COR:result.isError():FALSE:org.apache.commons.io.input.CharSequenceInputStream@fillBuffer:106:result.isError() |==> true
4495:STD:<CALL>:<NO-OP>:org.apache.commons.io.input.CharSequenceInputStream@fillBuffer:109:this.bbuf.flip() |==> <NO-OP>
4496:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.io.input.CharSequenceInputStream@read:114:b == null |==> false
4497:LVR:0:POS:org.apache.commons.io.input.CharSequenceInputStream@read:117:0 |==> 1
4498:LVR:0:NEG:org.apache.commons.io.input.CharSequenceInputStream@read:117:0 |==> -1
4499:ROR:<(int,int):!=(int,int):org.apache.commons.io.input.CharSequenceInputStream@read:117:len < 0 |==> len != 0
4500:ROR:<(int,int):<=(int,int):org.apache.commons.io.input.CharSequenceInputStream@read:117:len < 0 |==> len <= 0
4501:ROR:<(int,int):FALSE(int,int):org.apache.commons.io.input.CharSequenceInputStream@read:117:len < 0 |==> false
4502:AOR:+(int,int):%(int,int):org.apache.commons.io.input.CharSequenceInputStream@read:117:off + len |==> off % len
4503:AOR:+(int,int):*(int,int):org.apache.commons.io.input.CharSequenceInputStream@read:117:off + len |==> off * len
4504:AOR:+(int,int):-(int,int):org.apache.commons.io.input.CharSequenceInputStream@read:117:off + len |==> off - len
4505:AOR:+(int,int):/(int,int):org.apache.commons.io.input.CharSequenceInputStream@read:117:off + len |==> off / len
4506:ROR:>(int,int):!=(int,int):org.apache.commons.io.input.CharSequenceInputStream@read:117:(off + len) > b.length |==> (off + len) != b.length
4507:ROR:>(int,int):>=(int,int):org.apache.commons.io.input.CharSequenceInputStream@read:117:(off + len) > b.length |==> (off + len) >= b.length
4508:ROR:>(int,int):FALSE(int,int):org.apache.commons.io.input.CharSequenceInputStream@read:117:(off + len) > b.length |==> false
4509:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.io.input.CharSequenceInputStream@read:117:len < 0 || (off + len) > b.length |==> len < 0 != (off + len) > b.length
4510:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.io.input.CharSequenceInputStream@read:117:len < 0 || (off + len) > b.length |==> len < 0
4511:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.io.input.CharSequenceInputStream@read:117:len < 0 || (off + len) > b.length |==> (off + len) > b.length
4512:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.io.input.CharSequenceInputStream@read:117:len < 0 || (off + len) > b.length |==> true
4513:LVR:0:POS:org.apache.commons.io.input.CharSequenceInputStream@read:122:0 |==> 1
4514:LVR:0:NEG:org.apache.commons.io.input.CharSequenceInputStream@read:122:0 |==> -1
4515:LVR:0:POS:org.apache.commons.io.input.CharSequenceInputStream@read:121:0 |==> 1
4516:LVR:0:NEG:org.apache.commons.io.input.CharSequenceInputStream@read:121:0 |==> -1
4517:ROR:==(int,int):<=(int,int):org.apache.commons.io.input.CharSequenceInputStream@read:121:len == 0 |==> len <= 0
4518:ROR:==(int,int):>=(int,int):org.apache.commons.io.input.CharSequenceInputStream@read:121:len == 0 |==> len >= 0
4519:ROR:==(int,int):FALSE(int,int):org.apache.commons.io.input.CharSequenceInputStream@read:121:len == 0 |==> false
4520:LVR:NEG:0:org.apache.commons.io.input.CharSequenceInputStream@read:125:-1 |==> 0
4521:LVR:NEG:POS:org.apache.commons.io.input.CharSequenceInputStream@read:125:-1 |==> 1
4522:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.io.input.CharSequenceInputStream@read:124:!this.bbuf.hasRemaining() && !this.cbuf.hasRemaining() |==> !this.bbuf.hasRemaining() == !this.cbuf.hasRemaining()
4523:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.io.input.CharSequenceInputStream@read:124:!this.bbuf.hasRemaining() && !this.cbuf.hasRemaining() |==> false
4524:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.io.input.CharSequenceInputStream@read:124:!this.bbuf.hasRemaining() && !this.cbuf.hasRemaining() |==> !this.bbuf.hasRemaining()
4525:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.io.input.CharSequenceInputStream@read:124:!this.bbuf.hasRemaining() && !this.cbuf.hasRemaining() |==> !this.cbuf.hasRemaining()
4526:LVR:0:POS:org.apache.commons.io.input.CharSequenceInputStream@read:127:0 |==> 1
4527:LVR:0:NEG:org.apache.commons.io.input.CharSequenceInputStream@read:127:0 |==> -1
4528:LVR:0:POS:org.apache.commons.io.input.CharSequenceInputStream@read:128:0 |==> 1
4529:LVR:0:NEG:org.apache.commons.io.input.CharSequenceInputStream@read:128:0 |==> -1
4530:ROR:>(int,int):!=(int,int):org.apache.commons.io.input.CharSequenceInputStream@read:128:len > 0 |==> len != 0
4531:ROR:>(int,int):>=(int,int):org.apache.commons.io.input.CharSequenceInputStream@read:128:len > 0 |==> len >= 0
4532:ROR:>(int,int):FALSE(int,int):org.apache.commons.io.input.CharSequenceInputStream@read:128:len > 0 |==> false
4533:STD:<CALL>:<NO-OP>:org.apache.commons.io.input.CharSequenceInputStream@read:131:this.bbuf.get(b, off, chunk) |==> <NO-OP>
4534:STD:<ASSIGN>:<NO-OP>:org.apache.commons.io.input.CharSequenceInputStream@read:132:off += chunk |==> <NO-OP>
4535:STD:<ASSIGN>:<NO-OP>:org.apache.commons.io.input.CharSequenceInputStream@read:133:len -= chunk |==> <NO-OP>
4536:STD:<ASSIGN>:<NO-OP>:org.apache.commons.io.input.CharSequenceInputStream@read:134:bytesRead += chunk |==> <NO-OP>
4537:STD:<CALL>:<NO-OP>:org.apache.commons.io.input.CharSequenceInputStream@read:136:fillBuffer() |==> <NO-OP>
4538:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.io.input.CharSequenceInputStream@read:137:!this.bbuf.hasRemaining() && !this.cbuf.hasRemaining() |==> !this.bbuf.hasRemaining() == !this.cbuf.hasRemaining()
4539:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.io.input.CharSequenceInputStream@read:137:!this.bbuf.hasRemaining() && !this.cbuf.hasRemaining() |==> false
4540:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.io.input.CharSequenceInputStream@read:137:!this.bbuf.hasRemaining() && !this.cbuf.hasRemaining() |==> !this.bbuf.hasRemaining()
4541:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.io.input.CharSequenceInputStream@read:137:!this.bbuf.hasRemaining() && !this.cbuf.hasRemaining() |==> !this.cbuf.hasRemaining()
4542:COR:this.bbuf.hasRemaining():TRUE:org.apache.commons.io.input.CharSequenceInputStream@read:129:this.bbuf.hasRemaining() |==> false
4543:COR:this.bbuf.hasRemaining():FALSE:org.apache.commons.io.input.CharSequenceInputStream@read:129:this.bbuf.hasRemaining() |==> true
4544:LVR:0:POS:org.apache.commons.io.input.CharSequenceInputStream@read:142:0 |==> 1
4545:LVR:0:NEG:org.apache.commons.io.input.CharSequenceInputStream@read:142:0 |==> -1
4546:ROR:==(int,int):<=(int,int):org.apache.commons.io.input.CharSequenceInputStream@read:142:bytesRead == 0 |==> bytesRead <= 0
4547:ROR:==(int,int):>=(int,int):org.apache.commons.io.input.CharSequenceInputStream@read:142:bytesRead == 0 |==> bytesRead >= 0
4548:ROR:==(int,int):FALSE(int,int):org.apache.commons.io.input.CharSequenceInputStream@read:142:bytesRead == 0 |==> false
4549:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.io.input.CharSequenceInputStream@read:142:bytesRead == 0 && !this.cbuf.hasRemaining() |==> bytesRead == 0 == !this.cbuf.hasRemaining()
4550:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.io.input.CharSequenceInputStream@read:142:bytesRead == 0 && !this.cbuf.hasRemaining() |==> false
4551:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.io.input.CharSequenceInputStream@read:142:bytesRead == 0 && !this.cbuf.hasRemaining() |==> bytesRead == 0
4552:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.io.input.CharSequenceInputStream@read:142:bytesRead == 0 && !this.cbuf.hasRemaining() |==> !this.cbuf.hasRemaining()
4553:LVR:NEG:0:org.apache.commons.io.input.CharSequenceInputStream@read:142:-1 |==> 0
4554:LVR:NEG:POS:org.apache.commons.io.input.CharSequenceInputStream@read:142:-1 |==> 1
4555:LVR:POS:0:org.apache.commons.io.input.CharSequenceInputStream@read:149:255 |==> 0
4556:LVR:POS:NEG:org.apache.commons.io.input.CharSequenceInputStream@read:149:255 |==> -255
4557:LOR:&(int,int):^(int,int):org.apache.commons.io.input.CharSequenceInputStream@read:149:this.bbuf.get() & 255 |==> this.bbuf.get() ^ 255
4558:LOR:&(int,int):|(int,int):org.apache.commons.io.input.CharSequenceInputStream@read:149:this.bbuf.get() & 255 |==> this.bbuf.get() | 255
4559:STD:<CALL>:<NO-OP>:org.apache.commons.io.input.CharSequenceInputStream@read:151:fillBuffer() |==> <NO-OP>
4560:LVR:NEG:0:org.apache.commons.io.input.CharSequenceInputStream@read:153:-1 |==> 0
4561:LVR:NEG:POS:org.apache.commons.io.input.CharSequenceInputStream@read:153:-1 |==> 1
4562:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.io.input.CharSequenceInputStream@read:152:!this.bbuf.hasRemaining() && !this.cbuf.hasRemaining() |==> !this.bbuf.hasRemaining() == !this.cbuf.hasRemaining()
4563:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.io.input.CharSequenceInputStream@read:152:!this.bbuf.hasRemaining() && !this.cbuf.hasRemaining() |==> false
4564:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.io.input.CharSequenceInputStream@read:152:!this.bbuf.hasRemaining() && !this.cbuf.hasRemaining() |==> !this.bbuf.hasRemaining()
4565:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.io.input.CharSequenceInputStream@read:152:!this.bbuf.hasRemaining() && !this.cbuf.hasRemaining() |==> !this.cbuf.hasRemaining()
4566:COR:this.bbuf.hasRemaining():TRUE:org.apache.commons.io.input.CharSequenceInputStream@read:148:this.bbuf.hasRemaining() |==> false
4567:COR:this.bbuf.hasRemaining():FALSE:org.apache.commons.io.input.CharSequenceInputStream@read:148:this.bbuf.hasRemaining() |==> true
4568:LVR:0:POS:org.apache.commons.io.input.CharSequenceInputStream@read:161:0 |==> 1
4569:LVR:0:NEG:org.apache.commons.io.input.CharSequenceInputStream@read:161:0 |==> -1
4570:LVR:0:POS:org.apache.commons.io.input.CharSequenceInputStream@skip:166:0 |==> 1
4571:LVR:0:NEG:org.apache.commons.io.input.CharSequenceInputStream@skip:166:0 |==> -1
4572:LVR:0:POS:org.apache.commons.io.input.CharSequenceInputStream@skip:167:0 |==> 1
4573:LVR:0:NEG:org.apache.commons.io.input.CharSequenceInputStream@skip:167:0 |==> -1
4574:ROR:>(long,long):!=(long,long):org.apache.commons.io.input.CharSequenceInputStream@skip:167:n > 0 |==> n != 0
4575:ROR:>(long,long):>=(long,long):org.apache.commons.io.input.CharSequenceInputStream@skip:167:n > 0 |==> n >= 0
4576:ROR:>(long,long):FALSE(long,long):org.apache.commons.io.input.CharSequenceInputStream@skip:167:n > 0 |==> false
4577:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.io.input.CharSequenceInputStream@skip:167:n > 0 && this.cbuf.hasRemaining() |==> n > 0 == this.cbuf.hasRemaining()
4578:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.io.input.CharSequenceInputStream@skip:167:n > 0 && this.cbuf.hasRemaining() |==> false
4579:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.io.input.CharSequenceInputStream@skip:167:n > 0 && this.cbuf.hasRemaining() |==> n > 0
4580:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.io.input.CharSequenceInputStream@skip:167:n > 0 && this.cbuf.hasRemaining() |==> this.cbuf.hasRemaining()
4581:STD:<CALL>:<NO-OP>:org.apache.commons.io.input.CharSequenceInputStream@skip:168:this.cbuf.get() |==> <NO-OP>
4582:STD:<INC/DEC>:<NO-OP>:org.apache.commons.io.input.CharSequenceInputStream@skip:169:n-- |==> <NO-OP>
4583:STD:<INC/DEC>:<NO-OP>:org.apache.commons.io.input.CharSequenceInputStream@skip:170:skipped++ |==> <NO-OP>
4584:STD:<CALL>:<NO-OP>:org.apache.commons.io.input.CharSequenceInputStream@reset:196:this.cbuf.position(this.mark) |==> <NO-OP>
4585:LVR:NEG:0:org.apache.commons.io.input.CharSequenceInputStream@reset:197:-1 |==> 0
4586:LVR:NEG:POS:org.apache.commons.io.input.CharSequenceInputStream@reset:197:-1 |==> 1
4587:LVR:NEG:0:org.apache.commons.io.input.CharSequenceInputStream@reset:195:-1 |==> 0
4588:LVR:NEG:POS:org.apache.commons.io.input.CharSequenceInputStream@reset:195:-1 |==> 1
4589:ROR:!=(int,int):<(int,int):org.apache.commons.io.input.CharSequenceInputStream@reset:195:this.mark != -1 |==> this.mark < -1
4590:ROR:!=(int,int):>(int,int):org.apache.commons.io.input.CharSequenceInputStream@reset:195:this.mark != -1 |==> this.mark > -1
4591:ROR:!=(int,int):TRUE(int,int):org.apache.commons.io.input.CharSequenceInputStream@reset:195:this.mark != -1 |==> true
4592:LVR:TRUE:FALSE:org.apache.commons.io.input.CharSequenceInputStream@markSupported:203:true |==> false
4593:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.apache.commons.io.input.CharSequenceReader@<init>:43:charSequence != null |==> true
4594:LVR:0:POS:org.apache.commons.io.input.CharSequenceReader@close:51:0 |==> 1
4595:LVR:0:NEG:org.apache.commons.io.input.CharSequenceReader@close:51:0 |==> -1
4596:LVR:0:POS:org.apache.commons.io.input.CharSequenceReader@close:52:0 |==> 1
4597:LVR:0:NEG:org.apache.commons.io.input.CharSequenceReader@close:52:0 |==> -1
4598:LVR:TRUE:FALSE:org.apache.commons.io.input.CharSequenceReader@markSupported:72:true |==> false
4599:LVR:NEG:0:org.apache.commons.io.input.CharSequenceReader@read:84:-1 |==> 0
4600:LVR:NEG:POS:org.apache.commons.io.input.CharSequenceReader@read:84:-1 |==> 1
4601:ROR:>=(int,int):==(int,int):org.apache.commons.io.input.CharSequenceReader@read:83:idx >= charSequence.length() |==> idx == charSequence.length()
4602:ROR:>=(int,int):>(int,int):org.apache.commons.io.input.CharSequenceReader@read:83:idx >= charSequence.length() |==> idx > charSequence.length()
4603:ROR:>=(int,int):TRUE(int,int):org.apache.commons.io.input.CharSequenceReader@read:83:idx >= charSequence.length() |==> true
4604:LVR:NEG:0:org.apache.commons.io.input.CharSequenceReader@read:102:-1 |==> 0
4605:LVR:NEG:POS:org.apache.commons.io.input.CharSequenceReader@read:102:-1 |==> 1
4606:ROR:>=(int,int):==(int,int):org.apache.commons.io.input.CharSequenceReader@read:101:idx >= charSequence.length() |==> idx == charSequence.length()
4607:ROR:>=(int,int):>(int,int):org.apache.commons.io.input.CharSequenceReader@read:101:idx >= charSequence.length() |==> idx > charSequence.length()
4608:ROR:>=(int,int):TRUE(int,int):org.apache.commons.io.input.CharSequenceReader@read:101:idx >= charSequence.length() |==> true
4609:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.io.input.CharSequenceReader@read:104:array == null |==> false
4610:LVR:0:POS:org.apache.commons.io.input.CharSequenceReader@read:107:0 |==> 1
4611:LVR:0:NEG:org.apache.commons.io.input.CharSequenceReader@read:107:0 |==> -1
4612:ROR:<(int,int):!=(int,int):org.apache.commons.io.input.CharSequenceReader@read:107:length < 0 |==> length != 0
4613:ROR:<(int,int):<=(int,int):org.apache.commons.io.input.CharSequenceReader@read:107:length < 0 |==> length <= 0
4614:ROR:<(int,int):FALSE(int,int):org.apache.commons.io.input.CharSequenceReader@read:107:length < 0 |==> false
4615:LVR:0:POS:org.apache.commons.io.input.CharSequenceReader@read:107:0 |==> 1
4616:LVR:0:NEG:org.apache.commons.io.input.CharSequenceReader@read:107:0 |==> -1
4617:ROR:<(int,int):!=(int,int):org.apache.commons.io.input.CharSequenceReader@read:107:offset < 0 |==> offset != 0
4618:ROR:<(int,int):<=(int,int):org.apache.commons.io.input.CharSequenceReader@read:107:offset < 0 |==> offset <= 0
4619:ROR:<(int,int):FALSE(int,int):org.apache.commons.io.input.CharSequenceReader@read:107:offset < 0 |==> false
4620:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.io.input.CharSequenceReader@read:107:length < 0 || offset < 0 |==> length < 0 != offset < 0
4621:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.io.input.CharSequenceReader@read:107:length < 0 || offset < 0 |==> length < 0
4622:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.io.input.CharSequenceReader@read:107:length < 0 || offset < 0 |==> offset < 0
4623:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.io.input.CharSequenceReader@read:107:length < 0 || offset < 0 |==> true
4624:AOR:+(int,int):%(int,int):org.apache.commons.io.input.CharSequenceReader@read:107:offset + length |==> offset % length
4625:AOR:+(int,int):*(int,int):org.apache.commons.io.input.CharSequenceReader@read:107:offset + length |==> offset * length
4626:AOR:+(int,int):-(int,int):org.apache.commons.io.input.CharSequenceReader@read:107:offset + length |==> offset - length
4627:AOR:+(int,int):/(int,int):org.apache.commons.io.input.CharSequenceReader@read:107:offset + length |==> offset / length
4628:ROR:>(int,int):!=(int,int):org.apache.commons.io.input.CharSequenceReader@read:107:offset + length > array.length |==> offset + length != array.length
4629:ROR:>(int,int):>=(int,int):org.apache.commons.io.input.CharSequenceReader@read:107:offset + length > array.length |==> offset + length >= array.length
4630:ROR:>(int,int):FALSE(int,int):org.apache.commons.io.input.CharSequenceReader@read:107:offset + length > array.length |==> false
4631:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.io.input.CharSequenceReader@read:107:length < 0 || offset < 0 || offset + length > array.length |==> (length < 0 || offset < 0) != offset + length > array.length
4632:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.io.input.CharSequenceReader@read:107:length < 0 || offset < 0 || offset + length > array.length |==> length < 0 || offset < 0
4633:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.io.input.CharSequenceReader@read:107:length < 0 || offset < 0 || offset + length > array.length |==> offset + length > array.length
4634:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.io.input.CharSequenceReader@read:107:length < 0 || offset < 0 || offset + length > array.length |==> true
4635:LVR:0:POS:org.apache.commons.io.input.CharSequenceReader@read:111:0 |==> 1
4636:LVR:0:NEG:org.apache.commons.io.input.CharSequenceReader@read:111:0 |==> -1
4637:LVR:0:POS:org.apache.commons.io.input.CharSequenceReader@read:112:0 |==> 1
4638:LVR:0:NEG:org.apache.commons.io.input.CharSequenceReader@read:112:0 |==> -1
4639:ROR:<(int,int):!=(int,int):org.apache.commons.io.input.CharSequenceReader@read:112:i < length |==> i != length
4640:ROR:<(int,int):<=(int,int):org.apache.commons.io.input.CharSequenceReader@read:112:i < length |==> i <= length
4641:ROR:<(int,int):FALSE(int,int):org.apache.commons.io.input.CharSequenceReader@read:112:i < length |==> false
4642:LVR:NEG:0:org.apache.commons.io.input.CharSequenceReader@read:114:-1 |==> 0
4643:LVR:NEG:POS:org.apache.commons.io.input.CharSequenceReader@read:114:-1 |==> 1
4644:ROR:==(int,int):<=(int,int):org.apache.commons.io.input.CharSequenceReader@read:114:c == -1 |==> c <= -1
4645:ROR:==(int,int):>=(int,int):org.apache.commons.io.input.CharSequenceReader@read:114:c == -1 |==> c >= -1
4646:ROR:==(int,int):FALSE(int,int):org.apache.commons.io.input.CharSequenceReader@read:114:c == -1 |==> false
4647:AOR:+(int,int):%(int,int):org.apache.commons.io.input.CharSequenceReader@read:117:offset + i |==> offset % i
4648:AOR:+(int,int):*(int,int):org.apache.commons.io.input.CharSequenceReader@read:117:offset + i |==> offset * i
4649:AOR:+(int,int):-(int,int):org.apache.commons.io.input.CharSequenceReader@read:117:offset + i |==> offset - i
4650:AOR:+(int,int):/(int,int):org.apache.commons.io.input.CharSequenceReader@read:117:offset + i |==> offset / i
4651:STD:<INC/DEC>:<NO-OP>:org.apache.commons.io.input.CharSequenceReader@read:118:count++ |==> <NO-OP>
4652:LVR:0:POS:org.apache.commons.io.input.CharSequenceReader@skip:140:0 |==> 1
4653:LVR:0:NEG:org.apache.commons.io.input.CharSequenceReader@skip:140:0 |==> -1
4654:ROR:<(long,long):!=(long,long):org.apache.commons.io.input.CharSequenceReader@skip:140:n < 0 |==> n != 0
4655:ROR:<(long,long):<=(long,long):org.apache.commons.io.input.CharSequenceReader@skip:140:n < 0 |==> n <= 0
4656:ROR:<(long,long):FALSE(long,long):org.apache.commons.io.input.CharSequenceReader@skip:140:n < 0 |==> false
4657:LVR:NEG:0:org.apache.commons.io.input.CharSequenceReader@skip:145:-1 |==> 0
4658:LVR:NEG:POS:org.apache.commons.io.input.CharSequenceReader@skip:145:-1 |==> 1
4659:ROR:>=(int,int):==(int,int):org.apache.commons.io.input.CharSequenceReader@skip:144:idx >= charSequence.length() |==> idx == charSequence.length()
4660:ROR:>=(int,int):>(int,int):org.apache.commons.io.input.CharSequenceReader@skip:144:idx >= charSequence.length() |==> idx > charSequence.length()
4661:ROR:>=(int,int):TRUE(int,int):org.apache.commons.io.input.CharSequenceReader@skip:144:idx >= charSequence.length() |==> true
4662:AOR:+(long,long):%(long,long):org.apache.commons.io.input.CharSequenceReader@skip:147:idx + n |==> idx % n
4663:AOR:+(long,long):*(long,long):org.apache.commons.io.input.CharSequenceReader@skip:147:idx + n |==> idx * n
4664:AOR:+(long,long):-(long,long):org.apache.commons.io.input.CharSequenceReader@skip:147:idx + n |==> idx - n
4665:AOR:+(long,long):/(long,long):org.apache.commons.io.input.CharSequenceReader@skip:147:idx + n |==> idx / n
4666:AOR:-(int,int):%(int,int):org.apache.commons.io.input.CharSequenceReader@skip:148:dest - idx |==> dest % idx
4667:AOR:-(int,int):*(int,int):org.apache.commons.io.input.CharSequenceReader@skip:148:dest - idx |==> dest * idx
4668:AOR:-(int,int):+(int,int):org.apache.commons.io.input.CharSequenceReader@skip:148:dest - idx |==> dest + idx
4669:AOR:-(int,int):/(int,int):org.apache.commons.io.input.CharSequenceReader@skip:148:dest - idx |==> dest / idx
4670:LVR:FALSE:TRUE:org.apache.commons.io.input.ClassLoaderObjectInputStream@resolveClass:68:false |==> true
4671:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.apache.commons.io.input.ClassLoaderObjectInputStream@resolveClass:70:clazz != null |==> true
4672:LVR:0:POS:org.apache.commons.io.input.ClassLoaderObjectInputStream@resolveProxyClass:94:0 |==> 1
4673:LVR:0:NEG:org.apache.commons.io.input.ClassLoaderObjectInputStream@resolveProxyClass:94:0 |==> -1
4674:ROR:<(int,int):!=(int,int):org.apache.commons.io.input.ClassLoaderObjectInputStream@resolveProxyClass:94:i < interfaces.length |==> i != interfaces.length
4675:ROR:<(int,int):<=(int,int):org.apache.commons.io.input.ClassLoaderObjectInputStream@resolveProxyClass:94:i < interfaces.length |==> i <= interfaces.length
4676:ROR:<(int,int):FALSE(int,int):org.apache.commons.io.input.ClassLoaderObjectInputStream@resolveProxyClass:94:i < interfaces.length |==> false
4677:LVR:FALSE:TRUE:org.apache.commons.io.input.ClassLoaderObjectInputStream@resolveProxyClass:95:false |==> true
4678:LVR:NEG:0:org.apache.commons.io.input.ClosedInputStream@read:46:-1 |==> 0
4679:LVR:NEG:POS:org.apache.commons.io.input.ClosedInputStream@read:46:-1 |==> 1
4680:STD:<ASSIGN>:<NO-OP>:org.apache.commons.io.input.CountingInputStream@skip:59:this.count += skip |==> <NO-OP>
4681:STD:<ASSIGN>:<NO-OP>:org.apache.commons.io.input.CountingInputStream@afterRead:72:this.count += n |==> <NO-OP>
4682:LVR:NEG:0:org.apache.commons.io.input.CountingInputStream@afterRead:71:-1 |==> 0
4683:LVR:NEG:POS:org.apache.commons.io.input.CountingInputStream@afterRead:71:-1 |==> 1
4684:ROR:!=(int,int):<(int,int):org.apache.commons.io.input.CountingInputStream@afterRead:71:n != -1 |==> n < -1
4685:ROR:!=(int,int):>(int,int):org.apache.commons.io.input.CountingInputStream@afterRead:71:n != -1 |==> n > -1
4686:ROR:!=(int,int):TRUE(int,int):org.apache.commons.io.input.CountingInputStream@afterRead:71:n != -1 |==> true
4687:ROR:>(long,long):!=(long,long):org.apache.commons.io.input.CountingInputStream@getCount:89:result > Integer.MAX_VALUE |==> result != Integer.MAX_VALUE
4688:ROR:>(long,long):>=(long,long):org.apache.commons.io.input.CountingInputStream@getCount:89:result > Integer.MAX_VALUE |==> result >= Integer.MAX_VALUE
4689:ROR:>(long,long):FALSE(long,long):org.apache.commons.io.input.CountingInputStream@getCount:89:result > Integer.MAX_VALUE |==> false
4690:ROR:>(long,long):!=(long,long):org.apache.commons.io.input.CountingInputStream@resetCount:107:result > Integer.MAX_VALUE |==> result != Integer.MAX_VALUE
4691:ROR:>(long,long):>=(long,long):org.apache.commons.io.input.CountingInputStream@resetCount:107:result > Integer.MAX_VALUE |==> result >= Integer.MAX_VALUE
4692:ROR:>(long,long):FALSE(long,long):org.apache.commons.io.input.CountingInputStream@resetCount:107:result > Integer.MAX_VALUE |==> false
4693:LVR:0:POS:org.apache.commons.io.input.CountingInputStream@resetByteCount:139:0 |==> 1
4694:LVR:0:NEG:org.apache.commons.io.input.CountingInputStream@resetByteCount:139:0 |==> -1
4695:STD:<CALL>:<NO-OP>:org.apache.commons.io.input.DemuxInputStream@bindStream:42:m_streams.set(input) |==> <NO-OP>
4696:STD:<CALL>:<NO-OP>:org.apache.commons.io.input.DemuxInputStream@close:58:input.close() |==> <NO-OP>
4697:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.apache.commons.io.input.DemuxInputStream@close:56:null != input |==> true
4698:LVR:NEG:0:org.apache.commons.io.input.DemuxInputStream@read:79:-1 |==> 0
4699:LVR:NEG:POS:org.apache.commons.io.input.DemuxInputStream@read:79:-1 |==> 1
4700:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.apache.commons.io.input.DemuxInputStream@read:73:null != input |==> true
4701:LVR:NEG:0:org.apache.commons.io.input.NullInputStream:67:-1 |==> 0
4702:LVR:NEG:POS:org.apache.commons.io.input.NullInputStream:67:-1 |==> 1
4703:LVR:TRUE:FALSE:org.apache.commons.io.input.NullInputStream@<init>:80:true |==> false
4704:LVR:FALSE:TRUE:org.apache.commons.io.input.NullInputStream@<init>:80:false |==> true
4705:AOR:-(long,long):%(long,long):org.apache.commons.io.input.NullInputStream@available:125:size - position |==> size % position
4706:AOR:-(long,long):*(long,long):org.apache.commons.io.input.NullInputStream@available:125:size - position |==> size * position
4707:AOR:-(long,long):+(long,long):org.apache.commons.io.input.NullInputStream@available:125:size - position |==> size + position
4708:AOR:-(long,long):/(long,long):org.apache.commons.io.input.NullInputStream@available:125:size - position |==> size / position
4709:LVR:0:POS:org.apache.commons.io.input.NullInputStream@available:127:0 |==> 1
4710:LVR:0:NEG:org.apache.commons.io.input.NullInputStream@available:127:0 |==> -1
4711:ROR:>(long,long):!=(long,long):org.apache.commons.io.input.NullInputStream@available:128:avail > Integer.MAX_VALUE |==> avail != Integer.MAX_VALUE
4712:ROR:>(long,long):>=(long,long):org.apache.commons.io.input.NullInputStream@available:128:avail > Integer.MAX_VALUE |==> avail >= Integer.MAX_VALUE
4713:ROR:>(long,long):FALSE(long,long):org.apache.commons.io.input.NullInputStream@available:128:avail > Integer.MAX_VALUE |==> false
4714:LVR:0:POS:org.apache.commons.io.input.NullInputStream@available:126:0 |==> 1
4715:LVR:0:NEG:org.apache.commons.io.input.NullInputStream@available:126:0 |==> -1
4716:ROR:<=(long,long):<(long,long):org.apache.commons.io.input.NullInputStream@available:126:avail <= 0 |==> avail < 0
4717:ROR:<=(long,long):==(long,long):org.apache.commons.io.input.NullInputStream@available:126:avail <= 0 |==> avail == 0
4718:ROR:<=(long,long):TRUE(long,long):org.apache.commons.io.input.NullInputStream@available:126:avail <= 0 |==> true
4719:LVR:FALSE:TRUE:org.apache.commons.io.input.NullInputStream@close:143:false |==> true
4720:LVR:0:POS:org.apache.commons.io.input.NullInputStream@close:144:0 |==> 1
4721:LVR:0:NEG:org.apache.commons.io.input.NullInputStream@close:144:0 |==> -1
4722:LVR:NEG:0:org.apache.commons.io.input.NullInputStream@close:145:-1 |==> 0
4723:LVR:NEG:POS:org.apache.commons.io.input.NullInputStream@close:145:-1 |==> 1
4724:COR:eof:TRUE:org.apache.commons.io.input.NullInputStream@read:186:eof |==> false
4725:COR:eof:FALSE:org.apache.commons.io.input.NullInputStream@read:186:eof |==> true
4726:ROR:==(long,long):<=(long,long):org.apache.commons.io.input.NullInputStream@read:189:position == size |==> position <= size
4727:ROR:==(long,long):>=(long,long):org.apache.commons.io.input.NullInputStream@read:189:position == size |==> position >= size
4728:ROR:==(long,long):FALSE(long,long):org.apache.commons.io.input.NullInputStream@read:189:position == size |==> false
4729:STD:<INC/DEC>:<NO-OP>:org.apache.commons.io.input.NullInputStream@read:192:position++ |==> <NO-OP>
4730:LVR:0:POS:org.apache.commons.io.input.NullInputStream@read:209:0 |==> 1
4731:LVR:0:NEG:org.apache.commons.io.input.NullInputStream@read:209:0 |==> -1
4732:COR:eof:TRUE:org.apache.commons.io.input.NullInputStream@read:227:eof |==> false
4733:COR:eof:FALSE:org.apache.commons.io.input.NullInputStream@read:227:eof |==> true
4734:ROR:==(long,long):<=(long,long):org.apache.commons.io.input.NullInputStream@read:230:position == size |==> position <= size
4735:ROR:==(long,long):>=(long,long):org.apache.commons.io.input.NullInputStream@read:230:position == size |==> position >= size
4736:ROR:==(long,long):FALSE(long,long):org.apache.commons.io.input.NullInputStream@read:230:position == size |==> false
4737:STD:<ASSIGN>:<NO-OP>:org.apache.commons.io.input.NullInputStream@read:233:position += length |==> <NO-OP>
4738:AOR:-(long,long):%(long,long):org.apache.commons.io.input.NullInputStream@read:236:position - size |==> position % size
4739:AOR:-(long,long):*(long,long):org.apache.commons.io.input.NullInputStream@read:236:position - size |==> position * size
4740:AOR:-(long,long):+(long,long):org.apache.commons.io.input.NullInputStream@read:236:position - size |==> position + size
4741:AOR:-(long,long):/(long,long):org.apache.commons.io.input.NullInputStream@read:236:position - size |==> position / size
4742:AOR:-(int,int):%(int,int):org.apache.commons.io.input.NullInputStream@read:236:length - (int)(position - size) |==> length % (int)(position - size)
4743:AOR:-(int,int):*(int,int):org.apache.commons.io.input.NullInputStream@read:236:length - (int)(position - size) |==> length * (int)(position - size)
4744:AOR:-(int,int):+(int,int):org.apache.commons.io.input.NullInputStream@read:236:length - (int)(position - size) |==> length + (int)(position - size)
4745:AOR:-(int,int):/(int,int):org.apache.commons.io.input.NullInputStream@read:236:length - (int)(position - size) |==> length / (int)(position - size)
4746:ROR:>(long,long):!=(long,long):org.apache.commons.io.input.NullInputStream@read:235:position > size |==> position != size
4747:ROR:>(long,long):>=(long,long):org.apache.commons.io.input.NullInputStream@read:235:position > size |==> position >= size
4748:ROR:>(long,long):FALSE(long,long):org.apache.commons.io.input.NullInputStream@read:235:position > size |==> false
4749:STD:<CALL>:<NO-OP>:org.apache.commons.io.input.NullInputStream@read:239:processBytes(bytes, offset, returnLength) |==> <NO-OP>
4750:LVR:0:POS:org.apache.commons.io.input.NullInputStream@reset:256:0 |==> 1
4751:LVR:0:NEG:org.apache.commons.io.input.NullInputStream@reset:256:0 |==> -1
4752:ROR:<(long,long):!=(long,long):org.apache.commons.io.input.NullInputStream@reset:256:mark < 0 |==> mark != 0
4753:ROR:<(long,long):<=(long,long):org.apache.commons.io.input.NullInputStream@reset:256:mark < 0 |==> mark <= 0
4754:ROR:<(long,long):FALSE(long,long):org.apache.commons.io.input.NullInputStream@reset:256:mark < 0 |==> false
4755:AOR:+(long,long):%(long,long):org.apache.commons.io.input.NullInputStream@reset:259:mark + readlimit |==> mark % readlimit
4756:AOR:+(long,long):*(long,long):org.apache.commons.io.input.NullInputStream@reset:259:mark + readlimit |==> mark * readlimit
4757:AOR:+(long,long):-(long,long):org.apache.commons.io.input.NullInputStream@reset:259:mark + readlimit |==> mark - readlimit
4758:AOR:+(long,long):/(long,long):org.apache.commons.io.input.NullInputStream@reset:259:mark + readlimit |==> mark / readlimit
4759:ROR:>(long,long):!=(long,long):org.apache.commons.io.input.NullInputStream@reset:259:position > mark + readlimit |==> position != mark + readlimit
4760:ROR:>(long,long):>=(long,long):org.apache.commons.io.input.NullInputStream@reset:259:position > mark + readlimit |==> position >= mark + readlimit
4761:ROR:>(long,long):FALSE(long,long):org.apache.commons.io.input.NullInputStream@reset:259:position > mark + readlimit |==> false
4762:LVR:FALSE:TRUE:org.apache.commons.io.input.NullInputStream@reset:265:false |==> true
4763:COR:eof:TRUE:org.apache.commons.io.input.NullInputStream@skip:281:eof |==> false
4764:COR:eof:FALSE:org.apache.commons.io.input.NullInputStream@skip:281:eof |==> true
4765:ROR:==(long,long):<=(long,long):org.apache.commons.io.input.NullInputStream@skip:284:position == size |==> position <= size
4766:ROR:==(long,long):>=(long,long):org.apache.commons.io.input.NullInputStream@skip:284:position == size |==> position >= size
4767:ROR:==(long,long):FALSE(long,long):org.apache.commons.io.input.NullInputStream@skip:284:position == size |==> false
4768:STD:<ASSIGN>:<NO-OP>:org.apache.commons.io.input.NullInputStream@skip:287:position += numberOfBytes |==> <NO-OP>
4769:AOR:-(long,long):%(long,long):org.apache.commons.io.input.NullInputStream@skip:290:position - size |==> position % size
4770:AOR:-(long,long):*(long,long):org.apache.commons.io.input.NullInputStream@skip:290:position - size |==> position * size
4771:AOR:-(long,long):+(long,long):org.apache.commons.io.input.NullInputStream@skip:290:position - size |==> position + size
4772:AOR:-(long,long):/(long,long):org.apache.commons.io.input.NullInputStream@skip:290:position - size |==> position / size
4773:AOR:-(long,long):%(long,long):org.apache.commons.io.input.NullInputStream@skip:290:numberOfBytes - (position - size) |==> numberOfBytes % (position - size)
4774:AOR:-(long,long):*(long,long):org.apache.commons.io.input.NullInputStream@skip:290:numberOfBytes - (position - size) |==> numberOfBytes * (position - size)
4775:AOR:-(long,long):+(long,long):org.apache.commons.io.input.NullInputStream@skip:290:numberOfBytes - (position - size) |==> numberOfBytes + (position - size)
4776:AOR:-(long,long):/(long,long):org.apache.commons.io.input.NullInputStream@skip:290:numberOfBytes - (position - size) |==> numberOfBytes / (position - size)
4777:ROR:>(long,long):!=(long,long):org.apache.commons.io.input.NullInputStream@skip:289:position > size |==> position != size
4778:ROR:>(long,long):>=(long,long):org.apache.commons.io.input.NullInputStream@skip:289:position > size |==> position >= size
4779:ROR:>(long,long):FALSE(long,long):org.apache.commons.io.input.NullInputStream@skip:289:position > size |==> false
4780:LVR:0:POS:org.apache.commons.io.input.NullInputStream@processByte:305:0 |==> 1
4781:LVR:0:NEG:org.apache.commons.io.input.NullInputStream@processByte:305:0 |==> -1
4782:LVR:TRUE:FALSE:org.apache.commons.io.input.NullInputStream@doEndOfFile:331:true |==> false
4783:COR:throwEofException:TRUE:org.apache.commons.io.input.NullInputStream@doEndOfFile:332:throwEofException |==> false
4784:COR:throwEofException:FALSE:org.apache.commons.io.input.NullInputStream@doEndOfFile:332:throwEofException |==> true
4785:LVR:NEG:0:org.apache.commons.io.input.NullInputStream@doEndOfFile:335:-1 |==> 0
4786:LVR:NEG:POS:org.apache.commons.io.input.NullInputStream@doEndOfFile:335:-1 |==> 1
4787:LVR:NEG:0:org.apache.commons.io.input.NullReader:67:-1 |==> 0
4788:LVR:NEG:POS:org.apache.commons.io.input.NullReader:67:-1 |==> 1
4789:LVR:TRUE:FALSE:org.apache.commons.io.input.NullReader@<init>:80:true |==> false
4790:LVR:FALSE:TRUE:org.apache.commons.io.input.NullReader@<init>:80:false |==> true
4791:LVR:FALSE:TRUE:org.apache.commons.io.input.NullReader@close:126:false |==> true
4792:LVR:0:POS:org.apache.commons.io.input.NullReader@close:127:0 |==> 1
4793:LVR:0:NEG:org.apache.commons.io.input.NullReader@close:127:0 |==> -1
4794:LVR:NEG:0:org.apache.commons.io.input.NullReader@close:128:-1 |==> 0
4795:LVR:NEG:POS:org.apache.commons.io.input.NullReader@close:128:-1 |==> 1
4796:COR:eof:TRUE:org.apache.commons.io.input.NullReader@read:169:eof |==> false
4797:COR:eof:FALSE:org.apache.commons.io.input.NullReader@read:169:eof |==> true
4798:ROR:==(long,long):<=(long,long):org.apache.commons.io.input.NullReader@read:172:position == size |==> position <= size
4799:ROR:==(long,long):>=(long,long):org.apache.commons.io.input.NullReader@read:172:position == size |==> position >= size
4800:ROR:==(long,long):FALSE(long,long):org.apache.commons.io.input.NullReader@read:172:position == size |==> false
4801:STD:<INC/DEC>:<NO-OP>:org.apache.commons.io.input.NullReader@read:175:position++ |==> <NO-OP>
4802:LVR:0:POS:org.apache.commons.io.input.NullReader@read:192:0 |==> 1
4803:LVR:0:NEG:org.apache.commons.io.input.NullReader@read:192:0 |==> -1
4804:COR:eof:TRUE:org.apache.commons.io.input.NullReader@read:210:eof |==> false
4805:COR:eof:FALSE:org.apache.commons.io.input.NullReader@read:210:eof |==> true
4806:ROR:==(long,long):<=(long,long):org.apache.commons.io.input.NullReader@read:213:position == size |==> position <= size
4807:ROR:==(long,long):>=(long,long):org.apache.commons.io.input.NullReader@read:213:position == size |==> position >= size
4808:ROR:==(long,long):FALSE(long,long):org.apache.commons.io.input.NullReader@read:213:position == size |==> false
4809:STD:<ASSIGN>:<NO-OP>:org.apache.commons.io.input.NullReader@read:216:position += length |==> <NO-OP>
4810:AOR:-(long,long):%(long,long):org.apache.commons.io.input.NullReader@read:219:position - size |==> position % size
4811:AOR:-(long,long):*(long,long):org.apache.commons.io.input.NullReader@read:219:position - size |==> position * size
4812:AOR:-(long,long):+(long,long):org.apache.commons.io.input.NullReader@read:219:position - size |==> position + size
4813:AOR:-(long,long):/(long,long):org.apache.commons.io.input.NullReader@read:219:position - size |==> position / size
4814:AOR:-(int,int):%(int,int):org.apache.commons.io.input.NullReader@read:219:length - (int)(position - size) |==> length % (int)(position - size)
4815:AOR:-(int,int):*(int,int):org.apache.commons.io.input.NullReader@read:219:length - (int)(position - size) |==> length * (int)(position - size)
4816:AOR:-(int,int):+(int,int):org.apache.commons.io.input.NullReader@read:219:length - (int)(position - size) |==> length + (int)(position - size)
4817:AOR:-(int,int):/(int,int):org.apache.commons.io.input.NullReader@read:219:length - (int)(position - size) |==> length / (int)(position - size)
4818:ROR:>(long,long):!=(long,long):org.apache.commons.io.input.NullReader@read:218:position > size |==> position != size
4819:ROR:>(long,long):>=(long,long):org.apache.commons.io.input.NullReader@read:218:position > size |==> position >= size
4820:ROR:>(long,long):FALSE(long,long):org.apache.commons.io.input.NullReader@read:218:position > size |==> false
4821:STD:<CALL>:<NO-OP>:org.apache.commons.io.input.NullReader@read:222:processChars(chars, offset, returnLength) |==> <NO-OP>
4822:LVR:0:POS:org.apache.commons.io.input.NullReader@reset:239:0 |==> 1
4823:LVR:0:NEG:org.apache.commons.io.input.NullReader@reset:239:0 |==> -1
4824:ROR:<(long,long):!=(long,long):org.apache.commons.io.input.NullReader@reset:239:mark < 0 |==> mark != 0
4825:ROR:<(long,long):<=(long,long):org.apache.commons.io.input.NullReader@reset:239:mark < 0 |==> mark <= 0
4826:ROR:<(long,long):FALSE(long,long):org.apache.commons.io.input.NullReader@reset:239:mark < 0 |==> false
4827:AOR:+(long,long):%(long,long):org.apache.commons.io.input.NullReader@reset:242:mark + readlimit |==> mark % readlimit
4828:AOR:+(long,long):*(long,long):org.apache.commons.io.input.NullReader@reset:242:mark + readlimit |==> mark * readlimit
4829:AOR:+(long,long):-(long,long):org.apache.commons.io.input.NullReader@reset:242:mark + readlimit |==> mark - readlimit
4830:AOR:+(long,long):/(long,long):org.apache.commons.io.input.NullReader@reset:242:mark + readlimit |==> mark / readlimit
4831:ROR:>(long,long):!=(long,long):org.apache.commons.io.input.NullReader@reset:242:position > mark + readlimit |==> position != mark + readlimit
4832:ROR:>(long,long):>=(long,long):org.apache.commons.io.input.NullReader@reset:242:position > mark + readlimit |==> position >= mark + readlimit
4833:ROR:>(long,long):FALSE(long,long):org.apache.commons.io.input.NullReader@reset:242:position > mark + readlimit |==> false
4834:LVR:FALSE:TRUE:org.apache.commons.io.input.NullReader@reset:248:false |==> true
4835:COR:eof:TRUE:org.apache.commons.io.input.NullReader@skip:264:eof |==> false
4836:COR:eof:FALSE:org.apache.commons.io.input.NullReader@skip:264:eof |==> true
4837:ROR:==(long,long):<=(long,long):org.apache.commons.io.input.NullReader@skip:267:position == size |==> position <= size
4838:ROR:==(long,long):>=(long,long):org.apache.commons.io.input.NullReader@skip:267:position == size |==> position >= size
4839:ROR:==(long,long):FALSE(long,long):org.apache.commons.io.input.NullReader@skip:267:position == size |==> false
4840:STD:<ASSIGN>:<NO-OP>:org.apache.commons.io.input.NullReader@skip:270:position += numberOfChars |==> <NO-OP>
4841:AOR:-(long,long):%(long,long):org.apache.commons.io.input.NullReader@skip:273:position - size |==> position % size
4842:AOR:-(long,long):*(long,long):org.apache.commons.io.input.NullReader@skip:273:position - size |==> position * size
4843:AOR:-(long,long):+(long,long):org.apache.commons.io.input.NullReader@skip:273:position - size |==> position + size
4844:AOR:-(long,long):/(long,long):org.apache.commons.io.input.NullReader@skip:273:position - size |==> position / size
4845:AOR:-(long,long):%(long,long):org.apache.commons.io.input.NullReader@skip:273:numberOfChars - (position - size) |==> numberOfChars % (position - size)
4846:AOR:-(long,long):*(long,long):org.apache.commons.io.input.NullReader@skip:273:numberOfChars - (position - size) |==> numberOfChars * (position - size)
4847:AOR:-(long,long):+(long,long):org.apache.commons.io.input.NullReader@skip:273:numberOfChars - (position - size) |==> numberOfChars + (position - size)
4848:AOR:-(long,long):/(long,long):org.apache.commons.io.input.NullReader@skip:273:numberOfChars - (position - size) |==> numberOfChars / (position - size)
4849:ROR:>(long,long):!=(long,long):org.apache.commons.io.input.NullReader@skip:272:position > size |==> position != size
4850:ROR:>(long,long):>=(long,long):org.apache.commons.io.input.NullReader@skip:272:position > size |==> position >= size
4851:ROR:>(long,long):FALSE(long,long):org.apache.commons.io.input.NullReader@skip:272:position > size |==> false
4852:LVR:0:POS:org.apache.commons.io.input.NullReader@processChar:288:0 |==> 1
4853:LVR:0:NEG:org.apache.commons.io.input.NullReader@processChar:288:0 |==> -1
4854:LVR:TRUE:FALSE:org.apache.commons.io.input.NullReader@doEndOfFile:314:true |==> false
4855:COR:throwEofException:TRUE:org.apache.commons.io.input.NullReader@doEndOfFile:315:throwEofException |==> false
4856:COR:throwEofException:FALSE:org.apache.commons.io.input.NullReader@doEndOfFile:315:throwEofException |==> true
4857:LVR:NEG:0:org.apache.commons.io.input.NullReader@doEndOfFile:318:-1 |==> 0
4858:LVR:NEG:POS:org.apache.commons.io.input.NullReader@doEndOfFile:318:-1 |==> 1
4859:LVR:POS:0:org.apache.commons.io.input.ProxyReader@read:55:1 |==> 0
4860:LVR:POS:NEG:org.apache.commons.io.input.ProxyReader@read:55:1 |==> -1
4861:STD:<CALL>:<NO-OP>:org.apache.commons.io.input.ProxyReader@read:55:beforeRead(1) |==> <NO-OP>
4862:LVR:NEG:0:org.apache.commons.io.input.ProxyReader@read:57:-1 |==> 0
4863:LVR:NEG:POS:org.apache.commons.io.input.ProxyReader@read:57:-1 |==> 1
4864:ROR:!=(int,int):<(int,int):org.apache.commons.io.input.ProxyReader@read:57:c != -1 |==> c < -1
4865:ROR:!=(int,int):>(int,int):org.apache.commons.io.input.ProxyReader@read:57:c != -1 |==> c > -1
4866:ROR:!=(int,int):TRUE(int,int):org.apache.commons.io.input.ProxyReader@read:57:c != -1 |==> true
4867:LVR:POS:0:org.apache.commons.io.input.ProxyReader@read:57:1 |==> 0
4868:LVR:POS:NEG:org.apache.commons.io.input.ProxyReader@read:57:1 |==> -1
4869:LVR:NEG:0:org.apache.commons.io.input.ProxyReader@read:57:-1 |==> 0
4870:LVR:NEG:POS:org.apache.commons.io.input.ProxyReader@read:57:-1 |==> 1
4871:STD:<CALL>:<NO-OP>:org.apache.commons.io.input.ProxyReader@read:57:afterRead(c != -1 ? 1 : -1) |==> <NO-OP>
4872:STD:<CALL>:<NO-OP>:org.apache.commons.io.input.ProxyReader@read:60:handleIOException(e) |==> <NO-OP>
4873:LVR:NEG:0:org.apache.commons.io.input.ProxyReader@read:61:-1 |==> 0
4874:LVR:NEG:POS:org.apache.commons.io.input.ProxyReader@read:61:-1 |==> 1
4875:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.apache.commons.io.input.ProxyReader@read:74:chr != null |==> true
4876:LVR:0:POS:org.apache.commons.io.input.ProxyReader@read:74:0 |==> 1
4877:LVR:0:NEG:org.apache.commons.io.input.ProxyReader@read:74:0 |==> -1
4878:STD:<CALL>:<NO-OP>:org.apache.commons.io.input.ProxyReader@read:74:beforeRead(chr != null ? chr.length : 0) |==> <NO-OP>
4879:STD:<CALL>:<NO-OP>:org.apache.commons.io.input.ProxyReader@read:76:afterRead(n) |==> <NO-OP>
4880:STD:<CALL>:<NO-OP>:org.apache.commons.io.input.ProxyReader@read:79:handleIOException(e) |==> <NO-OP>
4881:LVR:NEG:0:org.apache.commons.io.input.ProxyReader@read:80:-1 |==> 0
4882:LVR:NEG:POS:org.apache.commons.io.input.ProxyReader@read:80:-1 |==> 1
4883:STD:<CALL>:<NO-OP>:org.apache.commons.io.input.ProxyReader@read:95:beforeRead(len) |==> <NO-OP>
4884:STD:<CALL>:<NO-OP>:org.apache.commons.io.input.ProxyReader@read:97:afterRead(n) |==> <NO-OP>
4885:STD:<CALL>:<NO-OP>:org.apache.commons.io.input.ProxyReader@read:100:handleIOException(e) |==> <NO-OP>
4886:LVR:NEG:0:org.apache.commons.io.input.ProxyReader@read:101:-1 |==> 0
4887:LVR:NEG:POS:org.apache.commons.io.input.ProxyReader@read:101:-1 |==> 1
4888:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.apache.commons.io.input.ProxyReader@read:115:target != null |==> true
4889:LVR:0:POS:org.apache.commons.io.input.ProxyReader@read:115:0 |==> 1
4890:LVR:0:NEG:org.apache.commons.io.input.ProxyReader@read:115:0 |==> -1
4891:STD:<CALL>:<NO-OP>:org.apache.commons.io.input.ProxyReader@read:115:beforeRead(target != null ? target.length() : 0) |==> <NO-OP>
4892:STD:<CALL>:<NO-OP>:org.apache.commons.io.input.ProxyReader@read:117:afterRead(n) |==> <NO-OP>
4893:STD:<CALL>:<NO-OP>:org.apache.commons.io.input.ProxyReader@read:120:handleIOException(e) |==> <NO-OP>
4894:LVR:NEG:0:org.apache.commons.io.input.ProxyReader@read:121:-1 |==> 0
4895:LVR:NEG:POS:org.apache.commons.io.input.ProxyReader@read:121:-1 |==> 1
4896:STD:<CALL>:<NO-OP>:org.apache.commons.io.input.ProxyReader@skip:136:handleIOException(e) |==> <NO-OP>
4897:LVR:0:POS:org.apache.commons.io.input.ProxyReader@skip:137:0 |==> 1
4898:LVR:0:NEG:org.apache.commons.io.input.ProxyReader@skip:137:0 |==> -1
4899:STD:<CALL>:<NO-OP>:org.apache.commons.io.input.ProxyReader@ready:151:handleIOException(e) |==> <NO-OP>
4900:LVR:FALSE:TRUE:org.apache.commons.io.input.ProxyReader@ready:152:false |==> true
4901:STD:<CALL>:<NO-OP>:org.apache.commons.io.input.ProxyReader@close:163:in.close() |==> <NO-OP>
4902:STD:<CALL>:<NO-OP>:org.apache.commons.io.input.ProxyReader@close:165:handleIOException(e) |==> <NO-OP>
4903:STD:<CALL>:<NO-OP>:org.apache.commons.io.input.ProxyReader@mark:177:in.mark(idx) |==> <NO-OP>
4904:STD:<CALL>:<NO-OP>:org.apache.commons.io.input.ProxyReader@mark:179:handleIOException(e) |==> <NO-OP>
4905:STD:<CALL>:<NO-OP>:org.apache.commons.io.input.ProxyReader@reset:190:in.reset() |==> <NO-OP>
4906:STD:<CALL>:<NO-OP>:org.apache.commons.io.input.ProxyReader@reset:192:handleIOException(e) |==> <NO-OP>
4907:STD:<CALL>:<NO-OP>:org.apache.commons.io.input.ReaderInputStream@<init>:122:this.encoderIn.flip() |==> <NO-OP>
4908:LVR:POS:0:org.apache.commons.io.input.ReaderInputStream@<init>:123:128 |==> 0
4909:LVR:POS:NEG:org.apache.commons.io.input.ReaderInputStream@<init>:123:128 |==> -128
4910:STD:<CALL>:<NO-OP>:org.apache.commons.io.input.ReaderInputStream@<init>:124:this.encoderOut.flip() |==> <NO-OP>
4911:STD:<CALL>:<NO-OP>:org.apache.commons.io.input.ReaderInputStream@fillBuffer:193:encoderIn.compact() |==> <NO-OP>
4912:LVR:TRUE:FALSE:org.apache.commons.io.input.ReaderInputStream@fillBuffer:200:true |==> false
4913:AOR:+(int,int):%(int,int):org.apache.commons.io.input.ReaderInputStream@fillBuffer:202:position + c |==> position % c
4914:AOR:+(int,int):*(int,int):org.apache.commons.io.input.ReaderInputStream@fillBuffer:202:position + c |==> position * c
4915:AOR:+(int,int):-(int,int):org.apache.commons.io.input.ReaderInputStream@fillBuffer:202:position + c |==> position - c
4916:AOR:+(int,int):/(int,int):org.apache.commons.io.input.ReaderInputStream@fillBuffer:202:position + c |==> position / c
4917:STD:<CALL>:<NO-OP>:org.apache.commons.io.input.ReaderInputStream@fillBuffer:202:encoderIn.position(position + c) |==> <NO-OP>
4918:LVR:NEG:0:org.apache.commons.io.input.ReaderInputStream@fillBuffer:199:-1 |==> 0
4919:LVR:NEG:POS:org.apache.commons.io.input.ReaderInputStream@fillBuffer:199:-1 |==> 1
4920:ROR:==(int,int):<=(int,int):org.apache.commons.io.input.ReaderInputStream@fillBuffer:199:c == -1 |==> c <= -1
4921:ROR:==(int,int):>=(int,int):org.apache.commons.io.input.ReaderInputStream@fillBuffer:199:c == -1 |==> c >= -1
4922:ROR:==(int,int):FALSE(int,int):org.apache.commons.io.input.ReaderInputStream@fillBuffer:199:c == -1 |==> false
4923:STD:<CALL>:<NO-OP>:org.apache.commons.io.input.ReaderInputStream@fillBuffer:204:encoderIn.flip() |==> <NO-OP>
4924:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.io.input.ReaderInputStream@fillBuffer:192:lastCoderResult == null |==> false
4925:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.io.input.ReaderInputStream@fillBuffer:192:lastCoderResult == null || lastCoderResult.isUnderflow() |==> lastCoderResult == null != lastCoderResult.isUnderflow()
4926:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.io.input.ReaderInputStream@fillBuffer:192:lastCoderResult == null || lastCoderResult.isUnderflow() |==> lastCoderResult == null
4927:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.io.input.ReaderInputStream@fillBuffer:192:lastCoderResult == null || lastCoderResult.isUnderflow() |==> lastCoderResult.isUnderflow()
4928:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.io.input.ReaderInputStream@fillBuffer:192:lastCoderResult == null || lastCoderResult.isUnderflow() |==> true
4929:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.io.input.ReaderInputStream@fillBuffer:192:!endOfInput && (lastCoderResult == null || lastCoderResult.isUnderflow()) |==> !endOfInput == (lastCoderResult == null || lastCoderResult.isUnderflow())
4930:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.io.input.ReaderInputStream@fillBuffer:192:!endOfInput && (lastCoderResult == null || lastCoderResult.isUnderflow()) |==> false
4931:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.io.input.ReaderInputStream@fillBuffer:192:!endOfInput && (lastCoderResult == null || lastCoderResult.isUnderflow()) |==> !endOfInput
4932:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.io.input.ReaderInputStream@fillBuffer:192:!endOfInput && (lastCoderResult == null || lastCoderResult.isUnderflow()) |==> (lastCoderResult == null || lastCoderResult.isUnderflow())
4933:STD:<CALL>:<NO-OP>:org.apache.commons.io.input.ReaderInputStream@fillBuffer:206:encoderOut.compact() |==> <NO-OP>
4934:STD:<CALL>:<NO-OP>:org.apache.commons.io.input.ReaderInputStream@fillBuffer:208:encoderOut.flip() |==> <NO-OP>
4935:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.io.input.ReaderInputStream@read:223:b == null |==> false
4936:LVR:0:POS:org.apache.commons.io.input.ReaderInputStream@read:226:0 |==> 1
4937:LVR:0:NEG:org.apache.commons.io.input.ReaderInputStream@read:226:0 |==> -1
4938:ROR:<(int,int):!=(int,int):org.apache.commons.io.input.ReaderInputStream@read:226:len < 0 |==> len != 0
4939:ROR:<(int,int):<=(int,int):org.apache.commons.io.input.ReaderInputStream@read:226:len < 0 |==> len <= 0
4940:ROR:<(int,int):FALSE(int,int):org.apache.commons.io.input.ReaderInputStream@read:226:len < 0 |==> false
4941:LVR:0:POS:org.apache.commons.io.input.ReaderInputStream@read:226:0 |==> 1
4942:LVR:0:NEG:org.apache.commons.io.input.ReaderInputStream@read:226:0 |==> -1
4943:ROR:<(int,int):!=(int,int):org.apache.commons.io.input.ReaderInputStream@read:226:off < 0 |==> off != 0
4944:ROR:<(int,int):<=(int,int):org.apache.commons.io.input.ReaderInputStream@read:226:off < 0 |==> off <= 0
4945:ROR:<(int,int):FALSE(int,int):org.apache.commons.io.input.ReaderInputStream@read:226:off < 0 |==> false
4946:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.io.input.ReaderInputStream@read:226:len < 0 || off < 0 |==> len < 0 != off < 0
4947:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.io.input.ReaderInputStream@read:226:len < 0 || off < 0 |==> len < 0
4948:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.io.input.ReaderInputStream@read:226:len < 0 || off < 0 |==> off < 0
4949:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.io.input.ReaderInputStream@read:226:len < 0 || off < 0 |==> true
4950:AOR:+(int,int):%(int,int):org.apache.commons.io.input.ReaderInputStream@read:226:off + len |==> off % len
4951:AOR:+(int,int):*(int,int):org.apache.commons.io.input.ReaderInputStream@read:226:off + len |==> off * len
4952:AOR:+(int,int):-(int,int):org.apache.commons.io.input.ReaderInputStream@read:226:off + len |==> off - len
4953:AOR:+(int,int):/(int,int):org.apache.commons.io.input.ReaderInputStream@read:226:off + len |==> off / len
4954:ROR:>(int,int):!=(int,int):org.apache.commons.io.input.ReaderInputStream@read:226:(off + len) > b.length |==> (off + len) != b.length
4955:ROR:>(int,int):>=(int,int):org.apache.commons.io.input.ReaderInputStream@read:226:(off + len) > b.length |==> (off + len) >= b.length
4956:ROR:>(int,int):FALSE(int,int):org.apache.commons.io.input.ReaderInputStream@read:226:(off + len) > b.length |==> false
4957:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.io.input.ReaderInputStream@read:226:len < 0 || off < 0 || (off + len) > b.length |==> (len < 0 || off < 0) != (off + len) > b.length
4958:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.io.input.ReaderInputStream@read:226:len < 0 || off < 0 || (off + len) > b.length |==> len < 0 || off < 0
4959:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.io.input.ReaderInputStream@read:226:len < 0 || off < 0 || (off + len) > b.length |==> (off + len) > b.length
4960:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.io.input.ReaderInputStream@read:226:len < 0 || off < 0 || (off + len) > b.length |==> true
4961:LVR:0:POS:org.apache.commons.io.input.ReaderInputStream@read:230:0 |==> 1
4962:LVR:0:NEG:org.apache.commons.io.input.ReaderInputStream@read:230:0 |==> -1
4963:LVR:0:POS:org.apache.commons.io.input.ReaderInputStream@read:232:0 |==> 1
4964:LVR:0:NEG:org.apache.commons.io.input.ReaderInputStream@read:232:0 |==> -1
4965:LVR:0:POS:org.apache.commons.io.input.ReaderInputStream@read:231:0 |==> 1
4966:LVR:0:NEG:org.apache.commons.io.input.ReaderInputStream@read:231:0 |==> -1
4967:ROR:==(int,int):<=(int,int):org.apache.commons.io.input.ReaderInputStream@read:231:len == 0 |==> len <= 0
4968:ROR:==(int,int):>=(int,int):org.apache.commons.io.input.ReaderInputStream@read:231:len == 0 |==> len >= 0
4969:ROR:==(int,int):FALSE(int,int):org.apache.commons.io.input.ReaderInputStream@read:231:len == 0 |==> false
4970:LVR:0:POS:org.apache.commons.io.input.ReaderInputStream@read:234:0 |==> 1
4971:LVR:0:NEG:org.apache.commons.io.input.ReaderInputStream@read:234:0 |==> -1
4972:ROR:>(int,int):!=(int,int):org.apache.commons.io.input.ReaderInputStream@read:234:len > 0 |==> len != 0
4973:ROR:>(int,int):>=(int,int):org.apache.commons.io.input.ReaderInputStream@read:234:len > 0 |==> len >= 0
4974:ROR:>(int,int):FALSE(int,int):org.apache.commons.io.input.ReaderInputStream@read:234:len > 0 |==> false
4975:STD:<CALL>:<NO-OP>:org.apache.commons.io.input.ReaderInputStream@read:237:encoderOut.get(b, off, c) |==> <NO-OP>
4976:STD:<ASSIGN>:<NO-OP>:org.apache.commons.io.input.ReaderInputStream@read:238:off += c |==> <NO-OP>
4977:STD:<ASSIGN>:<NO-OP>:org.apache.commons.io.input.ReaderInputStream@read:239:len -= c |==> <NO-OP>
4978:STD:<ASSIGN>:<NO-OP>:org.apache.commons.io.input.ReaderInputStream@read:240:read += c |==> <NO-OP>
4979:STD:<CALL>:<NO-OP>:org.apache.commons.io.input.ReaderInputStream@read:242:fillBuffer() |==> <NO-OP>
4980:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.io.input.ReaderInputStream@read:243:endOfInput && !encoderOut.hasRemaining() |==> endOfInput == !encoderOut.hasRemaining()
4981:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.io.input.ReaderInputStream@read:243:endOfInput && !encoderOut.hasRemaining() |==> false
4982:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.io.input.ReaderInputStream@read:243:endOfInput && !encoderOut.hasRemaining() |==> endOfInput
4983:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.io.input.ReaderInputStream@read:243:endOfInput && !encoderOut.hasRemaining() |==> !encoderOut.hasRemaining()
4984:COR:encoderOut.hasRemaining():TRUE:org.apache.commons.io.input.ReaderInputStream@read:235:encoderOut.hasRemaining() |==> false
4985:COR:encoderOut.hasRemaining():FALSE:org.apache.commons.io.input.ReaderInputStream@read:235:encoderOut.hasRemaining() |==> true
4986:LVR:0:POS:org.apache.commons.io.input.ReaderInputStream@read:248:0 |==> 1
4987:LVR:0:NEG:org.apache.commons.io.input.ReaderInputStream@read:248:0 |==> -1
4988:ROR:==(int,int):<=(int,int):org.apache.commons.io.input.ReaderInputStream@read:248:read == 0 |==> read <= 0
4989:ROR:==(int,int):>=(int,int):org.apache.commons.io.input.ReaderInputStream@read:248:read == 0 |==> read >= 0
4990:ROR:==(int,int):FALSE(int,int):org.apache.commons.io.input.ReaderInputStream@read:248:read == 0 |==> false
4991:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.io.input.ReaderInputStream@read:248:read == 0 && endOfInput |==> read == 0 == endOfInput
4992:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.io.input.ReaderInputStream@read:248:read == 0 && endOfInput |==> false
4993:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.io.input.ReaderInputStream@read:248:read == 0 && endOfInput |==> read == 0
4994:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.io.input.ReaderInputStream@read:248:read == 0 && endOfInput |==> endOfInput
4995:LVR:NEG:0:org.apache.commons.io.input.ReaderInputStream@read:248:-1 |==> 0
4996:LVR:NEG:POS:org.apache.commons.io.input.ReaderInputStream@read:248:-1 |==> 1
4997:LVR:0:POS:org.apache.commons.io.input.ReaderInputStream@read:261:0 |==> 1
4998:LVR:0:NEG:org.apache.commons.io.input.ReaderInputStream@read:261:0 |==> -1
4999:LVR:POS:0:org.apache.commons.io.input.ReaderInputStream@read:275:255 |==> 0
5000:LVR:POS:NEG:org.apache.commons.io.input.ReaderInputStream@read:275:255 |==> -255
5001:LOR:&(int,int):^(int,int):org.apache.commons.io.input.ReaderInputStream@read:275:encoderOut.get() & 255 |==> encoderOut.get() ^ 255
5002:LOR:&(int,int):|(int,int):org.apache.commons.io.input.ReaderInputStream@read:275:encoderOut.get() & 255 |==> encoderOut.get() | 255
5003:STD:<CALL>:<NO-OP>:org.apache.commons.io.input.ReaderInputStream@read:277:fillBuffer() |==> <NO-OP>
5004:LVR:NEG:0:org.apache.commons.io.input.ReaderInputStream@read:279:-1 |==> 0
5005:LVR:NEG:POS:org.apache.commons.io.input.ReaderInputStream@read:279:-1 |==> 1
5006:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.io.input.ReaderInputStream@read:278:endOfInput && !encoderOut.hasRemaining() |==> endOfInput == !encoderOut.hasRemaining()
5007:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.io.input.ReaderInputStream@read:278:endOfInput && !encoderOut.hasRemaining() |==> false
5008:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.io.input.ReaderInputStream@read:278:endOfInput && !encoderOut.hasRemaining() |==> endOfInput
5009:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.io.input.ReaderInputStream@read:278:endOfInput && !encoderOut.hasRemaining() |==> !encoderOut.hasRemaining()
5010:COR:encoderOut.hasRemaining():TRUE:org.apache.commons.io.input.ReaderInputStream@read:274:encoderOut.hasRemaining() |==> false
5011:COR:encoderOut.hasRemaining():FALSE:org.apache.commons.io.input.ReaderInputStream@read:274:encoderOut.hasRemaining() |==> true
5012:STD:<CALL>:<NO-OP>:org.apache.commons.io.input.ReaderInputStream@close:292:reader.close() |==> <NO-OP>
5013:LVR:FALSE:TRUE:org.apache.commons.io.input.ReversedLinesFileReader:52:false |==> true
5014:LVR:POS:0:org.apache.commons.io.input.ReversedLinesFileReader@<init>:63:4096 |==> 0
5015:LVR:POS:NEG:org.apache.commons.io.input.ReversedLinesFileReader@<init>:63:4096 |==> -4096
5016:AOR:%(long,long):*(long,long):org.apache.commons.io.input.ReversedLinesFileReader@<init>:85:totalByteLength % blockSize |==> totalByteLength * blockSize
5017:AOR:%(long,long):+(long,long):org.apache.commons.io.input.ReversedLinesFileReader@<init>:85:totalByteLength % blockSize |==> totalByteLength + blockSize
5018:AOR:%(long,long):-(long,long):org.apache.commons.io.input.ReversedLinesFileReader@<init>:85:totalByteLength % blockSize |==> totalByteLength - blockSize
5019:AOR:%(long,long):/(long,long):org.apache.commons.io.input.ReversedLinesFileReader@<init>:85:totalByteLength % blockSize |==> totalByteLength / blockSize
5020:AOR:/(long,long):%(long,long):org.apache.commons.io.input.ReversedLinesFileReader@<init>:87:totalByteLength / blockSize |==> totalByteLength % blockSize
5021:AOR:/(long,long):*(long,long):org.apache.commons.io.input.ReversedLinesFileReader@<init>:87:totalByteLength / blockSize |==> totalByteLength * blockSize
5022:AOR:/(long,long):+(long,long):org.apache.commons.io.input.ReversedLinesFileReader@<init>:87:totalByteLength / blockSize |==> totalByteLength + blockSize
5023:AOR:/(long,long):-(long,long):org.apache.commons.io.input.ReversedLinesFileReader@<init>:87:totalByteLength / blockSize |==> totalByteLength - blockSize
5024:LVR:POS:0:org.apache.commons.io.input.ReversedLinesFileReader@<init>:87:1 |==> 0
5025:LVR:POS:NEG:org.apache.commons.io.input.ReversedLinesFileReader@<init>:87:1 |==> -1
5026:AOR:+(long,long):%(long,long):org.apache.commons.io.input.ReversedLinesFileReader@<init>:87:totalByteLength / blockSize + 1 |==> totalByteLength / blockSize % 1
5027:AOR:+(long,long):*(long,long):org.apache.commons.io.input.ReversedLinesFileReader@<init>:87:totalByteLength / blockSize + 1 |==> totalByteLength / blockSize * 1
5028:AOR:+(long,long):-(long,long):org.apache.commons.io.input.ReversedLinesFileReader@<init>:87:totalByteLength / blockSize + 1 |==> totalByteLength / blockSize - 1
5029:AOR:+(long,long):/(long,long):org.apache.commons.io.input.ReversedLinesFileReader@<init>:87:totalByteLength / blockSize + 1 |==> totalByteLength / blockSize / 1
5030:AOR:/(long,long):%(long,long):org.apache.commons.io.input.ReversedLinesFileReader@<init>:89:totalByteLength / blockSize |==> totalByteLength % blockSize
5031:AOR:/(long,long):*(long,long):org.apache.commons.io.input.ReversedLinesFileReader@<init>:89:totalByteLength / blockSize |==> totalByteLength * blockSize
5032:AOR:/(long,long):+(long,long):org.apache.commons.io.input.ReversedLinesFileReader@<init>:89:totalByteLength / blockSize |==> totalByteLength + blockSize
5033:AOR:/(long,long):-(long,long):org.apache.commons.io.input.ReversedLinesFileReader@<init>:89:totalByteLength / blockSize |==> totalByteLength - blockSize
5034:LVR:0:POS:org.apache.commons.io.input.ReversedLinesFileReader@<init>:90:0 |==> 1
5035:LVR:0:NEG:org.apache.commons.io.input.ReversedLinesFileReader@<init>:90:0 |==> -1
5036:ROR:>(long,long):!=(long,long):org.apache.commons.io.input.ReversedLinesFileReader@<init>:90:totalByteLength > 0 |==> totalByteLength != 0
5037:ROR:>(long,long):>=(long,long):org.apache.commons.io.input.ReversedLinesFileReader@<init>:90:totalByteLength > 0 |==> totalByteLength >= 0
5038:ROR:>(long,long):FALSE(long,long):org.apache.commons.io.input.ReversedLinesFileReader@<init>:90:totalByteLength > 0 |==> false
5039:LVR:0:POS:org.apache.commons.io.input.ReversedLinesFileReader@<init>:86:0 |==> 1
5040:LVR:0:NEG:org.apache.commons.io.input.ReversedLinesFileReader@<init>:86:0 |==> -1
5041:ROR:>(int,int):!=(int,int):org.apache.commons.io.input.ReversedLinesFileReader@<init>:86:lastBlockLength > 0 |==> lastBlockLength != 0
5042:ROR:>(int,int):>=(int,int):org.apache.commons.io.input.ReversedLinesFileReader@<init>:86:lastBlockLength > 0 |==> lastBlockLength >= 0
5043:ROR:>(int,int):FALSE(int,int):org.apache.commons.io.input.ReversedLinesFileReader@<init>:86:lastBlockLength > 0 |==> false
5044:LVR:POS:0:org.apache.commons.io.input.ReversedLinesFileReader@<init>:102:1 |==> 0
5045:LVR:POS:NEG:org.apache.commons.io.input.ReversedLinesFileReader@<init>:102:1 |==> -1
5046:LVR:POS:0:org.apache.commons.io.input.ReversedLinesFileReader@<init>:106:1 |==> 0
5047:LVR:POS:NEG:org.apache.commons.io.input.ReversedLinesFileReader@<init>:106:1 |==> -1
5048:LVR:POS:0:org.apache.commons.io.input.ReversedLinesFileReader@<init>:110:1 |==> 0
5049:LVR:POS:NEG:org.apache.commons.io.input.ReversedLinesFileReader@<init>:110:1 |==> -1
5050:LVR:POS:0:org.apache.commons.io.input.ReversedLinesFileReader@<init>:114:2 |==> 0
5051:LVR:POS:NEG:org.apache.commons.io.input.ReversedLinesFileReader@<init>:114:2 |==> -2
5052:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.io.input.ReversedLinesFileReader@<init>:115:charset == Charset.forName("UTF-16") |==> false
5053:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.io.input.ReversedLinesFileReader@<init>:111:charset == Charset.forName("UTF-16BE") |==> false
5054:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.io.input.ReversedLinesFileReader@<init>:111:charset == Charset.forName("UTF-16LE") |==> false
5055:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.io.input.ReversedLinesFileReader@<init>:111:charset == Charset.forName("UTF-16BE") || charset == Charset.forName("UTF-16LE") |==> charset == Charset.forName("UTF-16BE") != (charset == Charset.forName("UTF-16LE"))
5056:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.io.input.ReversedLinesFileReader@<init>:111:charset == Charset.forName("UTF-16BE") || charset == Charset.forName("UTF-16LE") |==> charset == Charset.forName("UTF-16BE")
5057:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.io.input.ReversedLinesFileReader@<init>:111:charset == Charset.forName("UTF-16BE") || charset == Charset.forName("UTF-16LE") |==> charset == Charset.forName("UTF-16LE")
5058:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.io.input.ReversedLinesFileReader@<init>:111:charset == Charset.forName("UTF-16BE") || charset == Charset.forName("UTF-16LE") |==> true
5059:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.io.input.ReversedLinesFileReader@<init>:107:charset == Charset.forName("Shift_JIS") |==> false
5060:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.io.input.ReversedLinesFileReader@<init>:103:charset == Charset.forName("UTF-8") |==> false
5061:LVR:POS:0:org.apache.commons.io.input.ReversedLinesFileReader@<init>:100:1.0F |==> 0.0F
5062:LVR:POS:NEG:org.apache.commons.io.input.ReversedLinesFileReader@<init>:100:1.0F |==> -1.0F
5063:ROR:==(float,float):<=(float,float):org.apache.commons.io.input.ReversedLinesFileReader@<init>:100:maxBytesPerChar == 1.0F |==> maxBytesPerChar <= 1.0F
5064:ROR:==(float,float):>=(float,float):org.apache.commons.io.input.ReversedLinesFileReader@<init>:100:maxBytesPerChar == 1.0F |==> maxBytesPerChar >= 1.0F
5065:ROR:==(float,float):FALSE(float,float):org.apache.commons.io.input.ReversedLinesFileReader@<init>:100:maxBytesPerChar == 1.0F |==> false
5066:LVR:0:POS:org.apache.commons.io.input.ReversedLinesFileReader@<init>:125:0 |==> 1
5067:LVR:0:NEG:org.apache.commons.io.input.ReversedLinesFileReader@<init>:125:0 |==> -1
5068:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.io.input.ReversedLinesFileReader@readLine:156:line == null |==> false
5069:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.apache.commons.io.input.ReversedLinesFileReader@readLine:158:currentFilePart != null |==> true
5070:LVR:TRUE:FALSE:org.apache.commons.io.input.ReversedLinesFileReader@readLine:168:true |==> false
5071:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.io.input.ReversedLinesFileReader@readLine:167:"".equals(line) && !trailingNewlineOfFileSkipped |==> "".equals(line) == !trailingNewlineOfFileSkipped
5072:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.io.input.ReversedLinesFileReader@readLine:167:"".equals(line) && !trailingNewlineOfFileSkipped |==> false
5073:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.io.input.ReversedLinesFileReader@readLine:167:"".equals(line) && !trailingNewlineOfFileSkipped |==> "".equals(line)
5074:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.io.input.ReversedLinesFileReader@readLine:167:"".equals(line) && !trailingNewlineOfFileSkipped |==> !trailingNewlineOfFileSkipped
5075:STD:<CALL>:<NO-OP>:org.apache.commons.io.input.ReversedLinesFileReader@close:181:randomAccessFile.close() |==> <NO-OP>
5076:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.apache.commons.io.input.ReversedLinesFileReader$FilePart@<init>:202:leftOverOfLastFilePart != null |==> true
5077:LVR:0:POS:org.apache.commons.io.input.ReversedLinesFileReader$FilePart@<init>:202:0 |==> 1
5078:LVR:0:NEG:org.apache.commons.io.input.ReversedLinesFileReader$FilePart@<init>:202:0 |==> -1
5079:AOR:+(int,int):%(int,int):org.apache.commons.io.input.ReversedLinesFileReader$FilePart@<init>:202:length + (leftOverOfLastFilePart != null ? leftOverOfLastFilePart.length : 0) |==> length % (leftOverOfLastFilePart != null ? leftOverOfLastFilePart.length : 0)
5080:AOR:+(int,int):*(int,int):org.apache.commons.io.input.ReversedLinesFileReader$FilePart@<init>:202:length + (leftOverOfLastFilePart != null ? leftOverOfLastFilePart.length : 0) |==> length * (leftOverOfLastFilePart != null ? leftOverOfLastFilePart.length : 0)
5081:AOR:+(int,int):-(int,int):org.apache.commons.io.input.ReversedLinesFileReader$FilePart@<init>:202:length + (leftOverOfLastFilePart != null ? leftOverOfLastFilePart.length : 0) |==> length - (leftOverOfLastFilePart != null ? leftOverOfLastFilePart.length : 0)
5082:AOR:+(int,int):/(int,int):org.apache.commons.io.input.ReversedLinesFileReader$FilePart@<init>:202:length + (leftOverOfLastFilePart != null ? leftOverOfLastFilePart.length : 0) |==> length / (leftOverOfLastFilePart != null ? leftOverOfLastFilePart.length : 0)
5083:LVR:POS:0:org.apache.commons.io.input.ReversedLinesFileReader$FilePart@<init>:204:1 |==> 0
5084:LVR:POS:NEG:org.apache.commons.io.input.ReversedLinesFileReader$FilePart@<init>:204:1 |==> -1
5085:AOR:-(long,long):%(long,long):org.apache.commons.io.input.ReversedLinesFileReader$FilePart@<init>:204:no - 1 |==> no % 1
5086:AOR:-(long,long):*(long,long):org.apache.commons.io.input.ReversedLinesFileReader$FilePart@<init>:204:no - 1 |==> no * 1
5087:AOR:-(long,long):+(long,long):org.apache.commons.io.input.ReversedLinesFileReader$FilePart@<init>:204:no - 1 |==> no + 1
5088:AOR:-(long,long):/(long,long):org.apache.commons.io.input.ReversedLinesFileReader$FilePart@<init>:204:no - 1 |==> no / 1
5089:AOR:*(long,long):%(long,long):org.apache.commons.io.input.ReversedLinesFileReader$FilePart@<init>:204:(no - 1) * blockSize |==> (no - 1) % blockSize
5090:AOR:*(long,long):+(long,long):org.apache.commons.io.input.ReversedLinesFileReader$FilePart@<init>:204:(no - 1) * blockSize |==> (no - 1) + blockSize
5091:AOR:*(long,long):-(long,long):org.apache.commons.io.input.ReversedLinesFileReader$FilePart@<init>:204:(no - 1) * blockSize |==> (no - 1) - blockSize
5092:AOR:*(long,long):/(long,long):org.apache.commons.io.input.ReversedLinesFileReader$FilePart@<init>:204:(no - 1) * blockSize |==> (no - 1) / blockSize
5093:STD:<CALL>:<NO-OP>:org.apache.commons.io.input.ReversedLinesFileReader$FilePart@<init>:208:randomAccessFile.seek(off) |==> <NO-OP>
5094:LVR:0:POS:org.apache.commons.io.input.ReversedLinesFileReader$FilePart@<init>:209:0 |==> 1
5095:LVR:0:NEG:org.apache.commons.io.input.ReversedLinesFileReader$FilePart@<init>:209:0 |==> -1
5096:ROR:!=(int,int):<(int,int):org.apache.commons.io.input.ReversedLinesFileReader$FilePart@<init>:210:countRead != length |==> countRead < length
5097:ROR:!=(int,int):>(int,int):org.apache.commons.io.input.ReversedLinesFileReader$FilePart@<init>:210:countRead != length |==> countRead > length
5098:ROR:!=(int,int):TRUE(int,int):org.apache.commons.io.input.ReversedLinesFileReader$FilePart@<init>:210:countRead != length |==> true
5099:LVR:0:POS:org.apache.commons.io.input.ReversedLinesFileReader$FilePart@<init>:207:0 |==> 1
5100:LVR:0:NEG:org.apache.commons.io.input.ReversedLinesFileReader$FilePart@<init>:207:0 |==> -1
5101:ROR:>(long,long):!=(long,long):org.apache.commons.io.input.ReversedLinesFileReader$FilePart@<init>:207:no > 0 |==> no != 0
5102:ROR:>(long,long):>=(long,long):org.apache.commons.io.input.ReversedLinesFileReader$FilePart@<init>:207:no > 0 |==> no >= 0
5103:ROR:>(long,long):FALSE(long,long):org.apache.commons.io.input.ReversedLinesFileReader$FilePart@<init>:207:no > 0 |==> false
5104:LVR:0:POS:org.apache.commons.io.input.ReversedLinesFileReader$FilePart@<init>:216:0 |==> 1
5105:LVR:0:NEG:org.apache.commons.io.input.ReversedLinesFileReader$FilePart@<init>:216:0 |==> -1
5106:STD:<CALL>:<NO-OP>:org.apache.commons.io.input.ReversedLinesFileReader$FilePart@<init>:216:System.arraycopy(leftOverOfLastFilePart, 0, data, length, leftOverOfLastFilePart.length) |==> <NO-OP>
5107:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.apache.commons.io.input.ReversedLinesFileReader$FilePart@<init>:215:leftOverOfLastFilePart != null |==> true
5108:LVR:POS:0:org.apache.commons.io.input.ReversedLinesFileReader$FilePart@<init>:218:1 |==> 0
5109:LVR:POS:NEG:org.apache.commons.io.input.ReversedLinesFileReader$FilePart@<init>:218:1 |==> -1
5110:AOR:-(int,int):%(int,int):org.apache.commons.io.input.ReversedLinesFileReader$FilePart@<init>:218:data.length - 1 |==> data.length % 1
5111:AOR:-(int,int):*(int,int):org.apache.commons.io.input.ReversedLinesFileReader$FilePart@<init>:218:data.length - 1 |==> data.length * 1
5112:AOR:-(int,int):+(int,int):org.apache.commons.io.input.ReversedLinesFileReader$FilePart@<init>:218:data.length - 1 |==> data.length + 1
5113:AOR:-(int,int):/(int,int):org.apache.commons.io.input.ReversedLinesFileReader$FilePart@<init>:218:data.length - 1 |==> data.length / 1
5114:LVR:NEG:0:org.apache.commons.io.input.ReversedLinesFileReader$FilePart@rollOver:230:-1 |==> 0
5115:LVR:NEG:POS:org.apache.commons.io.input.ReversedLinesFileReader$FilePart@rollOver:230:-1 |==> 1
5116:ROR:>(int,int):!=(int,int):org.apache.commons.io.input.ReversedLinesFileReader$FilePart@rollOver:230:currentLastBytePos > -1 |==> currentLastBytePos != -1
5117:ROR:>(int,int):>=(int,int):org.apache.commons.io.input.ReversedLinesFileReader$FilePart@rollOver:230:currentLastBytePos > -1 |==> currentLastBytePos >= -1
5118:ROR:>(int,int):FALSE(int,int):org.apache.commons.io.input.ReversedLinesFileReader$FilePart@rollOver:230:currentLastBytePos > -1 |==> false
5119:LVR:POS:0:org.apache.commons.io.input.ReversedLinesFileReader$FilePart@rollOver:236:1 |==> 0
5120:LVR:POS:NEG:org.apache.commons.io.input.ReversedLinesFileReader$FilePart@rollOver:236:1 |==> -1
5121:AOR:-(long,long):%(long,long):org.apache.commons.io.input.ReversedLinesFileReader$FilePart@rollOver:236:no - 1 |==> no % 1
5122:AOR:-(long,long):*(long,long):org.apache.commons.io.input.ReversedLinesFileReader$FilePart@rollOver:236:no - 1 |==> no * 1
5123:AOR:-(long,long):+(long,long):org.apache.commons.io.input.ReversedLinesFileReader$FilePart@rollOver:236:no - 1 |==> no + 1
5124:AOR:-(long,long):/(long,long):org.apache.commons.io.input.ReversedLinesFileReader$FilePart@rollOver:236:no - 1 |==> no / 1
5125:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.apache.commons.io.input.ReversedLinesFileReader$FilePart@rollOver:239:leftOver != null |==> true
5126:LVR:POS:0:org.apache.commons.io.input.ReversedLinesFileReader$FilePart@rollOver:235:1 |==> 0
5127:LVR:POS:NEG:org.apache.commons.io.input.ReversedLinesFileReader$FilePart@rollOver:235:1 |==> -1
5128:ROR:>(long,long):!=(long,long):org.apache.commons.io.input.ReversedLinesFileReader$FilePart@rollOver:235:no > 1 |==> no != 1
5129:ROR:>(long,long):>=(long,long):org.apache.commons.io.input.ReversedLinesFileReader$FilePart@rollOver:235:no > 1 |==> no >= 1
5130:ROR:>(long,long):FALSE(long,long):org.apache.commons.io.input.ReversedLinesFileReader$FilePart@rollOver:235:no > 1 |==> false
5131:LVR:POS:0:org.apache.commons.io.input.ReversedLinesFileReader$FilePart@readLine:258:1 |==> 0
5132:LVR:POS:NEG:org.apache.commons.io.input.ReversedLinesFileReader$FilePart@readLine:258:1 |==> -1
5133:ROR:==(long,long):<=(long,long):org.apache.commons.io.input.ReversedLinesFileReader$FilePart@readLine:258:no == 1 |==> no <= 1
5134:ROR:==(long,long):>=(long,long):org.apache.commons.io.input.ReversedLinesFileReader$FilePart@readLine:258:no == 1 |==> no >= 1
5135:ROR:==(long,long):FALSE(long,long):org.apache.commons.io.input.ReversedLinesFileReader$FilePart@readLine:258:no == 1 |==> false
5136:LVR:NEG:0:org.apache.commons.io.input.ReversedLinesFileReader$FilePart@readLine:261:-1 |==> 0
5137:LVR:NEG:POS:org.apache.commons.io.input.ReversedLinesFileReader$FilePart@readLine:261:-1 |==> 1
5138:ROR:>(int,int):!=(int,int):org.apache.commons.io.input.ReversedLinesFileReader$FilePart@readLine:261:i > -1 |==> i != -1
5139:ROR:>(int,int):>=(int,int):org.apache.commons.io.input.ReversedLinesFileReader$FilePart@readLine:261:i > -1 |==> i >= -1
5140:ROR:>(int,int):FALSE(int,int):org.apache.commons.io.input.ReversedLinesFileReader$FilePart@readLine:261:i > -1 |==> false
5141:STD:<CALL>:<NO-OP>:org.apache.commons.io.input.ReversedLinesFileReader$FilePart@readLine:266:createLeftOver() |==> <NO-OP>
5142:ROR:<(int,int):!=(int,int):org.apache.commons.io.input.ReversedLinesFileReader$FilePart@readLine:263:i < avoidNewlineSplitBufferSize |==> i != avoidNewlineSplitBufferSize
5143:ROR:<(int,int):<=(int,int):org.apache.commons.io.input.ReversedLinesFileReader$FilePart@readLine:263:i < avoidNewlineSplitBufferSize |==> i <= avoidNewlineSplitBufferSize
5144:ROR:<(int,int):FALSE(int,int):org.apache.commons.io.input.ReversedLinesFileReader$FilePart@readLine:263:i < avoidNewlineSplitBufferSize |==> false
5145:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.io.input.ReversedLinesFileReader$FilePart@readLine:263:!isLastFilePart && i < avoidNewlineSplitBufferSize |==> !isLastFilePart == i < avoidNewlineSplitBufferSize
5146:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.io.input.ReversedLinesFileReader$FilePart@readLine:263:!isLastFilePart && i < avoidNewlineSplitBufferSize |==> false
5147:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.io.input.ReversedLinesFileReader$FilePart@readLine:263:!isLastFilePart && i < avoidNewlineSplitBufferSize |==> !isLastFilePart
5148:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.io.input.ReversedLinesFileReader$FilePart@readLine:263:!isLastFilePart && i < avoidNewlineSplitBufferSize |==> i < avoidNewlineSplitBufferSize
5149:LVR:POS:0:org.apache.commons.io.input.ReversedLinesFileReader$FilePart@readLine:272:1 |==> 0
5150:LVR:POS:NEG:org.apache.commons.io.input.ReversedLinesFileReader$FilePart@readLine:272:1 |==> -1
5151:AOR:+(int,int):%(int,int):org.apache.commons.io.input.ReversedLinesFileReader$FilePart@readLine:272:i + 1 |==> i % 1
5152:AOR:+(int,int):*(int,int):org.apache.commons.io.input.ReversedLinesFileReader$FilePart@readLine:272:i + 1 |==> i * 1
5153:AOR:+(int,int):-(int,int):org.apache.commons.io.input.ReversedLinesFileReader$FilePart@readLine:272:i + 1 |==> i - 1
5154:AOR:+(int,int):/(int,int):org.apache.commons.io.input.ReversedLinesFileReader$FilePart@readLine:272:i + 1 |==> i / 1
5155:AOR:-(int,int):%(int,int):org.apache.commons.io.input.ReversedLinesFileReader$FilePart@readLine:273:currentLastBytePos - lineStart |==> currentLastBytePos % lineStart
5156:AOR:-(int,int):*(int,int):org.apache.commons.io.input.ReversedLinesFileReader$FilePart@readLine:273:currentLastBytePos - lineStart |==> currentLastBytePos * lineStart
5157:AOR:-(int,int):+(int,int):org.apache.commons.io.input.ReversedLinesFileReader$FilePart@readLine:273:currentLastBytePos - lineStart |==> currentLastBytePos + lineStart
5158:AOR:-(int,int):/(int,int):org.apache.commons.io.input.ReversedLinesFileReader$FilePart@readLine:273:currentLastBytePos - lineStart |==> currentLastBytePos / lineStart
5159:LVR:POS:0:org.apache.commons.io.input.ReversedLinesFileReader$FilePart@readLine:273:1 |==> 0
5160:LVR:POS:NEG:org.apache.commons.io.input.ReversedLinesFileReader$FilePart@readLine:273:1 |==> -1
5161:AOR:+(int,int):%(int,int):org.apache.commons.io.input.ReversedLinesFileReader$FilePart@readLine:273:currentLastBytePos - lineStart + 1 |==> (currentLastBytePos - lineStart) % 1
5162:AOR:+(int,int):*(int,int):org.apache.commons.io.input.ReversedLinesFileReader$FilePart@readLine:273:currentLastBytePos - lineStart + 1 |==> (currentLastBytePos - lineStart) * 1
5163:AOR:+(int,int):-(int,int):org.apache.commons.io.input.ReversedLinesFileReader$FilePart@readLine:273:currentLastBytePos - lineStart + 1 |==> currentLastBytePos - lineStart - 1
5164:AOR:+(int,int):/(int,int):org.apache.commons.io.input.ReversedLinesFileReader$FilePart@readLine:273:currentLastBytePos - lineStart + 1 |==> (currentLastBytePos - lineStart) / 1
5165:LVR:0:POS:org.apache.commons.io.input.ReversedLinesFileReader$FilePart@readLine:275:0 |==> 1
5166:LVR:0:NEG:org.apache.commons.io.input.ReversedLinesFileReader$FilePart@readLine:275:0 |==> -1
5167:ROR:<(int,int):!=(int,int):org.apache.commons.io.input.ReversedLinesFileReader$FilePart@readLine:275:lineLengthBytes < 0 |==> lineLengthBytes != 0
5168:ROR:<(int,int):<=(int,int):org.apache.commons.io.input.ReversedLinesFileReader$FilePart@readLine:275:lineLengthBytes < 0 |==> lineLengthBytes <= 0
5169:ROR:<(int,int):FALSE(int,int):org.apache.commons.io.input.ReversedLinesFileReader$FilePart@readLine:275:lineLengthBytes < 0 |==> false
5170:LVR:0:POS:org.apache.commons.io.input.ReversedLinesFileReader$FilePart@readLine:279:0 |==> 1
5171:LVR:0:NEG:org.apache.commons.io.input.ReversedLinesFileReader$FilePart@readLine:279:0 |==> -1
5172:STD:<CALL>:<NO-OP>:org.apache.commons.io.input.ReversedLinesFileReader$FilePart@readLine:279:System.arraycopy(data, lineStart, lineData, 0, lineLengthBytes) |==> <NO-OP>
5173:AOR:-(int,int):%(int,int):org.apache.commons.io.input.ReversedLinesFileReader$FilePart@readLine:283:i - newLineMatchByteCount |==> i % newLineMatchByteCount
5174:AOR:-(int,int):*(int,int):org.apache.commons.io.input.ReversedLinesFileReader$FilePart@readLine:283:i - newLineMatchByteCount |==> i * newLineMatchByteCount
5175:AOR:-(int,int):+(int,int):org.apache.commons.io.input.ReversedLinesFileReader$FilePart@readLine:283:i - newLineMatchByteCount |==> i + newLineMatchByteCount
5176:AOR:-(int,int):/(int,int):org.apache.commons.io.input.ReversedLinesFileReader$FilePart@readLine:283:i - newLineMatchByteCount |==> i / newLineMatchByteCount
5177:LVR:0:POS:org.apache.commons.io.input.ReversedLinesFileReader$FilePart@readLine:271:0 |==> 1
5178:LVR:0:NEG:org.apache.commons.io.input.ReversedLinesFileReader$FilePart@readLine:271:0 |==> -1
5179:ROR:>(int,int):!=(int,int):org.apache.commons.io.input.ReversedLinesFileReader$FilePart@readLine:271:(newLineMatchByteCount = getNewLineMatchByteCount(data, i)) > 0 |==> (newLineMatchByteCount = getNewLineMatchByteCount(data, i)) != 0
5180:ROR:>(int,int):>=(int,int):org.apache.commons.io.input.ReversedLinesFileReader$FilePart@readLine:271:(newLineMatchByteCount = getNewLineMatchByteCount(data, i)) > 0 |==> (newLineMatchByteCount = getNewLineMatchByteCount(data, i)) >= 0
5181:STD:<ASSIGN>:<NO-OP>:org.apache.commons.io.input.ReversedLinesFileReader$FilePart@readLine:288:i -= byteDecrement |==> <NO-OP>
5182:STD:<CALL>:<NO-OP>:org.apache.commons.io.input.ReversedLinesFileReader$FilePart@readLine:292:createLeftOver() |==> <NO-OP>
5183:LVR:0:POS:org.apache.commons.io.input.ReversedLinesFileReader$FilePart@readLine:291:0 |==> 1
5184:LVR:0:NEG:org.apache.commons.io.input.ReversedLinesFileReader$FilePart@readLine:291:0 |==> -1
5185:ROR:<(int,int):!=(int,int):org.apache.commons.io.input.ReversedLinesFileReader$FilePart@readLine:291:i < 0 |==> i != 0
5186:ROR:<(int,int):<=(int,int):org.apache.commons.io.input.ReversedLinesFileReader$FilePart@readLine:291:i < 0 |==> i <= 0
5187:ROR:<(int,int):FALSE(int,int):org.apache.commons.io.input.ReversedLinesFileReader$FilePart@readLine:291:i < 0 |==> false
5188:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.apache.commons.io.input.ReversedLinesFileReader$FilePart@readLine:298:leftOver != null |==> true
5189:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.io.input.ReversedLinesFileReader$FilePart@readLine:298:isLastFilePart && leftOver != null |==> isLastFilePart == (leftOver != null)
5190:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.io.input.ReversedLinesFileReader$FilePart@readLine:298:isLastFilePart && leftOver != null |==> false
5191:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.io.input.ReversedLinesFileReader$FilePart@readLine:298:isLastFilePart && leftOver != null |==> isLastFilePart
5192:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.io.input.ReversedLinesFileReader$FilePart@readLine:298:isLastFilePart && leftOver != null |==> leftOver != null
5193:LVR:POS:0:org.apache.commons.io.input.ReversedLinesFileReader$FilePart@createLeftOver:311:1 |==> 0
5194:LVR:POS:NEG:org.apache.commons.io.input.ReversedLinesFileReader$FilePart@createLeftOver:311:1 |==> -1
5195:AOR:+(int,int):%(int,int):org.apache.commons.io.input.ReversedLinesFileReader$FilePart@createLeftOver:311:currentLastBytePos + 1 |==> currentLastBytePos % 1
5196:AOR:+(int,int):*(int,int):org.apache.commons.io.input.ReversedLinesFileReader$FilePart@createLeftOver:311:currentLastBytePos + 1 |==> currentLastBytePos * 1
5197:AOR:+(int,int):-(int,int):org.apache.commons.io.input.ReversedLinesFileReader$FilePart@createLeftOver:311:currentLastBytePos + 1 |==> currentLastBytePos - 1
5198:AOR:+(int,int):/(int,int):org.apache.commons.io.input.ReversedLinesFileReader$FilePart@createLeftOver:311:currentLastBytePos + 1 |==> currentLastBytePos / 1
5199:LVR:0:POS:org.apache.commons.io.input.ReversedLinesFileReader$FilePart@createLeftOver:315:0 |==> 1
5200:LVR:0:NEG:org.apache.commons.io.input.ReversedLinesFileReader$FilePart@createLeftOver:315:0 |==> -1
5201:LVR:0:POS:org.apache.commons.io.input.ReversedLinesFileReader$FilePart@createLeftOver:315:0 |==> 1
5202:LVR:0:NEG:org.apache.commons.io.input.ReversedLinesFileReader$FilePart@createLeftOver:315:0 |==> -1
5203:STD:<CALL>:<NO-OP>:org.apache.commons.io.input.ReversedLinesFileReader$FilePart@createLeftOver:315:System.arraycopy(data, 0, leftOver, 0, lineLengthBytes) |==> <NO-OP>
5204:LVR:0:POS:org.apache.commons.io.input.ReversedLinesFileReader$FilePart@createLeftOver:312:0 |==> 1
5205:LVR:0:NEG:org.apache.commons.io.input.ReversedLinesFileReader$FilePart@createLeftOver:312:0 |==> -1
5206:ROR:>(int,int):!=(int,int):org.apache.commons.io.input.ReversedLinesFileReader$FilePart@createLeftOver:312:lineLengthBytes > 0 |==> lineLengthBytes != 0
5207:ROR:>(int,int):>=(int,int):org.apache.commons.io.input.ReversedLinesFileReader$FilePart@createLeftOver:312:lineLengthBytes > 0 |==> lineLengthBytes >= 0
5208:ROR:>(int,int):FALSE(int,int):org.apache.commons.io.input.ReversedLinesFileReader$FilePart@createLeftOver:312:lineLengthBytes > 0 |==> false
5209:LVR:NEG:0:org.apache.commons.io.input.ReversedLinesFileReader$FilePart@createLeftOver:319:-1 |==> 0
5210:LVR:NEG:POS:org.apache.commons.io.input.ReversedLinesFileReader$FilePart@createLeftOver:319:-1 |==> 1
5211:LVR:TRUE:FALSE:org.apache.commons.io.input.ReversedLinesFileReader$FilePart@getNewLineMatchByteCount:331:true |==> false
5212:LVR:POS:0:org.apache.commons.io.input.ReversedLinesFileReader$FilePart@getNewLineMatchByteCount:332:1 |==> 0
5213:LVR:POS:NEG:org.apache.commons.io.input.ReversedLinesFileReader$FilePart@getNewLineMatchByteCount:332:1 |==> -1
5214:AOR:-(int,int):%(int,int):org.apache.commons.io.input.ReversedLinesFileReader$FilePart@getNewLineMatchByteCount:332:newLineSequence.length - 1 |==> newLineSequence.length % 1
5215:AOR:-(int,int):*(int,int):org.apache.commons.io.input.ReversedLinesFileReader$FilePart@getNewLineMatchByteCount:332:newLineSequence.length - 1 |==> newLineSequence.length * 1
5216:AOR:-(int,int):+(int,int):org.apache.commons.io.input.ReversedLinesFileReader$FilePart@getNewLineMatchByteCount:332:newLineSequence.length - 1 |==> newLineSequence.length + 1
5217:AOR:-(int,int):/(int,int):org.apache.commons.io.input.ReversedLinesFileReader$FilePart@getNewLineMatchByteCount:332:newLineSequence.length - 1 |==> newLineSequence.length / 1
5218:LVR:0:POS:org.apache.commons.io.input.ReversedLinesFileReader$FilePart@getNewLineMatchByteCount:332:0 |==> 1
5219:LVR:0:NEG:org.apache.commons.io.input.ReversedLinesFileReader$FilePart@getNewLineMatchByteCount:332:0 |==> -1
5220:ROR:>=(int,int):==(int,int):org.apache.commons.io.input.ReversedLinesFileReader$FilePart@getNewLineMatchByteCount:332:j >= 0 |==> j == 0
5221:ROR:>=(int,int):>(int,int):org.apache.commons.io.input.ReversedLinesFileReader$FilePart@getNewLineMatchByteCount:332:j >= 0 |==> j > 0
5222:ROR:>=(int,int):TRUE(int,int):org.apache.commons.io.input.ReversedLinesFileReader$FilePart@getNewLineMatchByteCount:332:j >= 0 |==> true
5223:AOR:+(int,int):%(int,int):org.apache.commons.io.input.ReversedLinesFileReader$FilePart@getNewLineMatchByteCount:333:i + j |==> i % j
5224:AOR:+(int,int):*(int,int):org.apache.commons.io.input.ReversedLinesFileReader$FilePart@getNewLineMatchByteCount:333:i + j |==> i * j
5225:AOR:+(int,int):-(int,int):org.apache.commons.io.input.ReversedLinesFileReader$FilePart@getNewLineMatchByteCount:333:i + j |==> i - j
5226:AOR:+(int,int):/(int,int):org.apache.commons.io.input.ReversedLinesFileReader$FilePart@getNewLineMatchByteCount:333:i + j |==> i / j
5227:LVR:POS:0:org.apache.commons.io.input.ReversedLinesFileReader$FilePart@getNewLineMatchByteCount:333:1 |==> 0
5228:LVR:POS:NEG:org.apache.commons.io.input.ReversedLinesFileReader$FilePart@getNewLineMatchByteCount:333:1 |==> -1
5229:AOR:-(int,int):%(int,int):org.apache.commons.io.input.ReversedLinesFileReader$FilePart@getNewLineMatchByteCount:333:newLineSequence.length - 1 |==> newLineSequence.length % 1
5230:AOR:-(int,int):*(int,int):org.apache.commons.io.input.ReversedLinesFileReader$FilePart@getNewLineMatchByteCount:333:newLineSequence.length - 1 |==> newLineSequence.length * 1
5231:AOR:-(int,int):+(int,int):org.apache.commons.io.input.ReversedLinesFileReader$FilePart@getNewLineMatchByteCount:333:newLineSequence.length - 1 |==> newLineSequence.length + 1
5232:AOR:-(int,int):/(int,int):org.apache.commons.io.input.ReversedLinesFileReader$FilePart@getNewLineMatchByteCount:333:newLineSequence.length - 1 |==> newLineSequence.length / 1
5233:AOR:-(int,int):%(int,int):org.apache.commons.io.input.ReversedLinesFileReader$FilePart@getNewLineMatchByteCount:333:i + j - (newLineSequence.length - 1) |==> (i + j) % (newLineSequence.length - 1)
5234:AOR:-(int,int):*(int,int):org.apache.commons.io.input.ReversedLinesFileReader$FilePart@getNewLineMatchByteCount:333:i + j - (newLineSequence.length - 1) |==> (i + j) * (newLineSequence.length - 1)
5235:AOR:-(int,int):+(int,int):org.apache.commons.io.input.ReversedLinesFileReader$FilePart@getNewLineMatchByteCount:333:i + j - (newLineSequence.length - 1) |==> i + j + (newLineSequence.length - 1)
5236:AOR:-(int,int):/(int,int):org.apache.commons.io.input.ReversedLinesFileReader$FilePart@getNewLineMatchByteCount:333:i + j - (newLineSequence.length - 1) |==> (i + j) / (newLineSequence.length - 1)
5237:LVR:0:POS:org.apache.commons.io.input.ReversedLinesFileReader$FilePart@getNewLineMatchByteCount:334:0 |==> 1
5238:LVR:0:NEG:org.apache.commons.io.input.ReversedLinesFileReader$FilePart@getNewLineMatchByteCount:334:0 |==> -1
5239:ROR:>=(int,int):==(int,int):org.apache.commons.io.input.ReversedLinesFileReader$FilePart@getNewLineMatchByteCount:334:k >= 0 |==> k == 0
5240:ROR:>=(int,int):>(int,int):org.apache.commons.io.input.ReversedLinesFileReader$FilePart@getNewLineMatchByteCount:334:k >= 0 |==> k > 0
5241:ROR:>=(int,int):TRUE(int,int):org.apache.commons.io.input.ReversedLinesFileReader$FilePart@getNewLineMatchByteCount:334:k >= 0 |==> true
5242:ROR:==(int,int):<=(int,int):org.apache.commons.io.input.ReversedLinesFileReader$FilePart@getNewLineMatchByteCount:334:data[k] == newLineSequence[j] |==> data[k] <= newLineSequence[j]
5243:ROR:==(int,int):>=(int,int):org.apache.commons.io.input.ReversedLinesFileReader$FilePart@getNewLineMatchByteCount:334:data[k] == newLineSequence[j] |==> data[k] >= newLineSequence[j]
5244:ROR:==(int,int):FALSE(int,int):org.apache.commons.io.input.ReversedLinesFileReader$FilePart@getNewLineMatchByteCount:334:data[k] == newLineSequence[j] |==> false
5245:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.io.input.ReversedLinesFileReader$FilePart@getNewLineMatchByteCount:334:k >= 0 && data[k] == newLineSequence[j] |==> k >= 0 == (data[k] == newLineSequence[j])
5246:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.io.input.ReversedLinesFileReader$FilePart@getNewLineMatchByteCount:334:k >= 0 && data[k] == newLineSequence[j] |==> false
5247:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.io.input.ReversedLinesFileReader$FilePart@getNewLineMatchByteCount:334:k >= 0 && data[k] == newLineSequence[j] |==> k >= 0
5248:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.io.input.ReversedLinesFileReader$FilePart@getNewLineMatchByteCount:334:k >= 0 && data[k] == newLineSequence[j] |==> data[k] == newLineSequence[j]
5249:STD:<ASSIGN>:<NO-OP>:org.apache.commons.io.input.ReversedLinesFileReader$FilePart@getNewLineMatchByteCount:334:match &= k >= 0 && data[k] == newLineSequence[j] |==> <NO-OP>
5250:COR:match:TRUE:org.apache.commons.io.input.ReversedLinesFileReader$FilePart@getNewLineMatchByteCount:336:match |==> false
5251:COR:match:FALSE:org.apache.commons.io.input.ReversedLinesFileReader$FilePart@getNewLineMatchByteCount:336:match |==> true
5252:LVR:0:POS:org.apache.commons.io.input.ReversedLinesFileReader$FilePart@getNewLineMatchByteCount:340:0 |==> 1
5253:LVR:0:NEG:org.apache.commons.io.input.ReversedLinesFileReader$FilePart@getNewLineMatchByteCount:340:0 |==> -1
5254:LVR:0:POS:org.apache.commons.io.input.SwappedDataInputStream@readBoolean:58:0 |==> 1
5255:LVR:0:NEG:org.apache.commons.io.input.SwappedDataInputStream@readBoolean:58:0 |==> -1
5256:ROR:!=(int,int):<(int,int):org.apache.commons.io.input.SwappedDataInputStream@readBoolean:58:0 != readByte() |==> 0 < readByte()
5257:ROR:!=(int,int):>(int,int):org.apache.commons.io.input.SwappedDataInputStream@readBoolean:58:0 != readByte() |==> 0 > readByte()
5258:ROR:!=(int,int):TRUE(int,int):org.apache.commons.io.input.SwappedDataInputStream@readBoolean:58:0 != readByte() |==> true
5259:LVR:0:POS:org.apache.commons.io.input.SwappedDataInputStream@readFully:119:0 |==> 1
5260:LVR:0:NEG:org.apache.commons.io.input.SwappedDataInputStream@readFully:119:0 |==> -1
5261:STD:<CALL>:<NO-OP>:org.apache.commons.io.input.SwappedDataInputStream@readFully:119:readFully(data, 0, data.length) |==> <NO-OP>
5262:LVR:0:POS:org.apache.commons.io.input.SwappedDataInputStream@readFully:137:0 |==> 1
5263:LVR:0:NEG:org.apache.commons.io.input.SwappedDataInputStream@readFully:137:0 |==> -1
5264:ROR:>(int,int):!=(int,int):org.apache.commons.io.input.SwappedDataInputStream@readFully:137:remaining > 0 |==> remaining != 0
5265:ROR:>(int,int):>=(int,int):org.apache.commons.io.input.SwappedDataInputStream@readFully:137:remaining > 0 |==> remaining >= 0
5266:ROR:>(int,int):FALSE(int,int):org.apache.commons.io.input.SwappedDataInputStream@readFully:137:remaining > 0 |==> false
5267:AOR:+(int,int):%(int,int):org.apache.commons.io.input.SwappedDataInputStream@readFully:139:offset + length |==> offset % length
5268:AOR:+(int,int):*(int,int):org.apache.commons.io.input.SwappedDataInputStream@readFully:139:offset + length |==> offset * length
5269:AOR:+(int,int):-(int,int):org.apache.commons.io.input.SwappedDataInputStream@readFully:139:offset + length |==> offset - length
5270:AOR:+(int,int):/(int,int):org.apache.commons.io.input.SwappedDataInputStream@readFully:139:offset + length |==> offset / length
5271:AOR:-(int,int):%(int,int):org.apache.commons.io.input.SwappedDataInputStream@readFully:139:offset + length - remaining |==> (offset + length) % remaining
5272:AOR:-(int,int):*(int,int):org.apache.commons.io.input.SwappedDataInputStream@readFully:139:offset + length - remaining |==> (offset + length) * remaining
5273:AOR:-(int,int):+(int,int):org.apache.commons.io.input.SwappedDataInputStream@readFully:139:offset + length - remaining |==> offset + length + remaining
5274:AOR:-(int,int):/(int,int):org.apache.commons.io.input.SwappedDataInputStream@readFully:139:offset + length - remaining |==> (offset + length) / remaining
5275:LVR:NEG:0:org.apache.commons.io.input.SwappedDataInputStream@readFully:142:-1 |==> 0
5276:LVR:NEG:POS:org.apache.commons.io.input.SwappedDataInputStream@readFully:142:-1 |==> 1
5277:ROR:==(int,int):<=(int,int):org.apache.commons.io.input.SwappedDataInputStream@readFully:142:-1 == count |==> -1 <= count
5278:ROR:==(int,int):>=(int,int):org.apache.commons.io.input.SwappedDataInputStream@readFully:142:-1 == count |==> -1 >= count
5279:ROR:==(int,int):FALSE(int,int):org.apache.commons.io.input.SwappedDataInputStream@readFully:142:-1 == count |==> false
5280:STD:<ASSIGN>:<NO-OP>:org.apache.commons.io.input.SwappedDataInputStream@readFully:147:remaining -= count |==> <NO-OP>
5281:STD:<CALL>:<NO-OP>:org.apache.commons.io.input.TaggedInputStream@throwIfCauseOf:102:TaggedIOException.throwCauseIfTaggedWith(throwable, tag) |==> <NO-OP>
5282:LVR:TRUE:FALSE:org.apache.commons.io.input.Tailer:148:true |==> false
5283:LVR:FALSE:TRUE:org.apache.commons.io.input.Tailer@<init>:166:false |==> true
5284:LVR:FALSE:TRUE:org.apache.commons.io.input.Tailer@<init>:201:false |==> true
5285:STD:<CALL>:<NO-OP>:org.apache.commons.io.input.Tailer@<init>:222:listener.init(this) |==> <NO-OP>
5286:LVR:TRUE:FALSE:org.apache.commons.io.input.Tailer@create:239:true |==> false
5287:STD:<CALL>:<NO-OP>:org.apache.commons.io.input.Tailer@create:239:thread.setDaemon(true) |==> <NO-OP>
5288:STD:<CALL>:<NO-OP>:org.apache.commons.io.input.Tailer@create:240:thread.start() |==> <NO-OP>
5289:LVR:TRUE:FALSE:org.apache.commons.io.input.Tailer@create:259:true |==> false
5290:STD:<CALL>:<NO-OP>:org.apache.commons.io.input.Tailer@create:259:thread.setDaemon(true) |==> <NO-OP>
5291:STD:<CALL>:<NO-OP>:org.apache.commons.io.input.Tailer@create:260:thread.start() |==> <NO-OP>
5292:LVR:FALSE:TRUE:org.apache.commons.io.input.Tailer@create:300:false |==> true
5293:LVR:FALSE:TRUE:org.apache.commons.io.input.Tailer@create:312:false |==> true
5294:LVR:0:POS:org.apache.commons.io.input.Tailer@run:339:0 |==> 1
5295:LVR:0:NEG:org.apache.commons.io.input.Tailer@run:339:0 |==> -1
5296:LVR:0:POS:org.apache.commons.io.input.Tailer@run:340:0 |==> 1
5297:LVR:0:NEG:org.apache.commons.io.input.Tailer@run:340:0 |==> -1
5298:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.io.input.Tailer@run:342:reader == null |==> false
5299:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.io.input.Tailer@run:342:run && reader == null |==> run == (reader == null)
5300:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.io.input.Tailer@run:342:run && reader == null |==> false
5301:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.io.input.Tailer@run:342:run && reader == null |==> run
5302:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.io.input.Tailer@run:342:run && reader == null |==> reader == null
5303:STD:<CALL>:<NO-OP>:org.apache.commons.io.input.Tailer@run:346:listener.fileNotFound() |==> <NO-OP>
5304:STD:<CALL>:<NO-OP>:org.apache.commons.io.input.Tailer@run:351:Thread.sleep(delayMillis) |==> <NO-OP>
5305:LVR:0:POS:org.apache.commons.io.input.Tailer@run:356:0 |==> 1
5306:LVR:0:NEG:org.apache.commons.io.input.Tailer@run:356:0 |==> -1
5307:STD:<CALL>:<NO-OP>:org.apache.commons.io.input.Tailer@run:358:reader.seek(position) |==> <NO-OP>
5308:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.io.input.Tailer@run:349:reader == null |==> false
5309:STD:<CALL>:<NO-OP>:org.apache.commons.io.input.Tailer@run:372:listener.fileRotated() |==> <NO-OP>
5310:LVR:0:POS:org.apache.commons.io.input.Tailer@run:379:0 |==> 1
5311:LVR:0:NEG:org.apache.commons.io.input.Tailer@run:379:0 |==> -1
5312:STD:<CALL>:<NO-OP>:org.apache.commons.io.input.Tailer@run:381:IOUtils.closeQuietly(save) |==> <NO-OP>
5313:STD:<CALL>:<NO-OP>:org.apache.commons.io.input.Tailer@run:384:listener.fileNotFound() |==> <NO-OP>
5314:LVR:0:POS:org.apache.commons.io.input.Tailer@run:404:0 |==> 1
5315:LVR:0:NEG:org.apache.commons.io.input.Tailer@run:404:0 |==> -1
5316:STD:<CALL>:<NO-OP>:org.apache.commons.io.input.Tailer@run:405:reader.seek(position) |==> <NO-OP>
5317:COR:newer:TRUE:org.apache.commons.io.input.Tailer@run:398:newer |==> false
5318:COR:newer:FALSE:org.apache.commons.io.input.Tailer@run:398:newer |==> true
5319:ROR:>(long,long):!=(long,long):org.apache.commons.io.input.Tailer@run:392:length > position |==> length != position
5320:ROR:>(long,long):>=(long,long):org.apache.commons.io.input.Tailer@run:392:length > position |==> length >= position
5321:ROR:>(long,long):FALSE(long,long):org.apache.commons.io.input.Tailer@run:392:length > position |==> false
5322:ROR:<(long,long):!=(long,long):org.apache.commons.io.input.Tailer@run:369:length < position |==> length != position
5323:ROR:<(long,long):<=(long,long):org.apache.commons.io.input.Tailer@run:369:length < position |==> length <= position
5324:ROR:<(long,long):FALSE(long,long):org.apache.commons.io.input.Tailer@run:369:length < position |==> false
5325:STD:<CALL>:<NO-OP>:org.apache.commons.io.input.Tailer@run:413:IOUtils.closeQuietly(reader) |==> <NO-OP>
5326:COR:reOpen:TRUE:org.apache.commons.io.input.Tailer@run:412:reOpen |==> false
5327:COR:reOpen:FALSE:org.apache.commons.io.input.Tailer@run:412:reOpen |==> true
5328:STD:<CALL>:<NO-OP>:org.apache.commons.io.input.Tailer@run:416:Thread.sleep(delayMillis) |==> <NO-OP>
5329:STD:<CALL>:<NO-OP>:org.apache.commons.io.input.Tailer@run:421:reader.seek(position) |==> <NO-OP>
5330:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.io.input.Tailer@run:419:run && reOpen |==> run == reOpen
5331:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.io.input.Tailer@run:419:run && reOpen |==> false
5332:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.io.input.Tailer@run:419:run && reOpen |==> run
5333:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.io.input.Tailer@run:419:run && reOpen |==> reOpen
5334:STD:<CALL>:<NO-OP>:org.apache.commons.io.input.Tailer@run:427:listener.handle(e) |==> <NO-OP>
5335:STD:<CALL>:<NO-OP>:org.apache.commons.io.input.Tailer@run:430:IOUtils.closeQuietly(reader) |==> <NO-OP>
5336:LVR:FALSE:TRUE:org.apache.commons.io.input.Tailer@stop:438:false |==> true
5337:LVR:FALSE:TRUE:org.apache.commons.io.input.Tailer@readLines:455:false |==> true
5338:LVR:NEG:0:org.apache.commons.io.input.Tailer@readLines:456:-1 |==> 0
5339:LVR:NEG:POS:org.apache.commons.io.input.Tailer@readLines:456:-1 |==> 1
5340:ROR:!=(int,int):<(int,int):org.apache.commons.io.input.Tailer@readLines:456:(num = reader.read(inbuf)) != -1 |==> (num = reader.read(inbuf)) < -1
5341:ROR:!=(int,int):>(int,int):org.apache.commons.io.input.Tailer@readLines:456:(num = reader.read(inbuf)) != -1 |==> (num = reader.read(inbuf)) > -1
5342:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.io.input.Tailer@readLines:456:run && ((num = reader.read(inbuf)) != -1) |==> run == ((num = reader.read(inbuf)) != -1)
5343:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.io.input.Tailer@readLines:456:run && ((num = reader.read(inbuf)) != -1) |==> ((num = reader.read(inbuf)) != -1)
5344:LVR:0:POS:org.apache.commons.io.input.Tailer@readLines:457:0 |==> 1
5345:LVR:0:NEG:org.apache.commons.io.input.Tailer@readLines:457:0 |==> -1
5346:ROR:<(int,int):!=(int,int):org.apache.commons.io.input.Tailer@readLines:457:i < num |==> i != num
5347:ROR:<(int,int):<=(int,int):org.apache.commons.io.input.Tailer@readLines:457:i < num |==> i <= num
5348:ROR:<(int,int):FALSE(int,int):org.apache.commons.io.input.Tailer@readLines:457:i < num |==> false
5349:LVR:FALSE:TRUE:org.apache.commons.io.input.Tailer@readLines:461:false |==> true
5350:STD:<CALL>:<NO-OP>:org.apache.commons.io.input.Tailer@readLines:462:listener.handle(sb.toString()) |==> <NO-OP>
5351:LVR:0:POS:org.apache.commons.io.input.Tailer@readLines:463:0 |==> 1
5352:LVR:0:NEG:org.apache.commons.io.input.Tailer@readLines:463:0 |==> -1
5353:STD:<CALL>:<NO-OP>:org.apache.commons.io.input.Tailer@readLines:463:sb.setLength(0) |==> <NO-OP>
5354:AOR:+(long,long):%(long,long):org.apache.commons.io.input.Tailer@readLines:464:pos + i |==> pos % i
5355:AOR:+(long,long):*(long,long):org.apache.commons.io.input.Tailer@readLines:464:pos + i |==> pos * i
5356:AOR:+(long,long):-(long,long):org.apache.commons.io.input.Tailer@readLines:464:pos + i |==> pos - i
5357:AOR:+(long,long):/(long,long):org.apache.commons.io.input.Tailer@readLines:464:pos + i |==> pos / i
5358:LVR:POS:0:org.apache.commons.io.input.Tailer@readLines:464:1 |==> 0
5359:LVR:POS:NEG:org.apache.commons.io.input.Tailer@readLines:464:1 |==> -1
5360:AOR:+(long,long):%(long,long):org.apache.commons.io.input.Tailer@readLines:464:pos + i + 1 |==> (pos + i) % 1
5361:AOR:+(long,long):*(long,long):org.apache.commons.io.input.Tailer@readLines:464:pos + i + 1 |==> (pos + i) * 1
5362:AOR:+(long,long):-(long,long):org.apache.commons.io.input.Tailer@readLines:464:pos + i + 1 |==> pos + i - 1
5363:AOR:+(long,long):/(long,long):org.apache.commons.io.input.Tailer@readLines:464:pos + i + 1 |==> (pos + i) / 1
5364:STD:<CALL>:<NO-OP>:org.apache.commons.io.input.Tailer@readLines:468:sb.append('\r') |==> <NO-OP>
5365:COR:seenCR:TRUE:org.apache.commons.io.input.Tailer@readLines:467:seenCR |==> false
5366:COR:seenCR:FALSE:org.apache.commons.io.input.Tailer@readLines:467:seenCR |==> true
5367:LVR:TRUE:FALSE:org.apache.commons.io.input.Tailer@readLines:470:true |==> false
5368:LVR:FALSE:TRUE:org.apache.commons.io.input.Tailer@readLines:474:false |==> true
5369:STD:<CALL>:<NO-OP>:org.apache.commons.io.input.Tailer@readLines:475:listener.handle(sb.toString()) |==> <NO-OP>
5370:LVR:0:POS:org.apache.commons.io.input.Tailer@readLines:476:0 |==> 1
5371:LVR:0:NEG:org.apache.commons.io.input.Tailer@readLines:476:0 |==> -1
5372:STD:<CALL>:<NO-OP>:org.apache.commons.io.input.Tailer@readLines:476:sb.setLength(0) |==> <NO-OP>
5373:AOR:+(long,long):%(long,long):org.apache.commons.io.input.Tailer@readLines:477:pos + i |==> pos % i
5374:AOR:+(long,long):*(long,long):org.apache.commons.io.input.Tailer@readLines:477:pos + i |==> pos * i
5375:AOR:+(long,long):-(long,long):org.apache.commons.io.input.Tailer@readLines:477:pos + i |==> pos - i
5376:AOR:+(long,long):/(long,long):org.apache.commons.io.input.Tailer@readLines:477:pos + i |==> pos / i
5377:LVR:POS:0:org.apache.commons.io.input.Tailer@readLines:477:1 |==> 0
5378:LVR:POS:NEG:org.apache.commons.io.input.Tailer@readLines:477:1 |==> -1
5379:AOR:+(long,long):%(long,long):org.apache.commons.io.input.Tailer@readLines:477:pos + i + 1 |==> (pos + i) % 1
5380:AOR:+(long,long):*(long,long):org.apache.commons.io.input.Tailer@readLines:477:pos + i + 1 |==> (pos + i) * 1
5381:AOR:+(long,long):-(long,long):org.apache.commons.io.input.Tailer@readLines:477:pos + i + 1 |==> pos + i - 1
5382:AOR:+(long,long):/(long,long):org.apache.commons.io.input.Tailer@readLines:477:pos + i + 1 |==> (pos + i) / 1
5383:COR:seenCR:TRUE:org.apache.commons.io.input.Tailer@readLines:473:seenCR |==> false
5384:COR:seenCR:FALSE:org.apache.commons.io.input.Tailer@readLines:473:seenCR |==> true
5385:STD:<CALL>:<NO-OP>:org.apache.commons.io.input.Tailer@readLines:479:sb.append((char)ch) |==> <NO-OP>
5386:STD:<CALL>:<NO-OP>:org.apache.commons.io.input.Tailer@readLines:486:reader.seek(rePos) |==> <NO-OP>
5387:LVR:FALSE:TRUE:org.apache.commons.io.input.TeeInputStream@<init>:60:false |==> true
5388:STD:<CALL>:<NO-OP>:org.apache.commons.io.input.TeeInputStream@close:91:super.close() |==> <NO-OP>
5389:STD:<CALL>:<NO-OP>:org.apache.commons.io.input.TeeInputStream@close:94:branch.close() |==> <NO-OP>
5390:COR:closeBranch:TRUE:org.apache.commons.io.input.TeeInputStream@close:93:closeBranch |==> false
5391:COR:closeBranch:FALSE:org.apache.commons.io.input.TeeInputStream@close:93:closeBranch |==> true
5392:STD:<CALL>:<NO-OP>:org.apache.commons.io.input.TeeInputStream@read:110:branch.write(ch) |==> <NO-OP>
5393:LVR:NEG:0:org.apache.commons.io.input.TeeInputStream@read:109:-1 |==> 0
5394:LVR:NEG:POS:org.apache.commons.io.input.TeeInputStream@read:109:-1 |==> 1
5395:ROR:!=(int,int):<(int,int):org.apache.commons.io.input.TeeInputStream@read:109:ch != -1 |==> ch < -1
5396:ROR:!=(int,int):>(int,int):org.apache.commons.io.input.TeeInputStream@read:109:ch != -1 |==> ch > -1
5397:ROR:!=(int,int):TRUE(int,int):org.apache.commons.io.input.TeeInputStream@read:109:ch != -1 |==> true
5398:STD:<CALL>:<NO-OP>:org.apache.commons.io.input.TeeInputStream@read:129:branch.write(bts, st, n) |==> <NO-OP>
5399:LVR:NEG:0:org.apache.commons.io.input.TeeInputStream@read:128:-1 |==> 0
5400:LVR:NEG:POS:org.apache.commons.io.input.TeeInputStream@read:128:-1 |==> 1
5401:ROR:!=(int,int):<(int,int):org.apache.commons.io.input.TeeInputStream@read:128:n != -1 |==> n < -1
5402:ROR:!=(int,int):>(int,int):org.apache.commons.io.input.TeeInputStream@read:128:n != -1 |==> n > -1
5403:ROR:!=(int,int):TRUE(int,int):org.apache.commons.io.input.TeeInputStream@read:128:n != -1 |==> true
5404:LVR:0:POS:org.apache.commons.io.input.TeeInputStream@read:146:0 |==> 1
5405:LVR:0:NEG:org.apache.commons.io.input.TeeInputStream@read:146:0 |==> -1
5406:STD:<CALL>:<NO-OP>:org.apache.commons.io.input.TeeInputStream@read:146:branch.write(bts, 0, n) |==> <NO-OP>
5407:LVR:NEG:0:org.apache.commons.io.input.TeeInputStream@read:145:-1 |==> 0
5408:LVR:NEG:POS:org.apache.commons.io.input.TeeInputStream@read:145:-1 |==> 1
5409:ROR:!=(int,int):<(int,int):org.apache.commons.io.input.TeeInputStream@read:145:n != -1 |==> n < -1
5410:ROR:!=(int,int):>(int,int):org.apache.commons.io.input.TeeInputStream@read:145:n != -1 |==> n > -1
5411:ROR:!=(int,int):TRUE(int,int):org.apache.commons.io.input.TeeInputStream@read:145:n != -1 |==> true
5412:LVR:POS:0:org.apache.commons.io.input.XmlStreamReader:97:60 |==> 0
5413:LVR:POS:NEG:org.apache.commons.io.input.XmlStreamReader:97:60 |==> -60
5414:LVR:POS:0:org.apache.commons.io.input.XmlStreamReader:97:63 |==> 0
5415:LVR:POS:NEG:org.apache.commons.io.input.XmlStreamReader:97:63 |==> -63
5416:LVR:POS:0:org.apache.commons.io.input.XmlStreamReader:97:120 |==> 0
5417:LVR:POS:NEG:org.apache.commons.io.input.XmlStreamReader:97:120 |==> -120
5418:LVR:POS:0:org.apache.commons.io.input.XmlStreamReader:97:109 |==> 0
5419:LVR:POS:NEG:org.apache.commons.io.input.XmlStreamReader:97:109 |==> -109
5420:LVR:0:POS:org.apache.commons.io.input.XmlStreamReader:98:0 |==> 1
5421:LVR:0:NEG:org.apache.commons.io.input.XmlStreamReader:98:0 |==> -1
5422:LVR:POS:0:org.apache.commons.io.input.XmlStreamReader:98:60 |==> 0
5423:LVR:POS:NEG:org.apache.commons.io.input.XmlStreamReader:98:60 |==> -60
5424:LVR:0:POS:org.apache.commons.io.input.XmlStreamReader:98:0 |==> 1
5425:LVR:0:NEG:org.apache.commons.io.input.XmlStreamReader:98:0 |==> -1
5426:LVR:POS:0:org.apache.commons.io.input.XmlStreamReader:98:63 |==> 0
5427:LVR:POS:NEG:org.apache.commons.io.input.XmlStreamReader:98:63 |==> -63
5428:LVR:POS:0:org.apache.commons.io.input.XmlStreamReader:99:60 |==> 0
5429:LVR:POS:NEG:org.apache.commons.io.input.XmlStreamReader:99:60 |==> -60
5430:LVR:0:POS:org.apache.commons.io.input.XmlStreamReader:99:0 |==> 1
5431:LVR:0:NEG:org.apache.commons.io.input.XmlStreamReader:99:0 |==> -1
5432:LVR:POS:0:org.apache.commons.io.input.XmlStreamReader:99:63 |==> 0
5433:LVR:POS:NEG:org.apache.commons.io.input.XmlStreamReader:99:63 |==> -63
5434:LVR:0:POS:org.apache.commons.io.input.XmlStreamReader:99:0 |==> 1
5435:LVR:0:NEG:org.apache.commons.io.input.XmlStreamReader:99:0 |==> -1
5436:LVR:0:POS:org.apache.commons.io.input.XmlStreamReader:100:0 |==> 1
5437:LVR:0:NEG:org.apache.commons.io.input.XmlStreamReader:100:0 |==> -1
5438:LVR:0:POS:org.apache.commons.io.input.XmlStreamReader:100:0 |==> 1
5439:LVR:0:NEG:org.apache.commons.io.input.XmlStreamReader:100:0 |==> -1
5440:LVR:0:POS:org.apache.commons.io.input.XmlStreamReader:100:0 |==> 1
5441:LVR:0:NEG:org.apache.commons.io.input.XmlStreamReader:100:0 |==> -1
5442:LVR:POS:0:org.apache.commons.io.input.XmlStreamReader:100:60 |==> 0
5443:LVR:POS:NEG:org.apache.commons.io.input.XmlStreamReader:100:60 |==> -60
5444:LVR:0:POS:org.apache.commons.io.input.XmlStreamReader:101:0 |==> 1
5445:LVR:0:NEG:org.apache.commons.io.input.XmlStreamReader:101:0 |==> -1
5446:LVR:0:POS:org.apache.commons.io.input.XmlStreamReader:101:0 |==> 1
5447:LVR:0:NEG:org.apache.commons.io.input.XmlStreamReader:101:0 |==> -1
5448:LVR:0:POS:org.apache.commons.io.input.XmlStreamReader:101:0 |==> 1
5449:LVR:0:NEG:org.apache.commons.io.input.XmlStreamReader:101:0 |==> -1
5450:LVR:POS:0:org.apache.commons.io.input.XmlStreamReader:101:63 |==> 0
5451:LVR:POS:NEG:org.apache.commons.io.input.XmlStreamReader:101:63 |==> -63
5452:LVR:0:POS:org.apache.commons.io.input.XmlStreamReader:101:0 |==> 1
5453:LVR:0:NEG:org.apache.commons.io.input.XmlStreamReader:101:0 |==> -1
5454:LVR:0:POS:org.apache.commons.io.input.XmlStreamReader:101:0 |==> 1
5455:LVR:0:NEG:org.apache.commons.io.input.XmlStreamReader:101:0 |==> -1
5456:LVR:0:POS:org.apache.commons.io.input.XmlStreamReader:101:0 |==> 1
5457:LVR:0:NEG:org.apache.commons.io.input.XmlStreamReader:101:0 |==> -1
5458:LVR:POS:0:org.apache.commons.io.input.XmlStreamReader:101:120 |==> 0
5459:LVR:POS:NEG:org.apache.commons.io.input.XmlStreamReader:101:120 |==> -120
5460:LVR:0:POS:org.apache.commons.io.input.XmlStreamReader:101:0 |==> 1
5461:LVR:0:NEG:org.apache.commons.io.input.XmlStreamReader:101:0 |==> -1
5462:LVR:0:POS:org.apache.commons.io.input.XmlStreamReader:101:0 |==> 1
5463:LVR:0:NEG:org.apache.commons.io.input.XmlStreamReader:101:0 |==> -1
5464:LVR:0:POS:org.apache.commons.io.input.XmlStreamReader:101:0 |==> 1
5465:LVR:0:NEG:org.apache.commons.io.input.XmlStreamReader:101:0 |==> -1
5466:LVR:POS:0:org.apache.commons.io.input.XmlStreamReader:101:109 |==> 0
5467:LVR:POS:NEG:org.apache.commons.io.input.XmlStreamReader:101:109 |==> -109
5468:LVR:POS:0:org.apache.commons.io.input.XmlStreamReader:102:60 |==> 0
5469:LVR:POS:NEG:org.apache.commons.io.input.XmlStreamReader:102:60 |==> -60
5470:LVR:0:POS:org.apache.commons.io.input.XmlStreamReader:102:0 |==> 1
5471:LVR:0:NEG:org.apache.commons.io.input.XmlStreamReader:102:0 |==> -1
5472:LVR:0:POS:org.apache.commons.io.input.XmlStreamReader:102:0 |==> 1
5473:LVR:0:NEG:org.apache.commons.io.input.XmlStreamReader:102:0 |==> -1
5474:LVR:0:POS:org.apache.commons.io.input.XmlStreamReader:102:0 |==> 1
5475:LVR:0:NEG:org.apache.commons.io.input.XmlStreamReader:102:0 |==> -1
5476:LVR:POS:0:org.apache.commons.io.input.XmlStreamReader:103:63 |==> 0
5477:LVR:POS:NEG:org.apache.commons.io.input.XmlStreamReader:103:63 |==> -63
5478:LVR:0:POS:org.apache.commons.io.input.XmlStreamReader:103:0 |==> 1
5479:LVR:0:NEG:org.apache.commons.io.input.XmlStreamReader:103:0 |==> -1
5480:LVR:0:POS:org.apache.commons.io.input.XmlStreamReader:103:0 |==> 1
5481:LVR:0:NEG:org.apache.commons.io.input.XmlStreamReader:103:0 |==> -1
5482:LVR:0:POS:org.apache.commons.io.input.XmlStreamReader:103:0 |==> 1
5483:LVR:0:NEG:org.apache.commons.io.input.XmlStreamReader:103:0 |==> -1
5484:LVR:POS:0:org.apache.commons.io.input.XmlStreamReader:103:120 |==> 0
5485:LVR:POS:NEG:org.apache.commons.io.input.XmlStreamReader:103:120 |==> -120
5486:LVR:0:POS:org.apache.commons.io.input.XmlStreamReader:103:0 |==> 1
5487:LVR:0:NEG:org.apache.commons.io.input.XmlStreamReader:103:0 |==> -1
5488:LVR:0:POS:org.apache.commons.io.input.XmlStreamReader:103:0 |==> 1
5489:LVR:0:NEG:org.apache.commons.io.input.XmlStreamReader:103:0 |==> -1
5490:LVR:0:POS:org.apache.commons.io.input.XmlStreamReader:103:0 |==> 1
5491:LVR:0:NEG:org.apache.commons.io.input.XmlStreamReader:103:0 |==> -1
5492:LVR:POS:0:org.apache.commons.io.input.XmlStreamReader:103:109 |==> 0
5493:LVR:POS:NEG:org.apache.commons.io.input.XmlStreamReader:103:109 |==> -109
5494:LVR:0:POS:org.apache.commons.io.input.XmlStreamReader:103:0 |==> 1
5495:LVR:0:NEG:org.apache.commons.io.input.XmlStreamReader:103:0 |==> -1
5496:LVR:0:POS:org.apache.commons.io.input.XmlStreamReader:103:0 |==> 1
5497:LVR:0:NEG:org.apache.commons.io.input.XmlStreamReader:103:0 |==> -1
5498:LVR:0:POS:org.apache.commons.io.input.XmlStreamReader:103:0 |==> 1
5499:LVR:0:NEG:org.apache.commons.io.input.XmlStreamReader:103:0 |==> -1
5500:LVR:POS:0:org.apache.commons.io.input.XmlStreamReader:104:76 |==> 0
5501:LVR:POS:NEG:org.apache.commons.io.input.XmlStreamReader:104:76 |==> -76
5502:LVR:POS:0:org.apache.commons.io.input.XmlStreamReader:104:111 |==> 0
5503:LVR:POS:NEG:org.apache.commons.io.input.XmlStreamReader:104:111 |==> -111
5504:LVR:POS:0:org.apache.commons.io.input.XmlStreamReader:104:167 |==> 0
5505:LVR:POS:NEG:org.apache.commons.io.input.XmlStreamReader:104:167 |==> -167
5506:LVR:POS:0:org.apache.commons.io.input.XmlStreamReader:104:148 |==> 0
5507:LVR:POS:NEG:org.apache.commons.io.input.XmlStreamReader:104:148 |==> -148
5508:LVR:TRUE:FALSE:org.apache.commons.io.input.XmlStreamReader@<init>:153:true |==> false
5509:LVR:FALSE:TRUE:org.apache.commons.io.input.XmlStreamReader@<init>:217:false |==> true
5510:LVR:TRUE:FALSE:org.apache.commons.io.input.XmlStreamReader@<init>:218:true |==> false
5511:LVR:TRUE:FALSE:org.apache.commons.io.input.XmlStreamReader@<init>:265:true |==> false
5512:LVR:FALSE:TRUE:org.apache.commons.io.input.XmlStreamReader@<init>:268:false |==> true
5513:LVR:TRUE:FALSE:org.apache.commons.io.input.XmlStreamReader@<init>:269:true |==> false
5514:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.apache.commons.io.input.XmlStreamReader@<init>:270:contentType != null |==> true
5515:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.io.input.XmlStreamReader@<init>:270:conn instanceof HttpURLConnection || contentType != null |==> conn instanceof HttpURLConnection != (contentType != null)
5516:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.io.input.XmlStreamReader@<init>:270:conn instanceof HttpURLConnection || contentType != null |==> conn instanceof HttpURLConnection
5517:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.io.input.XmlStreamReader@<init>:270:conn instanceof HttpURLConnection || contentType != null |==> contentType != null
5518:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.io.input.XmlStreamReader@<init>:270:conn instanceof HttpURLConnection || contentType != null |==> true
5519:LVR:TRUE:FALSE:org.apache.commons.io.input.XmlStreamReader@<init>:297:true |==> false
5520:LVR:FALSE:TRUE:org.apache.commons.io.input.XmlStreamReader@<init>:337:false |==> true
5521:LVR:TRUE:FALSE:org.apache.commons.io.input.XmlStreamReader@<init>:338:true |==> false
5522:STD:<CALL>:<NO-OP>:org.apache.commons.io.input.XmlStreamReader@close:410:reader.close() |==> <NO-OP>
5523:COR:lenient:TRUE:org.apache.commons.io.input.XmlStreamReader@doRawStream:431:lenient |==> false
5524:COR:lenient:FALSE:org.apache.commons.io.input.XmlStreamReader@doRawStream:431:lenient |==> true
5525:COR:lenient:TRUE:org.apache.commons.io.input.XmlStreamReader@doHttpStream:459:lenient |==> false
5526:COR:lenient:FALSE:org.apache.commons.io.input.XmlStreamReader@doHttpStream:459:lenient |==> true
5527:LVR:TRUE:FALSE:org.apache.commons.io.input.XmlStreamReader@doLenientDetection:483:true |==> false
5528:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.apache.commons.io.input.XmlStreamReader@doLenientDetection:478:httpContentType != null |==> true
5529:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.io.input.XmlStreamReader@doLenientDetection:478:httpContentType != null && httpContentType.startsWith("text/html") |==> httpContentType != null == httpContentType.startsWith("text/html")
5530:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.io.input.XmlStreamReader@doLenientDetection:478:httpContentType != null && httpContentType.startsWith("text/html") |==> false
5531:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.io.input.XmlStreamReader@doLenientDetection:478:httpContentType != null && httpContentType.startsWith("text/html") |==> httpContentType != null
5532:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.io.input.XmlStreamReader@doLenientDetection:478:httpContentType != null && httpContentType.startsWith("text/html") |==> httpContentType.startsWith("text/html")
5533:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.io.input.XmlStreamReader@doLenientDetection:489:encoding == null |==> false
5534:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.io.input.XmlStreamReader@doLenientDetection:493:defaultEncoding == null |==> false
5535:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.io.input.XmlStreamReader@doLenientDetection:492:encoding == null |==> false
5536:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.io.input.XmlStreamReader@calculateRawEncoding:513:defaultEncoding == null |==> false
5537:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.io.input.XmlStreamReader@calculateRawEncoding:512:xmlGuessEnc == null |==> false
5538:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.io.input.XmlStreamReader@calculateRawEncoding:512:xmlEnc == null |==> false
5539:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.io.input.XmlStreamReader@calculateRawEncoding:512:xmlGuessEnc == null || xmlEnc == null |==> xmlGuessEnc == null != (xmlEnc == null)
5540:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.io.input.XmlStreamReader@calculateRawEncoding:512:xmlGuessEnc == null || xmlEnc == null |==> xmlGuessEnc == null
5541:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.io.input.XmlStreamReader@calculateRawEncoding:512:xmlGuessEnc == null || xmlEnc == null |==> xmlEnc == null
5542:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.io.input.XmlStreamReader@calculateRawEncoding:512:xmlGuessEnc == null || xmlEnc == null |==> true
5543:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.io.input.XmlStreamReader@calculateRawEncoding:516:xmlGuessEnc.equals(UTF_16BE) || xmlGuessEnc.equals(UTF_16LE) |==> xmlGuessEnc.equals(UTF_16BE) != xmlGuessEnc.equals(UTF_16LE)
5544:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.io.input.XmlStreamReader@calculateRawEncoding:516:xmlGuessEnc.equals(UTF_16BE) || xmlGuessEnc.equals(UTF_16LE) |==> xmlGuessEnc.equals(UTF_16BE)
5545:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.io.input.XmlStreamReader@calculateRawEncoding:516:xmlGuessEnc.equals(UTF_16BE) || xmlGuessEnc.equals(UTF_16LE) |==> xmlGuessEnc.equals(UTF_16LE)
5546:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.io.input.XmlStreamReader@calculateRawEncoding:516:xmlGuessEnc.equals(UTF_16BE) || xmlGuessEnc.equals(UTF_16LE) |==> true
5547:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.io.input.XmlStreamReader@calculateRawEncoding:515:xmlEnc.equals(UTF_16) && (xmlGuessEnc.equals(UTF_16BE) || xmlGuessEnc.equals(UTF_16LE)) |==> xmlEnc.equals(UTF_16) == (xmlGuessEnc.equals(UTF_16BE) || xmlGuessEnc.equals(UTF_16LE))
5548:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.io.input.XmlStreamReader@calculateRawEncoding:515:xmlEnc.equals(UTF_16) && (xmlGuessEnc.equals(UTF_16BE) || xmlGuessEnc.equals(UTF_16LE)) |==> false
5549:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.io.input.XmlStreamReader@calculateRawEncoding:515:xmlEnc.equals(UTF_16) && (xmlGuessEnc.equals(UTF_16BE) || xmlGuessEnc.equals(UTF_16LE)) |==> xmlEnc.equals(UTF_16)
5550:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.io.input.XmlStreamReader@calculateRawEncoding:516:xmlEnc.equals(UTF_16) && (xmlGuessEnc.equals(UTF_16BE) || xmlGuessEnc.equals(UTF_16LE)) |==> (xmlGuessEnc.equals(UTF_16BE) || xmlGuessEnc.equals(UTF_16LE))
5551:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.io.input.XmlStreamReader@calculateRawEncoding:511:bomEnc == null |==> false
5552:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.apache.commons.io.input.XmlStreamReader@calculateRawEncoding:524:xmlGuessEnc != null |==> true
5553:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.io.input.XmlStreamReader@calculateRawEncoding:524:xmlGuessEnc != null && !xmlGuessEnc.equals(UTF_8) |==> xmlGuessEnc != null == !xmlGuessEnc.equals(UTF_8)
5554:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.io.input.XmlStreamReader@calculateRawEncoding:524:xmlGuessEnc != null && !xmlGuessEnc.equals(UTF_8) |==> false
5555:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.io.input.XmlStreamReader@calculateRawEncoding:524:xmlGuessEnc != null && !xmlGuessEnc.equals(UTF_8) |==> xmlGuessEnc != null
5556:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.io.input.XmlStreamReader@calculateRawEncoding:524:xmlGuessEnc != null && !xmlGuessEnc.equals(UTF_8) |==> !xmlGuessEnc.equals(UTF_8)
5557:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.apache.commons.io.input.XmlStreamReader@calculateRawEncoding:528:xmlEnc != null |==> true
5558:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.io.input.XmlStreamReader@calculateRawEncoding:528:xmlEnc != null && !xmlEnc.equals(UTF_8) |==> xmlEnc != null == !xmlEnc.equals(UTF_8)
5559:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.io.input.XmlStreamReader@calculateRawEncoding:528:xmlEnc != null && !xmlEnc.equals(UTF_8) |==> false
5560:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.io.input.XmlStreamReader@calculateRawEncoding:528:xmlEnc != null && !xmlEnc.equals(UTF_8) |==> xmlEnc != null
5561:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.io.input.XmlStreamReader@calculateRawEncoding:528:xmlEnc != null && !xmlEnc.equals(UTF_8) |==> !xmlEnc.equals(UTF_8)
5562:COR:bomEnc.equals(UTF_8):TRUE:org.apache.commons.io.input.XmlStreamReader@calculateRawEncoding:523:bomEnc.equals(UTF_8) |==> false
5563:COR:bomEnc.equals(UTF_8):FALSE:org.apache.commons.io.input.XmlStreamReader@calculateRawEncoding:523:bomEnc.equals(UTF_8) |==> true
5564:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.apache.commons.io.input.XmlStreamReader@calculateRawEncoding:537:xmlGuessEnc != null |==> true
5565:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.io.input.XmlStreamReader@calculateRawEncoding:537:xmlGuessEnc != null && !xmlGuessEnc.equals(bomEnc) |==> xmlGuessEnc != null == !xmlGuessEnc.equals(bomEnc)
5566:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.io.input.XmlStreamReader@calculateRawEncoding:537:xmlGuessEnc != null && !xmlGuessEnc.equals(bomEnc) |==> false
5567:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.io.input.XmlStreamReader@calculateRawEncoding:537:xmlGuessEnc != null && !xmlGuessEnc.equals(bomEnc) |==> xmlGuessEnc != null
5568:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.io.input.XmlStreamReader@calculateRawEncoding:537:xmlGuessEnc != null && !xmlGuessEnc.equals(bomEnc) |==> !xmlGuessEnc.equals(bomEnc)
5569:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.apache.commons.io.input.XmlStreamReader@calculateRawEncoding:541:xmlEnc != null |==> true
5570:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.io.input.XmlStreamReader@calculateRawEncoding:541:xmlEnc != null && !xmlEnc.equals(UTF_16) |==> xmlEnc != null == !xmlEnc.equals(UTF_16)
5571:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.io.input.XmlStreamReader@calculateRawEncoding:541:xmlEnc != null && !xmlEnc.equals(UTF_16) |==> false
5572:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.io.input.XmlStreamReader@calculateRawEncoding:541:xmlEnc != null && !xmlEnc.equals(UTF_16) |==> xmlEnc != null
5573:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.io.input.XmlStreamReader@calculateRawEncoding:541:xmlEnc != null && !xmlEnc.equals(UTF_16) |==> !xmlEnc.equals(UTF_16)
5574:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.io.input.XmlStreamReader@calculateRawEncoding:541:xmlEnc != null && !xmlEnc.equals(UTF_16) && !xmlEnc.equals(bomEnc) |==> (xmlEnc != null && !xmlEnc.equals(UTF_16)) == !xmlEnc.equals(bomEnc)
5575:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.io.input.XmlStreamReader@calculateRawEncoding:541:xmlEnc != null && !xmlEnc.equals(UTF_16) && !xmlEnc.equals(bomEnc) |==> false
5576:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.io.input.XmlStreamReader@calculateRawEncoding:541:xmlEnc != null && !xmlEnc.equals(UTF_16) && !xmlEnc.equals(bomEnc) |==> xmlEnc != null && !xmlEnc.equals(UTF_16)
5577:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.io.input.XmlStreamReader@calculateRawEncoding:541:xmlEnc != null && !xmlEnc.equals(UTF_16) && !xmlEnc.equals(bomEnc) |==> !xmlEnc.equals(bomEnc)
5578:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.io.input.XmlStreamReader@calculateRawEncoding:536:bomEnc.equals(UTF_16BE) || bomEnc.equals(UTF_16LE) |==> bomEnc.equals(UTF_16BE) != bomEnc.equals(UTF_16LE)
5579:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.io.input.XmlStreamReader@calculateRawEncoding:536:bomEnc.equals(UTF_16BE) || bomEnc.equals(UTF_16LE) |==> bomEnc.equals(UTF_16BE)
5580:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.io.input.XmlStreamReader@calculateRawEncoding:536:bomEnc.equals(UTF_16BE) || bomEnc.equals(UTF_16LE) |==> bomEnc.equals(UTF_16LE)
5581:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.io.input.XmlStreamReader@calculateRawEncoding:536:bomEnc.equals(UTF_16BE) || bomEnc.equals(UTF_16LE) |==> true
5582:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.apache.commons.io.input.XmlStreamReader@calculateRawEncoding:550:xmlGuessEnc != null |==> true
5583:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.io.input.XmlStreamReader@calculateRawEncoding:550:xmlGuessEnc != null && !xmlGuessEnc.equals(bomEnc) |==> xmlGuessEnc != null == !xmlGuessEnc.equals(bomEnc)
5584:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.io.input.XmlStreamReader@calculateRawEncoding:550:xmlGuessEnc != null && !xmlGuessEnc.equals(bomEnc) |==> false
5585:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.io.input.XmlStreamReader@calculateRawEncoding:550:xmlGuessEnc != null && !xmlGuessEnc.equals(bomEnc) |==> xmlGuessEnc != null
5586:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.io.input.XmlStreamReader@calculateRawEncoding:550:xmlGuessEnc != null && !xmlGuessEnc.equals(bomEnc) |==> !xmlGuessEnc.equals(bomEnc)
5587:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.apache.commons.io.input.XmlStreamReader@calculateRawEncoding:554:xmlEnc != null |==> true
5588:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.io.input.XmlStreamReader@calculateRawEncoding:554:xmlEnc != null && !xmlEnc.equals(UTF_32) |==> xmlEnc != null == !xmlEnc.equals(UTF_32)
5589:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.io.input.XmlStreamReader@calculateRawEncoding:554:xmlEnc != null && !xmlEnc.equals(UTF_32) |==> false
5590:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.io.input.XmlStreamReader@calculateRawEncoding:554:xmlEnc != null && !xmlEnc.equals(UTF_32) |==> xmlEnc != null
5591:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.io.input.XmlStreamReader@calculateRawEncoding:554:xmlEnc != null && !xmlEnc.equals(UTF_32) |==> !xmlEnc.equals(UTF_32)
5592:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.io.input.XmlStreamReader@calculateRawEncoding:554:xmlEnc != null && !xmlEnc.equals(UTF_32) && !xmlEnc.equals(bomEnc) |==> (xmlEnc != null && !xmlEnc.equals(UTF_32)) == !xmlEnc.equals(bomEnc)
5593:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.io.input.XmlStreamReader@calculateRawEncoding:554:xmlEnc != null && !xmlEnc.equals(UTF_32) && !xmlEnc.equals(bomEnc) |==> false
5594:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.io.input.XmlStreamReader@calculateRawEncoding:554:xmlEnc != null && !xmlEnc.equals(UTF_32) && !xmlEnc.equals(bomEnc) |==> xmlEnc != null && !xmlEnc.equals(UTF_32)
5595:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.io.input.XmlStreamReader@calculateRawEncoding:554:xmlEnc != null && !xmlEnc.equals(UTF_32) && !xmlEnc.equals(bomEnc) |==> !xmlEnc.equals(bomEnc)
5596:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.io.input.XmlStreamReader@calculateRawEncoding:549:bomEnc.equals(UTF_32BE) || bomEnc.equals(UTF_32LE) |==> bomEnc.equals(UTF_32BE) != bomEnc.equals(UTF_32LE)
5597:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.io.input.XmlStreamReader@calculateRawEncoding:549:bomEnc.equals(UTF_32BE) || bomEnc.equals(UTF_32LE) |==> bomEnc.equals(UTF_32BE)
5598:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.io.input.XmlStreamReader@calculateRawEncoding:549:bomEnc.equals(UTF_32BE) || bomEnc.equals(UTF_32LE) |==> bomEnc.equals(UTF_32LE)
5599:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.io.input.XmlStreamReader@calculateRawEncoding:549:bomEnc.equals(UTF_32BE) || bomEnc.equals(UTF_32LE) |==> true
5600:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.apache.commons.io.input.XmlStreamReader@calculateHttpEncoding:584:xmlEnc != null |==> true
5601:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.io.input.XmlStreamReader@calculateHttpEncoding:584:lenient && xmlEnc != null |==> lenient == (xmlEnc != null)
5602:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.io.input.XmlStreamReader@calculateHttpEncoding:584:lenient && xmlEnc != null |==> false
5603:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.io.input.XmlStreamReader@calculateHttpEncoding:584:lenient && xmlEnc != null |==> lenient
5604:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.io.input.XmlStreamReader@calculateHttpEncoding:584:lenient && xmlEnc != null |==> xmlEnc != null
5605:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.io.input.XmlStreamReader@calculateHttpEncoding:595:!appXml && !textXml |==> !appXml == !textXml
5606:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.io.input.XmlStreamReader@calculateHttpEncoding:595:!appXml && !textXml |==> false
5607:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.io.input.XmlStreamReader@calculateHttpEncoding:595:!appXml && !textXml |==> !appXml
5608:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.io.input.XmlStreamReader@calculateHttpEncoding:595:!appXml && !textXml |==> !textXml
5609:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.io.input.XmlStreamReader@calculateHttpEncoding:605:defaultEncoding == null |==> false
5610:COR:appXml:TRUE:org.apache.commons.io.input.XmlStreamReader@calculateHttpEncoding:602:appXml |==> false
5611:COR:appXml:FALSE:org.apache.commons.io.input.XmlStreamReader@calculateHttpEncoding:602:appXml |==> true
5612:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.io.input.XmlStreamReader@calculateHttpEncoding:601:cTEnc == null |==> false
5613:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.apache.commons.io.input.XmlStreamReader@calculateHttpEncoding:611:bomEnc != null |==> true
5614:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.io.input.XmlStreamReader@calculateHttpEncoding:610:cTEnc.equals(UTF_16BE) || cTEnc.equals(UTF_16LE) |==> cTEnc.equals(UTF_16BE) != cTEnc.equals(UTF_16LE)
5615:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.io.input.XmlStreamReader@calculateHttpEncoding:610:cTEnc.equals(UTF_16BE) || cTEnc.equals(UTF_16LE) |==> cTEnc.equals(UTF_16BE)
5616:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.io.input.XmlStreamReader@calculateHttpEncoding:610:cTEnc.equals(UTF_16BE) || cTEnc.equals(UTF_16LE) |==> cTEnc.equals(UTF_16LE)
5617:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.io.input.XmlStreamReader@calculateHttpEncoding:610:cTEnc.equals(UTF_16BE) || cTEnc.equals(UTF_16LE) |==> true
5618:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.apache.commons.io.input.XmlStreamReader@calculateHttpEncoding:620:bomEnc != null |==> true
5619:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.io.input.XmlStreamReader@calculateHttpEncoding:620:bomEnc != null && bomEnc.startsWith(UTF_16) |==> bomEnc != null == bomEnc.startsWith(UTF_16)
5620:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.io.input.XmlStreamReader@calculateHttpEncoding:620:bomEnc != null && bomEnc.startsWith(UTF_16) |==> false
5621:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.io.input.XmlStreamReader@calculateHttpEncoding:620:bomEnc != null && bomEnc.startsWith(UTF_16) |==> bomEnc != null
5622:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.io.input.XmlStreamReader@calculateHttpEncoding:620:bomEnc != null && bomEnc.startsWith(UTF_16) |==> bomEnc.startsWith(UTF_16)
5623:COR:cTEnc.equals(UTF_16):TRUE:org.apache.commons.io.input.XmlStreamReader@calculateHttpEncoding:619:cTEnc.equals(UTF_16) |==> false
5624:COR:cTEnc.equals(UTF_16):FALSE:org.apache.commons.io.input.XmlStreamReader@calculateHttpEncoding:619:cTEnc.equals(UTF_16) |==> true
5625:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.apache.commons.io.input.XmlStreamReader@calculateHttpEncoding:629:bomEnc != null |==> true
5626:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.io.input.XmlStreamReader@calculateHttpEncoding:628:cTEnc.equals(UTF_32BE) || cTEnc.equals(UTF_32LE) |==> cTEnc.equals(UTF_32BE) != cTEnc.equals(UTF_32LE)
5627:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.io.input.XmlStreamReader@calculateHttpEncoding:628:cTEnc.equals(UTF_32BE) || cTEnc.equals(UTF_32LE) |==> cTEnc.equals(UTF_32BE)
5628:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.io.input.XmlStreamReader@calculateHttpEncoding:628:cTEnc.equals(UTF_32BE) || cTEnc.equals(UTF_32LE) |==> cTEnc.equals(UTF_32LE)
5629:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.io.input.XmlStreamReader@calculateHttpEncoding:628:cTEnc.equals(UTF_32BE) || cTEnc.equals(UTF_32LE) |==> true
5630:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.apache.commons.io.input.XmlStreamReader@calculateHttpEncoding:638:bomEnc != null |==> true
5631:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.io.input.XmlStreamReader@calculateHttpEncoding:638:bomEnc != null && bomEnc.startsWith(UTF_32) |==> bomEnc != null == bomEnc.startsWith(UTF_32)
5632:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.io.input.XmlStreamReader@calculateHttpEncoding:638:bomEnc != null && bomEnc.startsWith(UTF_32) |==> false
5633:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.io.input.XmlStreamReader@calculateHttpEncoding:638:bomEnc != null && bomEnc.startsWith(UTF_32) |==> bomEnc != null
5634:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.io.input.XmlStreamReader@calculateHttpEncoding:638:bomEnc != null && bomEnc.startsWith(UTF_32) |==> bomEnc.startsWith(UTF_32)
5635:COR:cTEnc.equals(UTF_32):TRUE:org.apache.commons.io.input.XmlStreamReader@calculateHttpEncoding:637:cTEnc.equals(UTF_32) |==> false
5636:COR:cTEnc.equals(UTF_32):FALSE:org.apache.commons.io.input.XmlStreamReader@calculateHttpEncoding:637:cTEnc.equals(UTF_32) |==> true
5637:LVR:0:POS:org.apache.commons.io.input.XmlStreamReader@getContentTypeMime:659:0 |==> 1
5638:LVR:0:NEG:org.apache.commons.io.input.XmlStreamReader@getContentTypeMime:659:0 |==> -1
5639:LVR:0:POS:org.apache.commons.io.input.XmlStreamReader@getContentTypeMime:658:0 |==> 1
5640:LVR:0:NEG:org.apache.commons.io.input.XmlStreamReader@getContentTypeMime:658:0 |==> -1
5641:ROR:>=(int,int):==(int,int):org.apache.commons.io.input.XmlStreamReader@getContentTypeMime:658:i >= 0 |==> i == 0
5642:ROR:>=(int,int):>(int,int):org.apache.commons.io.input.XmlStreamReader@getContentTypeMime:658:i >= 0 |==> i > 0
5643:ROR:>=(int,int):TRUE(int,int):org.apache.commons.io.input.XmlStreamReader@getContentTypeMime:658:i >= 0 |==> true
5644:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.apache.commons.io.input.XmlStreamReader@getContentTypeMime:656:httpContentType != null |==> true
5645:LVR:POS:0:org.apache.commons.io.input.XmlStreamReader@getContentTypeEncoding:683:1 |==> 0
5646:LVR:POS:NEG:org.apache.commons.io.input.XmlStreamReader@getContentTypeEncoding:683:1 |==> -1
5647:AOR:+(int,int):%(int,int):org.apache.commons.io.input.XmlStreamReader@getContentTypeEncoding:683:i + 1 |==> i % 1
5648:AOR:+(int,int):*(int,int):org.apache.commons.io.input.XmlStreamReader@getContentTypeEncoding:683:i + 1 |==> i * 1
5649:AOR:+(int,int):-(int,int):org.apache.commons.io.input.XmlStreamReader@getContentTypeEncoding:683:i + 1 |==> i - 1
5650:AOR:+(int,int):/(int,int):org.apache.commons.io.input.XmlStreamReader@getContentTypeEncoding:683:i + 1 |==> i / 1
5651:LVR:POS:0:org.apache.commons.io.input.XmlStreamReader@getContentTypeEncoding:685:1 |==> 0
5652:LVR:POS:NEG:org.apache.commons.io.input.XmlStreamReader@getContentTypeEncoding:685:1 |==> -1
5653:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.apache.commons.io.input.XmlStreamReader@getContentTypeEncoding:686:encoding != null |==> true
5654:LVR:NEG:0:org.apache.commons.io.input.XmlStreamReader@getContentTypeEncoding:682:-1 |==> 0
5655:LVR:NEG:POS:org.apache.commons.io.input.XmlStreamReader@getContentTypeEncoding:682:-1 |==> 1
5656:ROR:>(int,int):!=(int,int):org.apache.commons.io.input.XmlStreamReader@getContentTypeEncoding:682:i > -1 |==> i != -1
5657:ROR:>(int,int):>=(int,int):org.apache.commons.io.input.XmlStreamReader@getContentTypeEncoding:682:i > -1 |==> i >= -1
5658:ROR:>(int,int):FALSE(int,int):org.apache.commons.io.input.XmlStreamReader@getContentTypeEncoding:682:i > -1 |==> false
5659:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.apache.commons.io.input.XmlStreamReader@getContentTypeEncoding:680:httpContentType != null |==> true
5660:STD:<CALL>:<NO-OP>:org.apache.commons.io.input.XmlStreamReader@getXmlProlog:709:is.mark(BUFFER_SIZE) |==> <NO-OP>
5661:LVR:0:POS:org.apache.commons.io.input.XmlStreamReader@getXmlProlog:710:0 |==> 1
5662:LVR:0:NEG:org.apache.commons.io.input.XmlStreamReader@getXmlProlog:710:0 |==> -1
5663:LVR:NEG:0:org.apache.commons.io.input.XmlStreamReader@getXmlProlog:713:-1 |==> 0
5664:LVR:NEG:POS:org.apache.commons.io.input.XmlStreamReader@getXmlProlog:713:-1 |==> 1
5665:LVR:NEG:0:org.apache.commons.io.input.XmlStreamReader@getXmlProlog:715:-1 |==> 0
5666:LVR:NEG:POS:org.apache.commons.io.input.XmlStreamReader@getXmlProlog:715:-1 |==> 1
5667:ROR:!=(int,int):<(int,int):org.apache.commons.io.input.XmlStreamReader@getXmlProlog:715:c != -1 |==> c < -1
5668:ROR:!=(int,int):>(int,int):org.apache.commons.io.input.XmlStreamReader@getXmlProlog:715:c != -1 |==> c > -1
5669:ROR:!=(int,int):TRUE(int,int):org.apache.commons.io.input.XmlStreamReader@getXmlProlog:715:c != -1 |==> true
5670:LVR:NEG:0:org.apache.commons.io.input.XmlStreamReader@getXmlProlog:715:-1 |==> 0
5671:LVR:NEG:POS:org.apache.commons.io.input.XmlStreamReader@getXmlProlog:715:-1 |==> 1
5672:ROR:==(int,int):<=(int,int):org.apache.commons.io.input.XmlStreamReader@getXmlProlog:715:firstGT == -1 |==> firstGT <= -1
5673:ROR:==(int,int):>=(int,int):org.apache.commons.io.input.XmlStreamReader@getXmlProlog:715:firstGT == -1 |==> firstGT >= -1
5674:ROR:==(int,int):FALSE(int,int):org.apache.commons.io.input.XmlStreamReader@getXmlProlog:715:firstGT == -1 |==> false
5675:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.io.input.XmlStreamReader@getXmlProlog:715:c != -1 && firstGT == -1 |==> c != -1 == (firstGT == -1)
5676:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.io.input.XmlStreamReader@getXmlProlog:715:c != -1 && firstGT == -1 |==> false
5677:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.io.input.XmlStreamReader@getXmlProlog:715:c != -1 && firstGT == -1 |==> c != -1
5678:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.io.input.XmlStreamReader@getXmlProlog:715:c != -1 && firstGT == -1 |==> firstGT == -1
5679:ROR:<(int,int):!=(int,int):org.apache.commons.io.input.XmlStreamReader@getXmlProlog:715:offset < BUFFER_SIZE |==> offset != BUFFER_SIZE
5680:ROR:<(int,int):<=(int,int):org.apache.commons.io.input.XmlStreamReader@getXmlProlog:715:offset < BUFFER_SIZE |==> offset <= BUFFER_SIZE
5681:ROR:<(int,int):FALSE(int,int):org.apache.commons.io.input.XmlStreamReader@getXmlProlog:715:offset < BUFFER_SIZE |==> false
5682:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.io.input.XmlStreamReader@getXmlProlog:715:c != -1 && firstGT == -1 && offset < BUFFER_SIZE |==> (c != -1 && firstGT == -1) == offset < BUFFER_SIZE
5683:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.io.input.XmlStreamReader@getXmlProlog:715:c != -1 && firstGT == -1 && offset < BUFFER_SIZE |==> false
5684:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.io.input.XmlStreamReader@getXmlProlog:715:c != -1 && firstGT == -1 && offset < BUFFER_SIZE |==> c != -1 && firstGT == -1
5685:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.io.input.XmlStreamReader@getXmlProlog:715:c != -1 && firstGT == -1 && offset < BUFFER_SIZE |==> offset < BUFFER_SIZE
5686:STD:<ASSIGN>:<NO-OP>:org.apache.commons.io.input.XmlStreamReader@getXmlProlog:716:offset += c |==> <NO-OP>
5687:STD:<ASSIGN>:<NO-OP>:org.apache.commons.io.input.XmlStreamReader@getXmlProlog:717:max -= c |==> <NO-OP>
5688:LVR:0:POS:org.apache.commons.io.input.XmlStreamReader@getXmlProlog:719:0 |==> 1
5689:LVR:0:NEG:org.apache.commons.io.input.XmlStreamReader@getXmlProlog:719:0 |==> -1
5690:LVR:NEG:0:org.apache.commons.io.input.XmlStreamReader@getXmlProlog:723:-1 |==> 0
5691:LVR:NEG:POS:org.apache.commons.io.input.XmlStreamReader@getXmlProlog:723:-1 |==> 1
5692:ROR:==(int,int):<=(int,int):org.apache.commons.io.input.XmlStreamReader@getXmlProlog:723:c == -1 |==> c <= -1
5693:ROR:==(int,int):>=(int,int):org.apache.commons.io.input.XmlStreamReader@getXmlProlog:723:c == -1 |==> c >= -1
5694:ROR:==(int,int):FALSE(int,int):org.apache.commons.io.input.XmlStreamReader@getXmlProlog:723:c == -1 |==> false
5695:LVR:NEG:0:org.apache.commons.io.input.XmlStreamReader@getXmlProlog:722:-1 |==> 0
5696:LVR:NEG:POS:org.apache.commons.io.input.XmlStreamReader@getXmlProlog:722:-1 |==> 1
5697:ROR:==(int,int):<=(int,int):org.apache.commons.io.input.XmlStreamReader@getXmlProlog:722:firstGT == -1 |==> firstGT <= -1
5698:ROR:==(int,int):>=(int,int):org.apache.commons.io.input.XmlStreamReader@getXmlProlog:722:firstGT == -1 |==> firstGT >= -1
5699:ROR:==(int,int):FALSE(int,int):org.apache.commons.io.input.XmlStreamReader@getXmlProlog:722:firstGT == -1 |==> false
5700:STD:<CALL>:<NO-OP>:org.apache.commons.io.input.XmlStreamReader@getXmlProlog:733:is.reset() |==> <NO-OP>
5701:LVR:0:POS:org.apache.commons.io.input.XmlStreamReader@getXmlProlog:735:0 |==> 1
5702:LVR:0:NEG:org.apache.commons.io.input.XmlStreamReader@getXmlProlog:735:0 |==> -1
5703:LVR:POS:0:org.apache.commons.io.input.XmlStreamReader@getXmlProlog:735:1 |==> 0
5704:LVR:POS:NEG:org.apache.commons.io.input.XmlStreamReader@getXmlProlog:735:1 |==> -1
5705:AOR:+(int,int):%(int,int):org.apache.commons.io.input.XmlStreamReader@getXmlProlog:735:firstGT + 1 |==> firstGT % 1
5706:AOR:+(int,int):*(int,int):org.apache.commons.io.input.XmlStreamReader@getXmlProlog:735:firstGT + 1 |==> firstGT * 1
5707:AOR:+(int,int):-(int,int):org.apache.commons.io.input.XmlStreamReader@getXmlProlog:735:firstGT + 1 |==> firstGT - 1
5708:AOR:+(int,int):/(int,int):org.apache.commons.io.input.XmlStreamReader@getXmlProlog:735:firstGT + 1 |==> firstGT / 1
5709:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.apache.commons.io.input.XmlStreamReader@getXmlProlog:738:line != null |==> true
5710:STD:<CALL>:<NO-OP>:org.apache.commons.io.input.XmlStreamReader@getXmlProlog:739:prolog.append(line) |==> <NO-OP>
5711:LVR:POS:0:org.apache.commons.io.input.XmlStreamReader@getXmlProlog:744:1 |==> 0
5712:LVR:POS:NEG:org.apache.commons.io.input.XmlStreamReader@getXmlProlog:744:1 |==> -1
5713:LVR:POS:0:org.apache.commons.io.input.XmlStreamReader@getXmlProlog:745:1 |==> 0
5714:LVR:POS:NEG:org.apache.commons.io.input.XmlStreamReader@getXmlProlog:745:1 |==> -1
5715:LVR:POS:0:org.apache.commons.io.input.XmlStreamReader@getXmlProlog:745:1 |==> 0
5716:LVR:POS:NEG:org.apache.commons.io.input.XmlStreamReader@getXmlProlog:745:1 |==> -1
5717:AOR:-(int,int):%(int,int):org.apache.commons.io.input.XmlStreamReader@getXmlProlog:745:encoding.length() - 1 |==> encoding.length() % 1
5718:AOR:-(int,int):*(int,int):org.apache.commons.io.input.XmlStreamReader@getXmlProlog:745:encoding.length() - 1 |==> encoding.length() * 1
5719:AOR:-(int,int):+(int,int):org.apache.commons.io.input.XmlStreamReader@getXmlProlog:745:encoding.length() - 1 |==> encoding.length() + 1
5720:AOR:-(int,int):/(int,int):org.apache.commons.io.input.XmlStreamReader@getXmlProlog:745:encoding.length() - 1 |==> encoding.length() / 1
5721:COR:m.find():TRUE:org.apache.commons.io.input.XmlStreamReader@getXmlProlog:743:m.find() |==> false
5722:COR:m.find():FALSE:org.apache.commons.io.input.XmlStreamReader@getXmlProlog:743:m.find() |==> true
5723:LVR:0:POS:org.apache.commons.io.input.XmlStreamReader@getXmlProlog:732:0 |==> 1
5724:LVR:0:NEG:org.apache.commons.io.input.XmlStreamReader@getXmlProlog:732:0 |==> -1
5725:ROR:>(int,int):!=(int,int):org.apache.commons.io.input.XmlStreamReader@getXmlProlog:732:bytesRead > 0 |==> bytesRead != 0
5726:ROR:>(int,int):>=(int,int):org.apache.commons.io.input.XmlStreamReader@getXmlProlog:732:bytesRead > 0 |==> bytesRead >= 0
5727:ROR:>(int,int):FALSE(int,int):org.apache.commons.io.input.XmlStreamReader@getXmlProlog:732:bytesRead > 0 |==> false
5728:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.apache.commons.io.input.XmlStreamReader@getXmlProlog:707:guessedEnc != null |==> true
5729:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.apache.commons.io.input.XmlStreamReader@isAppXml:760:mime != null |==> true
5730:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.io.input.XmlStreamReader@isAppXml:761:mime.equals("application/xml") || mime.equals("application/xml-dtd") |==> mime.equals("application/xml") != mime.equals("application/xml-dtd")
5731:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.io.input.XmlStreamReader@isAppXml:761:mime.equals("application/xml") || mime.equals("application/xml-dtd") |==> mime.equals("application/xml")
5732:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.io.input.XmlStreamReader@isAppXml:762:mime.equals("application/xml") || mime.equals("application/xml-dtd") |==> mime.equals("application/xml-dtd")
5733:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.io.input.XmlStreamReader@isAppXml:761:mime.equals("application/xml") || mime.equals("application/xml-dtd") |==> true
5734:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.io.input.XmlStreamReader@isAppXml:761:mime.equals("application/xml") || mime.equals("application/xml-dtd") || mime.equals("application/xml-external-parsed-entity") |==> (mime.equals("application/xml") || mime.equals("application/xml-dtd")) != mime.equals("application/xml-external-parsed-entity")
5735:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.io.input.XmlStreamReader@isAppXml:761:mime.equals("application/xml") || mime.equals("application/xml-dtd") || mime.equals("application/xml-external-parsed-entity") |==> mime.equals("application/xml") || mime.equals("application/xml-dtd")
5736:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.io.input.XmlStreamReader@isAppXml:763:mime.equals("application/xml") || mime.equals("application/xml-dtd") || mime.equals("application/xml-external-parsed-entity") |==> mime.equals("application/xml-external-parsed-entity")
5737:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.io.input.XmlStreamReader@isAppXml:762:mime.equals("application/xml") || mime.equals("application/xml-dtd") || mime.equals("application/xml-external-parsed-entity") |==> true
5738:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.io.input.XmlStreamReader@isAppXml:764:mime.startsWith("application/") && mime.endsWith("+xml") |==> mime.startsWith("application/") == mime.endsWith("+xml")
5739:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.io.input.XmlStreamReader@isAppXml:764:mime.startsWith("application/") && mime.endsWith("+xml") |==> false
5740:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.io.input.XmlStreamReader@isAppXml:764:mime.startsWith("application/") && mime.endsWith("+xml") |==> mime.startsWith("application/")
5741:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.io.input.XmlStreamReader@isAppXml:764:mime.startsWith("application/") && mime.endsWith("+xml") |==> mime.endsWith("+xml")
5742:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.io.input.XmlStreamReader@isAppXml:761:mime.equals("application/xml") || mime.equals("application/xml-dtd") || mime.equals("application/xml-external-parsed-entity") || mime.startsWith("application/") && mime.endsWith("+xml") |==> (mime.equals("application/xml") || mime.equals("application/xml-dtd") || mime.equals("application/xml-external-parsed-entity")) != (mime.startsWith("application/") && mime.endsWith("+xml"))
5743:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.io.input.XmlStreamReader@isAppXml:761:mime.equals("application/xml") || mime.equals("application/xml-dtd") || mime.equals("application/xml-external-parsed-entity") || mime.startsWith("application/") && mime.endsWith("+xml") |==> mime.equals("application/xml") || mime.equals("application/xml-dtd") || mime.equals("application/xml-external-parsed-entity")
5744:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.io.input.XmlStreamReader@isAppXml:764:mime.equals("application/xml") || mime.equals("application/xml-dtd") || mime.equals("application/xml-external-parsed-entity") || mime.startsWith("application/") && mime.endsWith("+xml") |==> mime.startsWith("application/") && mime.endsWith("+xml")
5745:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.io.input.XmlStreamReader@isAppXml:763:mime.equals("application/xml") || mime.equals("application/xml-dtd") || mime.equals("application/xml-external-parsed-entity") || mime.startsWith("application/") && mime.endsWith("+xml") |==> true
5746:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.io.input.XmlStreamReader@isAppXml:760:mime != null && (mime.equals("application/xml") || mime.equals("application/xml-dtd") || mime.equals("application/xml-external-parsed-entity") || mime.startsWith("application/") && mime.endsWith("+xml")) |==> mime != null == (mime.equals("application/xml") || mime.equals("application/xml-dtd") || mime.equals("application/xml-external-parsed-entity") || mime.startsWith("application/") && mime.endsWith("+xml"))
5747:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.io.input.XmlStreamReader@isAppXml:760:mime != null && (mime.equals("application/xml") || mime.equals("application/xml-dtd") || mime.equals("application/xml-external-parsed-entity") || mime.startsWith("application/") && mime.endsWith("+xml")) |==> false
5748:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.io.input.XmlStreamReader@isAppXml:760:mime != null && (mime.equals("application/xml") || mime.equals("application/xml-dtd") || mime.equals("application/xml-external-parsed-entity") || mime.startsWith("application/") && mime.endsWith("+xml")) |==> mime != null
5749:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.io.input.XmlStreamReader@isAppXml:761:mime != null && (mime.equals("application/xml") || mime.equals("application/xml-dtd") || mime.equals("application/xml-external-parsed-entity") || mime.startsWith("application/") && mime.endsWith("+xml")) |==> (mime.equals("application/xml") || mime.equals("application/xml-dtd") || mime.equals("application/xml-external-parsed-entity") || mime.startsWith("application/") && mime.endsWith("+xml"))
5750:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.apache.commons.io.input.XmlStreamReader@isTextXml:775:mime != null |==> true
5751:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.io.input.XmlStreamReader@isTextXml:776:mime.equals("text/xml") || mime.equals("text/xml-external-parsed-entity") |==> mime.equals("text/xml") != mime.equals("text/xml-external-parsed-entity")
5752:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.io.input.XmlStreamReader@isTextXml:776:mime.equals("text/xml") || mime.equals("text/xml-external-parsed-entity") |==> mime.equals("text/xml")
5753:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.io.input.XmlStreamReader@isTextXml:777:mime.equals("text/xml") || mime.equals("text/xml-external-parsed-entity") |==> mime.equals("text/xml-external-parsed-entity")
5754:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.io.input.XmlStreamReader@isTextXml:776:mime.equals("text/xml") || mime.equals("text/xml-external-parsed-entity") |==> true
5755:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.io.input.XmlStreamReader@isTextXml:778:mime.startsWith("text/") && mime.endsWith("+xml") |==> mime.startsWith("text/") == mime.endsWith("+xml")
5756:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.io.input.XmlStreamReader@isTextXml:778:mime.startsWith("text/") && mime.endsWith("+xml") |==> false
5757:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.io.input.XmlStreamReader@isTextXml:778:mime.startsWith("text/") && mime.endsWith("+xml") |==> mime.startsWith("text/")
5758:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.io.input.XmlStreamReader@isTextXml:778:mime.startsWith("text/") && mime.endsWith("+xml") |==> mime.endsWith("+xml")
5759:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.io.input.XmlStreamReader@isTextXml:776:mime.equals("text/xml") || mime.equals("text/xml-external-parsed-entity") || mime.startsWith("text/") && mime.endsWith("+xml") |==> (mime.equals("text/xml") || mime.equals("text/xml-external-parsed-entity")) != (mime.startsWith("text/") && mime.endsWith("+xml"))
5760:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.io.input.XmlStreamReader@isTextXml:776:mime.equals("text/xml") || mime.equals("text/xml-external-parsed-entity") || mime.startsWith("text/") && mime.endsWith("+xml") |==> mime.equals("text/xml") || mime.equals("text/xml-external-parsed-entity")
5761:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.io.input.XmlStreamReader@isTextXml:778:mime.equals("text/xml") || mime.equals("text/xml-external-parsed-entity") || mime.startsWith("text/") && mime.endsWith("+xml") |==> mime.startsWith("text/") && mime.endsWith("+xml")
5762:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.io.input.XmlStreamReader@isTextXml:777:mime.equals("text/xml") || mime.equals("text/xml-external-parsed-entity") || mime.startsWith("text/") && mime.endsWith("+xml") |==> true
5763:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.io.input.XmlStreamReader@isTextXml:775:mime != null && (mime.equals("text/xml") || mime.equals("text/xml-external-parsed-entity") || mime.startsWith("text/") && mime.endsWith("+xml")) |==> mime != null == (mime.equals("text/xml") || mime.equals("text/xml-external-parsed-entity") || mime.startsWith("text/") && mime.endsWith("+xml"))
5764:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.io.input.XmlStreamReader@isTextXml:775:mime != null && (mime.equals("text/xml") || mime.equals("text/xml-external-parsed-entity") || mime.startsWith("text/") && mime.endsWith("+xml")) |==> false
5765:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.io.input.XmlStreamReader@isTextXml:775:mime != null && (mime.equals("text/xml") || mime.equals("text/xml-external-parsed-entity") || mime.startsWith("text/") && mime.endsWith("+xml")) |==> mime != null
5766:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.io.input.XmlStreamReader@isTextXml:776:mime != null && (mime.equals("text/xml") || mime.equals("text/xml-external-parsed-entity") || mime.startsWith("text/") && mime.endsWith("+xml")) |==> (mime.equals("text/xml") || mime.equals("text/xml-external-parsed-entity") || mime.startsWith("text/") && mime.endsWith("+xml"))
5767:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.io.monitor.FileAlterationObserver@<init>:200:rootEntry == null |==> false
5768:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.io.monitor.FileAlterationObserver@<init>:203:rootEntry.getFile() == null |==> false
5769:COR:caseSensitivity.equals(IOCase.INSENSITIVE):TRUE:org.apache.commons.io.monitor.FileAlterationObserver@<init>:210:caseSensitivity.equals(IOCase.INSENSITIVE) |==> false
5770:COR:caseSensitivity.equals(IOCase.INSENSITIVE):FALSE:org.apache.commons.io.monitor.FileAlterationObserver@<init>:210:caseSensitivity.equals(IOCase.INSENSITIVE) |==> true
5771:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.io.monitor.FileAlterationObserver@<init>:208:caseSensitivity == null |==> false
5772:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.io.monitor.FileAlterationObserver@<init>:208:caseSensitivity == null || caseSensitivity.equals(IOCase.SYSTEM) |==> caseSensitivity == null != caseSensitivity.equals(IOCase.SYSTEM)
5773:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.io.monitor.FileAlterationObserver@<init>:208:caseSensitivity == null || caseSensitivity.equals(IOCase.SYSTEM) |==> caseSensitivity == null
5774:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.io.monitor.FileAlterationObserver@<init>:208:caseSensitivity == null || caseSensitivity.equals(IOCase.SYSTEM) |==> caseSensitivity.equals(IOCase.SYSTEM)
5775:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.io.monitor.FileAlterationObserver@<init>:208:caseSensitivity == null || caseSensitivity.equals(IOCase.SYSTEM) |==> true
5776:STD:<CALL>:<NO-OP>:org.apache.commons.io.monitor.FileAlterationObserver@addListener:243:listeners.add(listener) |==> <NO-OP>
5777:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.apache.commons.io.monitor.FileAlterationObserver@addListener:242:listener != null |==> true
5778:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.apache.commons.io.monitor.FileAlterationObserver@removeListener:253:listener != null |==> true
5779:STD:<CALL>:<NO-OP>:org.apache.commons.io.monitor.FileAlterationObserver@initialize:274:rootEntry.refresh(rootEntry.getFile()) |==> <NO-OP>
5780:LVR:0:POS:org.apache.commons.io.monitor.FileAlterationObserver@initialize:276:0 |==> 1
5781:LVR:0:NEG:org.apache.commons.io.monitor.FileAlterationObserver@initialize:276:0 |==> -1
5782:ROR:>(int,int):!=(int,int):org.apache.commons.io.monitor.FileAlterationObserver@initialize:276:files.length > 0 |==> files.length != 0
5783:ROR:>(int,int):>=(int,int):org.apache.commons.io.monitor.FileAlterationObserver@initialize:276:files.length > 0 |==> files.length >= 0
5784:ROR:>(int,int):FALSE(int,int):org.apache.commons.io.monitor.FileAlterationObserver@initialize:276:files.length > 0 |==> false
5785:LVR:0:POS:org.apache.commons.io.monitor.FileAlterationObserver@initialize:277:0 |==> 1
5786:LVR:0:NEG:org.apache.commons.io.monitor.FileAlterationObserver@initialize:277:0 |==> -1
5787:ROR:<(int,int):!=(int,int):org.apache.commons.io.monitor.FileAlterationObserver@initialize:277:i < files.length |==> i != files.length
5788:ROR:<(int,int):<=(int,int):org.apache.commons.io.monitor.FileAlterationObserver@initialize:277:i < files.length |==> i <= files.length
5789:ROR:<(int,int):FALSE(int,int):org.apache.commons.io.monitor.FileAlterationObserver@initialize:277:i < files.length |==> false
5790:STD:<CALL>:<NO-OP>:org.apache.commons.io.monitor.FileAlterationObserver@initialize:280:rootEntry.setChildren(children) |==> <NO-OP>
5791:STD:<CALL>:<NO-OP>:org.apache.commons.io.monitor.FileAlterationObserver@checkAndNotify:298:listener.onStart(this) |==> <NO-OP>
5792:STD:<CALL>:<NO-OP>:org.apache.commons.io.monitor.FileAlterationObserver@checkAndNotify:304:checkAndNotify(rootEntry, rootEntry.getChildren(), listFiles(rootFile)) |==> <NO-OP>
5793:STD:<CALL>:<NO-OP>:org.apache.commons.io.monitor.FileAlterationObserver@checkAndNotify:306:checkAndNotify(rootEntry, rootEntry.getChildren(), FileUtils.EMPTY_FILE_ARRAY) |==> <NO-OP>
5794:COR:rootEntry.isExists():TRUE:org.apache.commons.io.monitor.FileAlterationObserver@checkAndNotify:305:rootEntry.isExists() |==> false
5795:COR:rootEntry.isExists():FALSE:org.apache.commons.io.monitor.FileAlterationObserver@checkAndNotify:305:rootEntry.isExists() |==> true
5796:COR:rootFile.exists():TRUE:org.apache.commons.io.monitor.FileAlterationObserver@checkAndNotify:303:rootFile.exists() |==> false
5797:COR:rootFile.exists():FALSE:org.apache.commons.io.monitor.FileAlterationObserver@checkAndNotify:303:rootFile.exists() |==> true
5798:STD:<CALL>:<NO-OP>:org.apache.commons.io.monitor.FileAlterationObserver@checkAndNotify:313:listener.onStop(this) |==> <NO-OP>
5799:LVR:0:POS:org.apache.commons.io.monitor.FileAlterationObserver@checkAndNotify:325:0 |==> 1
5800:LVR:0:NEG:org.apache.commons.io.monitor.FileAlterationObserver@checkAndNotify:325:0 |==> -1
5801:LVR:0:POS:org.apache.commons.io.monitor.FileAlterationObserver@checkAndNotify:326:0 |==> 1
5802:LVR:0:NEG:org.apache.commons.io.monitor.FileAlterationObserver@checkAndNotify:326:0 |==> -1
5803:ROR:>(int,int):!=(int,int):org.apache.commons.io.monitor.FileAlterationObserver@checkAndNotify:326:files.length > 0 |==> files.length != 0
5804:ROR:>(int,int):>=(int,int):org.apache.commons.io.monitor.FileAlterationObserver@checkAndNotify:326:files.length > 0 |==> files.length >= 0
5805:ROR:>(int,int):FALSE(int,int):org.apache.commons.io.monitor.FileAlterationObserver@checkAndNotify:326:files.length > 0 |==> false
5806:ROR:<(int,int):!=(int,int):org.apache.commons.io.monitor.FileAlterationObserver@checkAndNotify:328:c < files.length |==> c != files.length
5807:ROR:<(int,int):<=(int,int):org.apache.commons.io.monitor.FileAlterationObserver@checkAndNotify:328:c < files.length |==> c <= files.length
5808:ROR:<(int,int):FALSE(int,int):org.apache.commons.io.monitor.FileAlterationObserver@checkAndNotify:328:c < files.length |==> false
5809:LVR:0:POS:org.apache.commons.io.monitor.FileAlterationObserver@checkAndNotify:328:0 |==> 1
5810:LVR:0:NEG:org.apache.commons.io.monitor.FileAlterationObserver@checkAndNotify:328:0 |==> -1
5811:ROR:>(int,int):!=(int,int):org.apache.commons.io.monitor.FileAlterationObserver@checkAndNotify:328:comparator.compare(entry.getFile(), files[c]) > 0 |==> comparator.compare(entry.getFile(), files[c]) != 0
5812:ROR:>(int,int):>=(int,int):org.apache.commons.io.monitor.FileAlterationObserver@checkAndNotify:328:comparator.compare(entry.getFile(), files[c]) > 0 |==> comparator.compare(entry.getFile(), files[c]) >= 0
5813:ROR:>(int,int):FALSE(int,int):org.apache.commons.io.monitor.FileAlterationObserver@checkAndNotify:328:comparator.compare(entry.getFile(), files[c]) > 0 |==> false
5814:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.io.monitor.FileAlterationObserver@checkAndNotify:328:c < files.length && comparator.compare(entry.getFile(), files[c]) > 0 |==> c < files.length == comparator.compare(entry.getFile(), files[c]) > 0
5815:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.io.monitor.FileAlterationObserver@checkAndNotify:328:c < files.length && comparator.compare(entry.getFile(), files[c]) > 0 |==> false
5816:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.io.monitor.FileAlterationObserver@checkAndNotify:328:c < files.length && comparator.compare(entry.getFile(), files[c]) > 0 |==> c < files.length
5817:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.io.monitor.FileAlterationObserver@checkAndNotify:328:c < files.length && comparator.compare(entry.getFile(), files[c]) > 0 |==> comparator.compare(entry.getFile(), files[c]) > 0
5818:STD:<CALL>:<NO-OP>:org.apache.commons.io.monitor.FileAlterationObserver@checkAndNotify:330:doCreate(current[c]) |==> <NO-OP>
5819:STD:<INC/DEC>:<NO-OP>:org.apache.commons.io.monitor.FileAlterationObserver@checkAndNotify:331:c++ |==> <NO-OP>
5820:STD:<CALL>:<NO-OP>:org.apache.commons.io.monitor.FileAlterationObserver@checkAndNotify:334:doMatch(entry, files[c]) |==> <NO-OP>
5821:STD:<CALL>:<NO-OP>:org.apache.commons.io.monitor.FileAlterationObserver@checkAndNotify:335:checkAndNotify(entry, entry.getChildren(), listFiles(files[c])) |==> <NO-OP>
5822:STD:<INC/DEC>:<NO-OP>:org.apache.commons.io.monitor.FileAlterationObserver@checkAndNotify:337:c++ |==> <NO-OP>
5823:STD:<CALL>:<NO-OP>:org.apache.commons.io.monitor.FileAlterationObserver@checkAndNotify:339:checkAndNotify(entry, entry.getChildren(), FileUtils.EMPTY_FILE_ARRAY) |==> <NO-OP>
5824:STD:<CALL>:<NO-OP>:org.apache.commons.io.monitor.FileAlterationObserver@checkAndNotify:340:doDelete(entry) |==> <NO-OP>
5825:ROR:<(int,int):!=(int,int):org.apache.commons.io.monitor.FileAlterationObserver@checkAndNotify:333:c < files.length |==> c != files.length
5826:ROR:<(int,int):<=(int,int):org.apache.commons.io.monitor.FileAlterationObserver@checkAndNotify:333:c < files.length |==> c <= files.length
5827:ROR:<(int,int):FALSE(int,int):org.apache.commons.io.monitor.FileAlterationObserver@checkAndNotify:333:c < files.length |==> false
5828:LVR:0:POS:org.apache.commons.io.monitor.FileAlterationObserver@checkAndNotify:333:0 |==> 1
5829:LVR:0:NEG:org.apache.commons.io.monitor.FileAlterationObserver@checkAndNotify:333:0 |==> -1
5830:ROR:==(int,int):<=(int,int):org.apache.commons.io.monitor.FileAlterationObserver@checkAndNotify:333:comparator.compare(entry.getFile(), files[c]) == 0 |==> comparator.compare(entry.getFile(), files[c]) <= 0
5831:ROR:==(int,int):>=(int,int):org.apache.commons.io.monitor.FileAlterationObserver@checkAndNotify:333:comparator.compare(entry.getFile(), files[c]) == 0 |==> comparator.compare(entry.getFile(), files[c]) >= 0
5832:ROR:==(int,int):FALSE(int,int):org.apache.commons.io.monitor.FileAlterationObserver@checkAndNotify:333:comparator.compare(entry.getFile(), files[c]) == 0 |==> false
5833:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.io.monitor.FileAlterationObserver@checkAndNotify:333:c < files.length && comparator.compare(entry.getFile(), files[c]) == 0 |==> c < files.length == (comparator.compare(entry.getFile(), files[c]) == 0)
5834:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.io.monitor.FileAlterationObserver@checkAndNotify:333:c < files.length && comparator.compare(entry.getFile(), files[c]) == 0 |==> false
5835:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.io.monitor.FileAlterationObserver@checkAndNotify:333:c < files.length && comparator.compare(entry.getFile(), files[c]) == 0 |==> c < files.length
5836:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.io.monitor.FileAlterationObserver@checkAndNotify:333:c < files.length && comparator.compare(entry.getFile(), files[c]) == 0 |==> comparator.compare(entry.getFile(), files[c]) == 0
5837:ROR:<(int,int):!=(int,int):org.apache.commons.io.monitor.FileAlterationObserver@checkAndNotify:343:c < files.length |==> c != files.length
5838:ROR:<(int,int):<=(int,int):org.apache.commons.io.monitor.FileAlterationObserver@checkAndNotify:343:c < files.length |==> c <= files.length
5839:ROR:<(int,int):FALSE(int,int):org.apache.commons.io.monitor.FileAlterationObserver@checkAndNotify:343:c < files.length |==> false
5840:STD:<CALL>:<NO-OP>:org.apache.commons.io.monitor.FileAlterationObserver@checkAndNotify:345:doCreate(current[c]) |==> <NO-OP>
5841:STD:<CALL>:<NO-OP>:org.apache.commons.io.monitor.FileAlterationObserver@checkAndNotify:347:parent.setChildren(current) |==> <NO-OP>
5842:STD:<CALL>:<NO-OP>:org.apache.commons.io.monitor.FileAlterationObserver@createFileEntry:359:entry.refresh(file) |==> <NO-OP>
5843:LVR:0:POS:org.apache.commons.io.monitor.FileAlterationObserver@createFileEntry:361:0 |==> 1
5844:LVR:0:NEG:org.apache.commons.io.monitor.FileAlterationObserver@createFileEntry:361:0 |==> -1
5845:ROR:>(int,int):!=(int,int):org.apache.commons.io.monitor.FileAlterationObserver@createFileEntry:361:files.length > 0 |==> files.length != 0
5846:ROR:>(int,int):>=(int,int):org.apache.commons.io.monitor.FileAlterationObserver@createFileEntry:361:files.length > 0 |==> files.length >= 0
5847:ROR:>(int,int):FALSE(int,int):org.apache.commons.io.monitor.FileAlterationObserver@createFileEntry:361:files.length > 0 |==> false
5848:LVR:0:POS:org.apache.commons.io.monitor.FileAlterationObserver@createFileEntry:362:0 |==> 1
5849:LVR:0:NEG:org.apache.commons.io.monitor.FileAlterationObserver@createFileEntry:362:0 |==> -1
5850:ROR:<(int,int):!=(int,int):org.apache.commons.io.monitor.FileAlterationObserver@createFileEntry:362:i < files.length |==> i != files.length
5851:ROR:<(int,int):<=(int,int):org.apache.commons.io.monitor.FileAlterationObserver@createFileEntry:362:i < files.length |==> i <= files.length
5852:ROR:<(int,int):FALSE(int,int):org.apache.commons.io.monitor.FileAlterationObserver@createFileEntry:362:i < files.length |==> false
5853:STD:<CALL>:<NO-OP>:org.apache.commons.io.monitor.FileAlterationObserver@createFileEntry:365:entry.setChildren(children) |==> <NO-OP>
5854:STD:<CALL>:<NO-OP>:org.apache.commons.io.monitor.FileAlterationObserver@doCreate:377:listener.onDirectoryCreate(entry.getFile()) |==> <NO-OP>
5855:STD:<CALL>:<NO-OP>:org.apache.commons.io.monitor.FileAlterationObserver@doCreate:379:listener.onFileCreate(entry.getFile()) |==> <NO-OP>
5856:COR:entry.isDirectory():TRUE:org.apache.commons.io.monitor.FileAlterationObserver@doCreate:376:entry.isDirectory() |==> false
5857:COR:entry.isDirectory():FALSE:org.apache.commons.io.monitor.FileAlterationObserver@doCreate:376:entry.isDirectory() |==> true
5858:STD:<CALL>:<NO-OP>:org.apache.commons.io.monitor.FileAlterationObserver@doCreate:384:doCreate(aChildren) |==> <NO-OP>
5859:STD:<CALL>:<NO-OP>:org.apache.commons.io.monitor.FileAlterationObserver@doMatch:398:listener.onDirectoryChange(file) |==> <NO-OP>
5860:STD:<CALL>:<NO-OP>:org.apache.commons.io.monitor.FileAlterationObserver@doMatch:400:listener.onFileChange(file) |==> <NO-OP>
5861:COR:entry.isDirectory():TRUE:org.apache.commons.io.monitor.FileAlterationObserver@doMatch:397:entry.isDirectory() |==> false
5862:COR:entry.isDirectory():FALSE:org.apache.commons.io.monitor.FileAlterationObserver@doMatch:397:entry.isDirectory() |==> true
5863:COR:entry.refresh(file):TRUE:org.apache.commons.io.monitor.FileAlterationObserver@doMatch:395:entry.refresh(file) |==> false
5864:COR:entry.refresh(file):FALSE:org.apache.commons.io.monitor.FileAlterationObserver@doMatch:395:entry.refresh(file) |==> true
5865:STD:<CALL>:<NO-OP>:org.apache.commons.io.monitor.FileAlterationObserver@doDelete:414:listener.onDirectoryDelete(entry.getFile()) |==> <NO-OP>
5866:STD:<CALL>:<NO-OP>:org.apache.commons.io.monitor.FileAlterationObserver@doDelete:416:listener.onFileDelete(entry.getFile()) |==> <NO-OP>
5867:COR:entry.isDirectory():TRUE:org.apache.commons.io.monitor.FileAlterationObserver@doDelete:413:entry.isDirectory() |==> false
5868:COR:entry.isDirectory():FALSE:org.apache.commons.io.monitor.FileAlterationObserver@doDelete:413:entry.isDirectory() |==> true
5869:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.io.monitor.FileAlterationObserver@listFiles:431:fileFilter == null |==> false
5870:COR:file.isDirectory():TRUE:org.apache.commons.io.monitor.FileAlterationObserver@listFiles:430:file.isDirectory() |==> false
5871:COR:file.isDirectory():FALSE:org.apache.commons.io.monitor.FileAlterationObserver@listFiles:430:file.isDirectory() |==> true
5872:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.io.monitor.FileAlterationObserver@listFiles:433:children == null |==> false
5873:STD:<CALL>:<NO-OP>:org.apache.commons.io.monitor.FileAlterationObserver@listFiles:437:Arrays.sort(children, comparator) |==> <NO-OP>
5874:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.apache.commons.io.monitor.FileAlterationObserver@listFiles:436:comparator != null |==> true
5875:LVR:POS:0:org.apache.commons.io.monitor.FileAlterationObserver@listFiles:436:1 |==> 0
5876:LVR:POS:NEG:org.apache.commons.io.monitor.FileAlterationObserver@listFiles:436:1 |==> -1
5877:ROR:>(int,int):!=(int,int):org.apache.commons.io.monitor.FileAlterationObserver@listFiles:436:children.length > 1 |==> children.length != 1
5878:ROR:>(int,int):>=(int,int):org.apache.commons.io.monitor.FileAlterationObserver@listFiles:436:children.length > 1 |==> children.length >= 1
5879:ROR:>(int,int):FALSE(int,int):org.apache.commons.io.monitor.FileAlterationObserver@listFiles:436:children.length > 1 |==> false
5880:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.io.monitor.FileAlterationObserver@listFiles:436:comparator != null && children.length > 1 |==> comparator != null == children.length > 1
5881:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.io.monitor.FileAlterationObserver@listFiles:436:comparator != null && children.length > 1 |==> false
5882:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.io.monitor.FileAlterationObserver@listFiles:436:comparator != null && children.length > 1 |==> comparator != null
5883:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.io.monitor.FileAlterationObserver@listFiles:436:comparator != null && children.length > 1 |==> children.length > 1
5884:STD:<CALL>:<NO-OP>:org.apache.commons.io.monitor.FileAlterationObserver@toString:450:builder.append(getClass().getSimpleName()) |==> <NO-OP>
5885:STD:<CALL>:<NO-OP>:org.apache.commons.io.monitor.FileAlterationObserver@toString:451:builder.append("[file=\'") |==> <NO-OP>
5886:STD:<CALL>:<NO-OP>:org.apache.commons.io.monitor.FileAlterationObserver@toString:452:builder.append(getDirectory().getPath()) |==> <NO-OP>
5887:STD:<CALL>:<NO-OP>:org.apache.commons.io.monitor.FileAlterationObserver@toString:453:builder.append('\'') |==> <NO-OP>
5888:STD:<CALL>:<NO-OP>:org.apache.commons.io.monitor.FileAlterationObserver@toString:455:builder.append(", ") |==> <NO-OP>
5889:STD:<CALL>:<NO-OP>:org.apache.commons.io.monitor.FileAlterationObserver@toString:456:builder.append(fileFilter.toString()) |==> <NO-OP>
5890:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.apache.commons.io.monitor.FileAlterationObserver@toString:454:fileFilter != null |==> true
5891:STD:<CALL>:<NO-OP>:org.apache.commons.io.monitor.FileAlterationObserver@toString:458:builder.append(", listeners=") |==> <NO-OP>
5892:STD:<CALL>:<NO-OP>:org.apache.commons.io.monitor.FileAlterationObserver@toString:459:builder.append(listeners.size()) |==> <NO-OP>
5893:STD:<CALL>:<NO-OP>:org.apache.commons.io.monitor.FileAlterationObserver@toString:460:builder.append("]") |==> <NO-OP>
5894:LVR:0:POS:org.apache.commons.io.monitor.FileEntry:44:0 |==> 1
5895:LVR:0:NEG:org.apache.commons.io.monitor.FileEntry:44:0 |==> -1
5896:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.io.monitor.FileEntry@<init>:71:file == null |==> false
5897:LVR:FALSE:TRUE:org.apache.commons.io.monitor.FileEntry@refresh:104:false |==> true
5898:LVR:0:POS:org.apache.commons.io.monitor.FileEntry@refresh:105:0 |==> 1
5899:LVR:0:NEG:org.apache.commons.io.monitor.FileEntry@refresh:105:0 |==> -1
5900:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.io.monitor.FileEntry@refresh:106:exists && !directory |==> exists == !directory
5901:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.io.monitor.FileEntry@refresh:106:exists && !directory |==> false
5902:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.io.monitor.FileEntry@refresh:106:exists && !directory |==> exists
5903:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.io.monitor.FileEntry@refresh:106:exists && !directory |==> !directory
5904:LVR:0:POS:org.apache.commons.io.monitor.FileEntry@refresh:106:0 |==> 1
5905:LVR:0:NEG:org.apache.commons.io.monitor.FileEntry@refresh:106:0 |==> -1
5906:ROR:!=(boolean,boolean):LHS(boolean,boolean):org.apache.commons.io.monitor.FileEntry@refresh:109:exists != origExists |==> exists
5907:ROR:!=(boolean,boolean):RHS(boolean,boolean):org.apache.commons.io.monitor.FileEntry@refresh:109:exists != origExists |==> origExists
5908:ROR:!=(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.io.monitor.FileEntry@refresh:109:exists != origExists |==> true
5909:ROR:!=(long,long):<(long,long):org.apache.commons.io.monitor.FileEntry@refresh:110:lastModified != origLastModified |==> lastModified < origLastModified
5910:ROR:!=(long,long):>(long,long):org.apache.commons.io.monitor.FileEntry@refresh:110:lastModified != origLastModified |==> lastModified > origLastModified
5911:ROR:!=(long,long):TRUE(long,long):org.apache.commons.io.monitor.FileEntry@refresh:110:lastModified != origLastModified |==> true
5912:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.io.monitor.FileEntry@refresh:109:exists != origExists || lastModified != origLastModified |==> exists != origExists != (lastModified != origLastModified)
5913:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.io.monitor.FileEntry@refresh:109:exists != origExists || lastModified != origLastModified |==> exists != origExists
5914:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.io.monitor.FileEntry@refresh:110:exists != origExists || lastModified != origLastModified |==> lastModified != origLastModified
5915:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.io.monitor.FileEntry@refresh:109:exists != origExists || lastModified != origLastModified |==> true
5916:ROR:!=(boolean,boolean):LHS(boolean,boolean):org.apache.commons.io.monitor.FileEntry@refresh:111:directory != origDirectory |==> directory
5917:ROR:!=(boolean,boolean):RHS(boolean,boolean):org.apache.commons.io.monitor.FileEntry@refresh:111:directory != origDirectory |==> origDirectory
5918:ROR:!=(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.io.monitor.FileEntry@refresh:111:directory != origDirectory |==> true
5919:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.io.monitor.FileEntry@refresh:109:exists != origExists || lastModified != origLastModified || directory != origDirectory |==> (exists != origExists || lastModified != origLastModified) != (directory != origDirectory)
5920:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.io.monitor.FileEntry@refresh:109:exists != origExists || lastModified != origLastModified || directory != origDirectory |==> exists != origExists || lastModified != origLastModified
5921:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.io.monitor.FileEntry@refresh:111:exists != origExists || lastModified != origLastModified || directory != origDirectory |==> directory != origDirectory
5922:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.io.monitor.FileEntry@refresh:110:exists != origExists || lastModified != origLastModified || directory != origDirectory |==> true
5923:ROR:!=(long,long):<(long,long):org.apache.commons.io.monitor.FileEntry@refresh:112:length != origLength |==> length < origLength
5924:ROR:!=(long,long):>(long,long):org.apache.commons.io.monitor.FileEntry@refresh:112:length != origLength |==> length > origLength
5925:ROR:!=(long,long):TRUE(long,long):org.apache.commons.io.monitor.FileEntry@refresh:112:length != origLength |==> true
5926:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.io.monitor.FileEntry@refresh:109:exists != origExists || lastModified != origLastModified || directory != origDirectory || length != origLength |==> (exists != origExists || lastModified != origLastModified || directory != origDirectory) != (length != origLength)
5927:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.io.monitor.FileEntry@refresh:109:exists != origExists || lastModified != origLastModified || directory != origDirectory || length != origLength |==> exists != origExists || lastModified != origLastModified || directory != origDirectory
5928:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.io.monitor.FileEntry@refresh:112:exists != origExists || lastModified != origLastModified || directory != origDirectory || length != origLength |==> length != origLength
5929:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.io.monitor.FileEntry@refresh:111:exists != origExists || lastModified != origLastModified || directory != origDirectory || length != origLength |==> true
5930:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.io.monitor.FileEntry@getLevel:143:parent == null |==> false
5931:LVR:0:POS:org.apache.commons.io.monitor.FileEntry@getLevel:143:0 |==> 1
5932:LVR:0:NEG:org.apache.commons.io.monitor.FileEntry@getLevel:143:0 |==> -1
5933:LVR:POS:0:org.apache.commons.io.monitor.FileEntry@getLevel:143:1 |==> 0
5934:LVR:POS:NEG:org.apache.commons.io.monitor.FileEntry@getLevel:143:1 |==> -1
5935:AOR:+(int,int):%(int,int):org.apache.commons.io.monitor.FileEntry@getLevel:143:parent.getLevel() + 1 |==> parent.getLevel() % 1
5936:AOR:+(int,int):*(int,int):org.apache.commons.io.monitor.FileEntry@getLevel:143:parent.getLevel() + 1 |==> parent.getLevel() * 1
5937:AOR:+(int,int):-(int,int):org.apache.commons.io.monitor.FileEntry@getLevel:143:parent.getLevel() + 1 |==> parent.getLevel() - 1
5938:AOR:+(int,int):/(int,int):org.apache.commons.io.monitor.FileEntry@getLevel:143:parent.getLevel() + 1 |==> parent.getLevel() / 1
5939:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.apache.commons.io.monitor.FileEntry@getChildren:154:children != null |==> true
5940:LVR:FALSE:TRUE:org.apache.commons.io.monitor.FileAlterationMonitor:37:false |==> true
5941:LVR:POS:0:org.apache.commons.io.monitor.FileAlterationMonitor@<init>:43:10000 |==> 0
5942:LVR:POS:NEG:org.apache.commons.io.monitor.FileAlterationMonitor@<init>:43:10000 |==> -10000
5943:STD:<CALL>:<NO-OP>:org.apache.commons.io.monitor.FileAlterationMonitor@<init>:67:addObserver(observer) |==> <NO-OP>
5944:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.apache.commons.io.monitor.FileAlterationMonitor@<init>:65:observers != null |==> true
5945:STD:<CALL>:<NO-OP>:org.apache.commons.io.monitor.FileAlterationMonitor@addObserver:97:observers.add(observer) |==> <NO-OP>
5946:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.apache.commons.io.monitor.FileAlterationMonitor@addObserver:96:observer != null |==> true
5947:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.apache.commons.io.monitor.FileAlterationMonitor@removeObserver:107:observer != null |==> true
5948:COR:running:TRUE:org.apache.commons.io.monitor.FileAlterationMonitor@start:129:running |==> false
5949:COR:running:FALSE:org.apache.commons.io.monitor.FileAlterationMonitor@start:129:running |==> true
5950:STD:<CALL>:<NO-OP>:org.apache.commons.io.monitor.FileAlterationMonitor@start:133:observer.initialize() |==> <NO-OP>
5951:LVR:TRUE:FALSE:org.apache.commons.io.monitor.FileAlterationMonitor@start:135:true |==> false
5952:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.apache.commons.io.monitor.FileAlterationMonitor@start:136:threadFactory != null |==> true
5953:STD:<CALL>:<NO-OP>:org.apache.commons.io.monitor.FileAlterationMonitor@start:141:thread.start() |==> <NO-OP>
5954:STD:<CALL>:<NO-OP>:org.apache.commons.io.monitor.FileAlterationMonitor@stop:150:stop(interval) |==> <NO-OP>
5955:LVR:FALSE:TRUE:org.apache.commons.io.monitor.FileAlterationMonitor@stop:162:false |==> true
5956:ROR:==(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.io.monitor.FileAlterationMonitor@stop:162:running == false |==> false
5957:ROR:==(boolean,boolean):LHS(boolean,boolean):org.apache.commons.io.monitor.FileAlterationMonitor@stop:162:running == false |==> running
5958:ROR:==(boolean,boolean):RHS(boolean,boolean):org.apache.commons.io.monitor.FileAlterationMonitor@stop:162:running == false |==> false
5959:LVR:FALSE:TRUE:org.apache.commons.io.monitor.FileAlterationMonitor@stop:165:false |==> true
5960:STD:<CALL>:<NO-OP>:org.apache.commons.io.monitor.FileAlterationMonitor@stop:167:thread.join(stopInterval) |==> <NO-OP>
5961:STD:<CALL>:<NO-OP>:org.apache.commons.io.monitor.FileAlterationMonitor@stop:169:Thread.currentThread().interrupt() |==> <NO-OP>
5962:STD:<CALL>:<NO-OP>:org.apache.commons.io.monitor.FileAlterationMonitor@stop:172:observer.destroy() |==> <NO-OP>
5963:STD:<CALL>:<NO-OP>:org.apache.commons.io.monitor.FileAlterationMonitor@run:182:observer.checkAndNotify() |==> <NO-OP>
5964:STD:<CALL>:<NO-OP>:org.apache.commons.io.monitor.FileAlterationMonitor@run:188:Thread.sleep(interval) |==> <NO-OP>
5965:LVR:0:POS:org.apache.commons.io.output.ByteArrayOutputStream:57:0 |==> 1
5966:LVR:0:NEG:org.apache.commons.io.output.ByteArrayOutputStream:57:0 |==> -1
5967:LVR:POS:0:org.apache.commons.io.output.ByteArrayOutputStream@<init>:75:1024 |==> 0
5968:LVR:POS:NEG:org.apache.commons.io.output.ByteArrayOutputStream@<init>:75:1024 |==> -1024
5969:LVR:0:POS:org.apache.commons.io.output.ByteArrayOutputStream@<init>:86:0 |==> 1
5970:LVR:0:NEG:org.apache.commons.io.output.ByteArrayOutputStream@<init>:86:0 |==> -1
5971:ROR:<(int,int):!=(int,int):org.apache.commons.io.output.ByteArrayOutputStream@<init>:86:size < 0 |==> size != 0
5972:ROR:<(int,int):<=(int,int):org.apache.commons.io.output.ByteArrayOutputStream@<init>:86:size < 0 |==> size <= 0
5973:ROR:<(int,int):FALSE(int,int):org.apache.commons.io.output.ByteArrayOutputStream@<init>:86:size < 0 |==> false
5974:STD:<CALL>:<NO-OP>:org.apache.commons.io.output.ByteArrayOutputStream@<init>:91:needNewBuffer(size) |==> <NO-OP>
5975:STD:<ASSIGN>:<NO-OP>:org.apache.commons.io.output.ByteArrayOutputStream@needNewBuffer:104:filledBufferSum += currentBuffer.length |==> <NO-OP>
5976:STD:<INC/DEC>:<NO-OP>:org.apache.commons.io.output.ByteArrayOutputStream@needNewBuffer:106:currentBufferIndex++ |==> <NO-OP>
5977:LVR:0:POS:org.apache.commons.io.output.ByteArrayOutputStream@needNewBuffer:113:0 |==> 1
5978:LVR:0:NEG:org.apache.commons.io.output.ByteArrayOutputStream@needNewBuffer:113:0 |==> -1
5979:LVR:POS:0:org.apache.commons.io.output.ByteArrayOutputStream@needNewBuffer:116:1 |==> 0
5980:LVR:POS:NEG:org.apache.commons.io.output.ByteArrayOutputStream@needNewBuffer:116:1 |==> -1
5981:SOR:<<(int,int):>>(int,int):org.apache.commons.io.output.ByteArrayOutputStream@needNewBuffer:116:currentBuffer.length << 1 |==> currentBuffer.length >> 1
5982:SOR:<<(int,int):>>>(int,int):org.apache.commons.io.output.ByteArrayOutputStream@needNewBuffer:116:currentBuffer.length << 1 |==> currentBuffer.length >>> 1
5983:AOR:-(int,int):%(int,int):org.apache.commons.io.output.ByteArrayOutputStream@needNewBuffer:117:newcount - filledBufferSum |==> newcount % filledBufferSum
5984:AOR:-(int,int):*(int,int):org.apache.commons.io.output.ByteArrayOutputStream@needNewBuffer:117:newcount - filledBufferSum |==> newcount * filledBufferSum
5985:AOR:-(int,int):+(int,int):org.apache.commons.io.output.ByteArrayOutputStream@needNewBuffer:117:newcount - filledBufferSum |==> newcount + filledBufferSum
5986:AOR:-(int,int):/(int,int):org.apache.commons.io.output.ByteArrayOutputStream@needNewBuffer:117:newcount - filledBufferSum |==> newcount / filledBufferSum
5987:STD:<ASSIGN>:<NO-OP>:org.apache.commons.io.output.ByteArrayOutputStream@needNewBuffer:118:filledBufferSum += currentBuffer.length |==> <NO-OP>
5988:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.io.output.ByteArrayOutputStream@needNewBuffer:111:currentBuffer == null |==> false
5989:STD:<INC/DEC>:<NO-OP>:org.apache.commons.io.output.ByteArrayOutputStream@needNewBuffer:121:currentBufferIndex++ |==> <NO-OP>
5990:STD:<CALL>:<NO-OP>:org.apache.commons.io.output.ByteArrayOutputStream@needNewBuffer:123:buffers.add(currentBuffer) |==> <NO-OP>
5991:LVR:POS:0:org.apache.commons.io.output.ByteArrayOutputStream@needNewBuffer:102:1 |==> 0
5992:LVR:POS:NEG:org.apache.commons.io.output.ByteArrayOutputStream@needNewBuffer:102:1 |==> -1
5993:AOR:-(int,int):%(int,int):org.apache.commons.io.output.ByteArrayOutputStream@needNewBuffer:102:buffers.size() - 1 |==> buffers.size() % 1
5994:AOR:-(int,int):*(int,int):org.apache.commons.io.output.ByteArrayOutputStream@needNewBuffer:102:buffers.size() - 1 |==> buffers.size() * 1
5995:AOR:-(int,int):+(int,int):org.apache.commons.io.output.ByteArrayOutputStream@needNewBuffer:102:buffers.size() - 1 |==> buffers.size() + 1
5996:AOR:-(int,int):/(int,int):org.apache.commons.io.output.ByteArrayOutputStream@needNewBuffer:102:buffers.size() - 1 |==> buffers.size() / 1
5997:ROR:<(int,int):!=(int,int):org.apache.commons.io.output.ByteArrayOutputStream@needNewBuffer:102:currentBufferIndex < buffers.size() - 1 |==> currentBufferIndex != buffers.size() - 1
5998:ROR:<(int,int):<=(int,int):org.apache.commons.io.output.ByteArrayOutputStream@needNewBuffer:102:currentBufferIndex < buffers.size() - 1 |==> currentBufferIndex <= buffers.size() - 1
5999:ROR:<(int,int):FALSE(int,int):org.apache.commons.io.output.ByteArrayOutputStream@needNewBuffer:102:currentBufferIndex < buffers.size() - 1 |==> false
6000:LVR:0:POS:org.apache.commons.io.output.ByteArrayOutputStream@write:141:0 |==> 1
6001:LVR:0:NEG:org.apache.commons.io.output.ByteArrayOutputStream@write:141:0 |==> -1
6002:ROR:==(int,int):<=(int,int):org.apache.commons.io.output.ByteArrayOutputStream@write:141:len == 0 |==> len <= 0
6003:ROR:==(int,int):>=(int,int):org.apache.commons.io.output.ByteArrayOutputStream@write:141:len == 0 |==> len >= 0
6004:ROR:==(int,int):FALSE(int,int):org.apache.commons.io.output.ByteArrayOutputStream@write:141:len == 0 |==> false
6005:LVR:0:POS:org.apache.commons.io.output.ByteArrayOutputStream@write:135:0 |==> 1
6006:LVR:0:NEG:org.apache.commons.io.output.ByteArrayOutputStream@write:135:0 |==> -1
6007:ROR:<(int,int):!=(int,int):org.apache.commons.io.output.ByteArrayOutputStream@write:135:off < 0 |==> off != 0
6008:ROR:<(int,int):<=(int,int):org.apache.commons.io.output.ByteArrayOutputStream@write:135:off < 0 |==> off <= 0
6009:ROR:<(int,int):FALSE(int,int):org.apache.commons.io.output.ByteArrayOutputStream@write:135:off < 0 |==> false
6010:ROR:>(int,int):!=(int,int):org.apache.commons.io.output.ByteArrayOutputStream@write:136:off > b.length |==> off != b.length
6011:ROR:>(int,int):>=(int,int):org.apache.commons.io.output.ByteArrayOutputStream@write:136:off > b.length |==> off >= b.length
6012:ROR:>(int,int):FALSE(int,int):org.apache.commons.io.output.ByteArrayOutputStream@write:136:off > b.length |==> false
6013:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.io.output.ByteArrayOutputStream@write:135:(off < 0) || (off > b.length) |==> (off < 0) != (off > b.length)
6014:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.io.output.ByteArrayOutputStream@write:135:(off < 0) || (off > b.length) |==> (off < 0)
6015:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.io.output.ByteArrayOutputStream@write:136:(off < 0) || (off > b.length) |==> (off > b.length)
6016:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.io.output.ByteArrayOutputStream@write:136:(off < 0) || (off > b.length) |==> true
6017:LVR:0:POS:org.apache.commons.io.output.ByteArrayOutputStream@write:137:0 |==> 1
6018:LVR:0:NEG:org.apache.commons.io.output.ByteArrayOutputStream@write:137:0 |==> -1
6019:ROR:<(int,int):!=(int,int):org.apache.commons.io.output.ByteArrayOutputStream@write:137:len < 0 |==> len != 0
6020:ROR:<(int,int):<=(int,int):org.apache.commons.io.output.ByteArrayOutputStream@write:137:len < 0 |==> len <= 0
6021:ROR:<(int,int):FALSE(int,int):org.apache.commons.io.output.ByteArrayOutputStream@write:137:len < 0 |==> false
6022:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.io.output.ByteArrayOutputStream@write:135:(off < 0) || (off > b.length) || (len < 0) |==> ((off < 0) || (off > b.length)) != (len < 0)
6023:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.io.output.ByteArrayOutputStream@write:135:(off < 0) || (off > b.length) || (len < 0) |==> (off < 0) || (off > b.length)
6024:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.io.output.ByteArrayOutputStream@write:137:(off < 0) || (off > b.length) || (len < 0) |==> (len < 0)
6025:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.io.output.ByteArrayOutputStream@write:137:(off < 0) || (off > b.length) || (len < 0) |==> true
6026:AOR:+(int,int):%(int,int):org.apache.commons.io.output.ByteArrayOutputStream@write:138:off + len |==> off % len
6027:AOR:+(int,int):*(int,int):org.apache.commons.io.output.ByteArrayOutputStream@write:138:off + len |==> off * len
6028:AOR:+(int,int):-(int,int):org.apache.commons.io.output.ByteArrayOutputStream@write:138:off + len |==> off - len
6029:AOR:+(int,int):/(int,int):org.apache.commons.io.output.ByteArrayOutputStream@write:138:off + len |==> off / len
6030:ROR:>(int,int):!=(int,int):org.apache.commons.io.output.ByteArrayOutputStream@write:138:(off + len) > b.length |==> (off + len) != b.length
6031:ROR:>(int,int):>=(int,int):org.apache.commons.io.output.ByteArrayOutputStream@write:138:(off + len) > b.length |==> (off + len) >= b.length
6032:ROR:>(int,int):FALSE(int,int):org.apache.commons.io.output.ByteArrayOutputStream@write:138:(off + len) > b.length |==> false
6033:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.io.output.ByteArrayOutputStream@write:135:(off < 0) || (off > b.length) || (len < 0) || ((off + len) > b.length) |==> ((off < 0) || (off > b.length) || (len < 0)) != ((off + len) > b.length)
6034:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.io.output.ByteArrayOutputStream@write:135:(off < 0) || (off > b.length) || (len < 0) || ((off + len) > b.length) |==> (off < 0) || (off > b.length) || (len < 0)
6035:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.io.output.ByteArrayOutputStream@write:138:(off < 0) || (off > b.length) || (len < 0) || ((off + len) > b.length) |==> ((off + len) > b.length)
6036:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.io.output.ByteArrayOutputStream@write:138:(off < 0) || (off > b.length) || (len < 0) || ((off + len) > b.length) |==> true
6037:AOR:+(int,int):%(int,int):org.apache.commons.io.output.ByteArrayOutputStream@write:139:off + len |==> off % len
6038:AOR:+(int,int):*(int,int):org.apache.commons.io.output.ByteArrayOutputStream@write:139:off + len |==> off * len
6039:AOR:+(int,int):-(int,int):org.apache.commons.io.output.ByteArrayOutputStream@write:139:off + len |==> off - len
6040:AOR:+(int,int):/(int,int):org.apache.commons.io.output.ByteArrayOutputStream@write:139:off + len |==> off / len
6041:LVR:0:POS:org.apache.commons.io.output.ByteArrayOutputStream@write:139:0 |==> 1
6042:LVR:0:NEG:org.apache.commons.io.output.ByteArrayOutputStream@write:139:0 |==> -1
6043:ROR:<(int,int):!=(int,int):org.apache.commons.io.output.ByteArrayOutputStream@write:139:(off + len) < 0 |==> (off + len) != 0
6044:ROR:<(int,int):<=(int,int):org.apache.commons.io.output.ByteArrayOutputStream@write:139:(off + len) < 0 |==> (off + len) <= 0
6045:ROR:<(int,int):FALSE(int,int):org.apache.commons.io.output.ByteArrayOutputStream@write:139:(off + len) < 0 |==> false
6046:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.io.output.ByteArrayOutputStream@write:135:(off < 0) || (off > b.length) || (len < 0) || ((off + len) > b.length) || ((off + len) < 0) |==> ((off < 0) || (off > b.length) || (len < 0) || ((off + len) > b.length)) != ((off + len) < 0)
6047:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.io.output.ByteArrayOutputStream@write:135:(off < 0) || (off > b.length) || (len < 0) || ((off + len) > b.length) || ((off + len) < 0) |==> (off < 0) || (off > b.length) || (len < 0) || ((off + len) > b.length)
6048:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.io.output.ByteArrayOutputStream@write:139:(off < 0) || (off > b.length) || (len < 0) || ((off + len) > b.length) || ((off + len) < 0) |==> ((off + len) < 0)
6049:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.io.output.ByteArrayOutputStream@write:139:(off < 0) || (off > b.length) || (len < 0) || ((off + len) > b.length) || ((off + len) < 0) |==> true
6050:AOR:+(int,int):%(int,int):org.apache.commons.io.output.ByteArrayOutputStream@write:145:count + len |==> count % len
6051:AOR:+(int,int):*(int,int):org.apache.commons.io.output.ByteArrayOutputStream@write:145:count + len |==> count * len
6052:AOR:+(int,int):-(int,int):org.apache.commons.io.output.ByteArrayOutputStream@write:145:count + len |==> count - len
6053:AOR:+(int,int):/(int,int):org.apache.commons.io.output.ByteArrayOutputStream@write:145:count + len |==> count / len
6054:AOR:-(int,int):%(int,int):org.apache.commons.io.output.ByteArrayOutputStream@write:147:count - filledBufferSum |==> count % filledBufferSum
6055:AOR:-(int,int):*(int,int):org.apache.commons.io.output.ByteArrayOutputStream@write:147:count - filledBufferSum |==> count * filledBufferSum
6056:AOR:-(int,int):+(int,int):org.apache.commons.io.output.ByteArrayOutputStream@write:147:count - filledBufferSum |==> count + filledBufferSum
6057:AOR:-(int,int):/(int,int):org.apache.commons.io.output.ByteArrayOutputStream@write:147:count - filledBufferSum |==> count / filledBufferSum
6058:LVR:0:POS:org.apache.commons.io.output.ByteArrayOutputStream@write:148:0 |==> 1
6059:LVR:0:NEG:org.apache.commons.io.output.ByteArrayOutputStream@write:148:0 |==> -1
6060:ROR:>(int,int):!=(int,int):org.apache.commons.io.output.ByteArrayOutputStream@write:148:remaining > 0 |==> remaining != 0
6061:ROR:>(int,int):>=(int,int):org.apache.commons.io.output.ByteArrayOutputStream@write:148:remaining > 0 |==> remaining >= 0
6062:ROR:>(int,int):FALSE(int,int):org.apache.commons.io.output.ByteArrayOutputStream@write:148:remaining > 0 |==> false
6063:AOR:-(int,int):%(int,int):org.apache.commons.io.output.ByteArrayOutputStream@write:149:currentBuffer.length - inBufferPos |==> currentBuffer.length % inBufferPos
6064:AOR:-(int,int):*(int,int):org.apache.commons.io.output.ByteArrayOutputStream@write:149:currentBuffer.length - inBufferPos |==> currentBuffer.length * inBufferPos
6065:AOR:-(int,int):+(int,int):org.apache.commons.io.output.ByteArrayOutputStream@write:149:currentBuffer.length - inBufferPos |==> currentBuffer.length + inBufferPos
6066:AOR:-(int,int):/(int,int):org.apache.commons.io.output.ByteArrayOutputStream@write:149:currentBuffer.length - inBufferPos |==> currentBuffer.length / inBufferPos
6067:AOR:+(int,int):%(int,int):org.apache.commons.io.output.ByteArrayOutputStream@write:150:off + len |==> off % len
6068:AOR:+(int,int):*(int,int):org.apache.commons.io.output.ByteArrayOutputStream@write:150:off + len |==> off * len
6069:AOR:+(int,int):-(int,int):org.apache.commons.io.output.ByteArrayOutputStream@write:150:off + len |==> off - len
6070:AOR:+(int,int):/(int,int):org.apache.commons.io.output.ByteArrayOutputStream@write:150:off + len |==> off / len
6071:AOR:-(int,int):%(int,int):org.apache.commons.io.output.ByteArrayOutputStream@write:150:off + len - remaining |==> (off + len) % remaining
6072:AOR:-(int,int):*(int,int):org.apache.commons.io.output.ByteArrayOutputStream@write:150:off + len - remaining |==> (off + len) * remaining
6073:AOR:-(int,int):+(int,int):org.apache.commons.io.output.ByteArrayOutputStream@write:150:off + len - remaining |==> off + len + remaining
6074:AOR:-(int,int):/(int,int):org.apache.commons.io.output.ByteArrayOutputStream@write:150:off + len - remaining |==> (off + len) / remaining
6075:STD:<CALL>:<NO-OP>:org.apache.commons.io.output.ByteArrayOutputStream@write:150:System.arraycopy(b, off + len - remaining, currentBuffer, inBufferPos, part) |==> <NO-OP>
6076:STD:<ASSIGN>:<NO-OP>:org.apache.commons.io.output.ByteArrayOutputStream@write:151:remaining -= part |==> <NO-OP>
6077:STD:<CALL>:<NO-OP>:org.apache.commons.io.output.ByteArrayOutputStream@write:153:needNewBuffer(newcount) |==> <NO-OP>
6078:LVR:0:POS:org.apache.commons.io.output.ByteArrayOutputStream@write:154:0 |==> 1
6079:LVR:0:NEG:org.apache.commons.io.output.ByteArrayOutputStream@write:154:0 |==> -1
6080:LVR:0:POS:org.apache.commons.io.output.ByteArrayOutputStream@write:152:0 |==> 1
6081:LVR:0:NEG:org.apache.commons.io.output.ByteArrayOutputStream@write:152:0 |==> -1
6082:ROR:>(int,int):!=(int,int):org.apache.commons.io.output.ByteArrayOutputStream@write:152:remaining > 0 |==> remaining != 0
6083:ROR:>(int,int):>=(int,int):org.apache.commons.io.output.ByteArrayOutputStream@write:152:remaining > 0 |==> remaining >= 0
6084:ROR:>(int,int):FALSE(int,int):org.apache.commons.io.output.ByteArrayOutputStream@write:152:remaining > 0 |==> false
6085:AOR:-(int,int):%(int,int):org.apache.commons.io.output.ByteArrayOutputStream@write:167:count - filledBufferSum |==> count % filledBufferSum
6086:AOR:-(int,int):*(int,int):org.apache.commons.io.output.ByteArrayOutputStream@write:167:count - filledBufferSum |==> count * filledBufferSum
6087:AOR:-(int,int):+(int,int):org.apache.commons.io.output.ByteArrayOutputStream@write:167:count - filledBufferSum |==> count + filledBufferSum
6088:AOR:-(int,int):/(int,int):org.apache.commons.io.output.ByteArrayOutputStream@write:167:count - filledBufferSum |==> count / filledBufferSum
6089:LVR:POS:0:org.apache.commons.io.output.ByteArrayOutputStream@write:169:1 |==> 0
6090:LVR:POS:NEG:org.apache.commons.io.output.ByteArrayOutputStream@write:169:1 |==> -1
6091:AOR:+(int,int):%(int,int):org.apache.commons.io.output.ByteArrayOutputStream@write:169:count + 1 |==> count % 1
6092:AOR:+(int,int):*(int,int):org.apache.commons.io.output.ByteArrayOutputStream@write:169:count + 1 |==> count * 1
6093:AOR:+(int,int):-(int,int):org.apache.commons.io.output.ByteArrayOutputStream@write:169:count + 1 |==> count - 1
6094:AOR:+(int,int):/(int,int):org.apache.commons.io.output.ByteArrayOutputStream@write:169:count + 1 |==> count / 1
6095:STD:<CALL>:<NO-OP>:org.apache.commons.io.output.ByteArrayOutputStream@write:169:needNewBuffer(count + 1) |==> <NO-OP>
6096:LVR:0:POS:org.apache.commons.io.output.ByteArrayOutputStream@write:170:0 |==> 1
6097:LVR:0:NEG:org.apache.commons.io.output.ByteArrayOutputStream@write:170:0 |==> -1
6098:ROR:==(int,int):<=(int,int):org.apache.commons.io.output.ByteArrayOutputStream@write:168:inBufferPos == currentBuffer.length |==> inBufferPos <= currentBuffer.length
6099:ROR:==(int,int):>=(int,int):org.apache.commons.io.output.ByteArrayOutputStream@write:168:inBufferPos == currentBuffer.length |==> inBufferPos >= currentBuffer.length
6100:ROR:==(int,int):FALSE(int,int):org.apache.commons.io.output.ByteArrayOutputStream@write:168:inBufferPos == currentBuffer.length |==> false
6101:STD:<INC/DEC>:<NO-OP>:org.apache.commons.io.output.ByteArrayOutputStream@write:173:count++ |==> <NO-OP>
6102:LVR:0:POS:org.apache.commons.io.output.ByteArrayOutputStream@write:188:0 |==> 1
6103:LVR:0:NEG:org.apache.commons.io.output.ByteArrayOutputStream@write:188:0 |==> -1
6104:AOR:-(int,int):%(int,int):org.apache.commons.io.output.ByteArrayOutputStream@write:189:count - filledBufferSum |==> count % filledBufferSum
6105:AOR:-(int,int):*(int,int):org.apache.commons.io.output.ByteArrayOutputStream@write:189:count - filledBufferSum |==> count * filledBufferSum
6106:AOR:-(int,int):+(int,int):org.apache.commons.io.output.ByteArrayOutputStream@write:189:count - filledBufferSum |==> count + filledBufferSum
6107:AOR:-(int,int):/(int,int):org.apache.commons.io.output.ByteArrayOutputStream@write:189:count - filledBufferSum |==> count / filledBufferSum
6108:AOR:-(int,int):%(int,int):org.apache.commons.io.output.ByteArrayOutputStream@write:190:currentBuffer.length - inBufferPos |==> currentBuffer.length % inBufferPos
6109:AOR:-(int,int):*(int,int):org.apache.commons.io.output.ByteArrayOutputStream@write:190:currentBuffer.length - inBufferPos |==> currentBuffer.length * inBufferPos
6110:AOR:-(int,int):+(int,int):org.apache.commons.io.output.ByteArrayOutputStream@write:190:currentBuffer.length - inBufferPos |==> currentBuffer.length + inBufferPos
6111:AOR:-(int,int):/(int,int):org.apache.commons.io.output.ByteArrayOutputStream@write:190:currentBuffer.length - inBufferPos |==> currentBuffer.length / inBufferPos
6112:LVR:NEG:0:org.apache.commons.io.output.ByteArrayOutputStream@write:191:-1 |==> 0
6113:LVR:NEG:POS:org.apache.commons.io.output.ByteArrayOutputStream@write:191:-1 |==> 1
6114:ROR:!=(int,int):<(int,int):org.apache.commons.io.output.ByteArrayOutputStream@write:191:n != -1 |==> n < -1
6115:ROR:!=(int,int):>(int,int):org.apache.commons.io.output.ByteArrayOutputStream@write:191:n != -1 |==> n > -1
6116:ROR:!=(int,int):TRUE(int,int):org.apache.commons.io.output.ByteArrayOutputStream@write:191:n != -1 |==> true
6117:STD:<ASSIGN>:<NO-OP>:org.apache.commons.io.output.ByteArrayOutputStream@write:192:readCount += n |==> <NO-OP>
6118:STD:<ASSIGN>:<NO-OP>:org.apache.commons.io.output.ByteArrayOutputStream@write:193:inBufferPos += n |==> <NO-OP>
6119:STD:<ASSIGN>:<NO-OP>:org.apache.commons.io.output.ByteArrayOutputStream@write:194:count += n |==> <NO-OP>
6120:STD:<CALL>:<NO-OP>:org.apache.commons.io.output.ByteArrayOutputStream@write:196:needNewBuffer(currentBuffer.length) |==> <NO-OP>
6121:LVR:0:POS:org.apache.commons.io.output.ByteArrayOutputStream@write:197:0 |==> 1
6122:LVR:0:NEG:org.apache.commons.io.output.ByteArrayOutputStream@write:197:0 |==> -1
6123:ROR:==(int,int):<=(int,int):org.apache.commons.io.output.ByteArrayOutputStream@write:195:inBufferPos == currentBuffer.length |==> inBufferPos <= currentBuffer.length
6124:ROR:==(int,int):>=(int,int):org.apache.commons.io.output.ByteArrayOutputStream@write:195:inBufferPos == currentBuffer.length |==> inBufferPos >= currentBuffer.length
6125:ROR:==(int,int):FALSE(int,int):org.apache.commons.io.output.ByteArrayOutputStream@write:195:inBufferPos == currentBuffer.length |==> false
6126:AOR:-(int,int):%(int,int):org.apache.commons.io.output.ByteArrayOutputStream@write:199:currentBuffer.length - inBufferPos |==> currentBuffer.length % inBufferPos
6127:AOR:-(int,int):*(int,int):org.apache.commons.io.output.ByteArrayOutputStream@write:199:currentBuffer.length - inBufferPos |==> currentBuffer.length * inBufferPos
6128:AOR:-(int,int):+(int,int):org.apache.commons.io.output.ByteArrayOutputStream@write:199:currentBuffer.length - inBufferPos |==> currentBuffer.length + inBufferPos
6129:AOR:-(int,int):/(int,int):org.apache.commons.io.output.ByteArrayOutputStream@write:199:currentBuffer.length - inBufferPos |==> currentBuffer.length / inBufferPos
6130:LVR:0:POS:org.apache.commons.io.output.ByteArrayOutputStream@reset:229:0 |==> 1
6131:LVR:0:NEG:org.apache.commons.io.output.ByteArrayOutputStream@reset:229:0 |==> -1
6132:LVR:0:POS:org.apache.commons.io.output.ByteArrayOutputStream@reset:230:0 |==> 1
6133:LVR:0:NEG:org.apache.commons.io.output.ByteArrayOutputStream@reset:230:0 |==> -1
6134:LVR:0:POS:org.apache.commons.io.output.ByteArrayOutputStream@reset:231:0 |==> 1
6135:LVR:0:NEG:org.apache.commons.io.output.ByteArrayOutputStream@reset:231:0 |==> -1
6136:LVR:0:POS:org.apache.commons.io.output.ByteArrayOutputStream@writeTo:247:0 |==> 1
6137:LVR:0:NEG:org.apache.commons.io.output.ByteArrayOutputStream@writeTo:247:0 |==> -1
6138:STD:<CALL>:<NO-OP>:org.apache.commons.io.output.ByteArrayOutputStream@writeTo:247:out.write(buf, 0, c) |==> <NO-OP>
6139:STD:<ASSIGN>:<NO-OP>:org.apache.commons.io.output.ByteArrayOutputStream@writeTo:248:remaining -= c |==> <NO-OP>
6140:LVR:0:POS:org.apache.commons.io.output.ByteArrayOutputStream@writeTo:249:0 |==> 1
6141:LVR:0:NEG:org.apache.commons.io.output.ByteArrayOutputStream@writeTo:249:0 |==> -1
6142:ROR:==(int,int):<=(int,int):org.apache.commons.io.output.ByteArrayOutputStream@writeTo:249:remaining == 0 |==> remaining <= 0
6143:ROR:==(int,int):>=(int,int):org.apache.commons.io.output.ByteArrayOutputStream@writeTo:249:remaining == 0 |==> remaining >= 0
6144:ROR:==(int,int):FALSE(int,int):org.apache.commons.io.output.ByteArrayOutputStream@writeTo:249:remaining == 0 |==> false
6145:STD:<CALL>:<NO-OP>:org.apache.commons.io.output.ByteArrayOutputStream@toBufferedInputStream:279:output.write(input) |==> <NO-OP>
6146:LVR:0:POS:org.apache.commons.io.output.ByteArrayOutputStream@toBufferedInputStream:295:0 |==> 1
6147:LVR:0:NEG:org.apache.commons.io.output.ByteArrayOutputStream@toBufferedInputStream:295:0 |==> -1
6148:ROR:==(int,int):<=(int,int):org.apache.commons.io.output.ByteArrayOutputStream@toBufferedInputStream:295:remaining == 0 |==> remaining <= 0
6149:ROR:==(int,int):>=(int,int):org.apache.commons.io.output.ByteArrayOutputStream@toBufferedInputStream:295:remaining == 0 |==> remaining >= 0
6150:ROR:==(int,int):FALSE(int,int):org.apache.commons.io.output.ByteArrayOutputStream@toBufferedInputStream:295:remaining == 0 |==> false
6151:LVR:0:POS:org.apache.commons.io.output.ByteArrayOutputStream@toBufferedInputStream:301:0 |==> 1
6152:LVR:0:NEG:org.apache.commons.io.output.ByteArrayOutputStream@toBufferedInputStream:301:0 |==> -1
6153:STD:<CALL>:<NO-OP>:org.apache.commons.io.output.ByteArrayOutputStream@toBufferedInputStream:301:list.add(new ByteArrayInputStream(buf, 0, c)) |==> <NO-OP>
6154:STD:<ASSIGN>:<NO-OP>:org.apache.commons.io.output.ByteArrayOutputStream@toBufferedInputStream:302:remaining -= c |==> <NO-OP>
6155:LVR:0:POS:org.apache.commons.io.output.ByteArrayOutputStream@toBufferedInputStream:303:0 |==> 1
6156:LVR:0:NEG:org.apache.commons.io.output.ByteArrayOutputStream@toBufferedInputStream:303:0 |==> -1
6157:ROR:==(int,int):<=(int,int):org.apache.commons.io.output.ByteArrayOutputStream@toBufferedInputStream:303:remaining == 0 |==> remaining <= 0
6158:ROR:==(int,int):>=(int,int):org.apache.commons.io.output.ByteArrayOutputStream@toBufferedInputStream:303:remaining == 0 |==> remaining >= 0
6159:ROR:==(int,int):FALSE(int,int):org.apache.commons.io.output.ByteArrayOutputStream@toBufferedInputStream:303:remaining == 0 |==> false
6160:LVR:0:POS:org.apache.commons.io.output.ByteArrayOutputStream@toByteArray:319:0 |==> 1
6161:LVR:0:NEG:org.apache.commons.io.output.ByteArrayOutputStream@toByteArray:319:0 |==> -1
6162:ROR:==(int,int):<=(int,int):org.apache.commons.io.output.ByteArrayOutputStream@toByteArray:319:remaining == 0 |==> remaining <= 0
6163:ROR:==(int,int):>=(int,int):org.apache.commons.io.output.ByteArrayOutputStream@toByteArray:319:remaining == 0 |==> remaining >= 0
6164:ROR:==(int,int):FALSE(int,int):org.apache.commons.io.output.ByteArrayOutputStream@toByteArray:319:remaining == 0 |==> false
6165:LVR:0:POS:org.apache.commons.io.output.ByteArrayOutputStream@toByteArray:323:0 |==> 1
6166:LVR:0:NEG:org.apache.commons.io.output.ByteArrayOutputStream@toByteArray:323:0 |==> -1
6167:LVR:0:POS:org.apache.commons.io.output.ByteArrayOutputStream@toByteArray:326:0 |==> 1
6168:LVR:0:NEG:org.apache.commons.io.output.ByteArrayOutputStream@toByteArray:326:0 |==> -1
6169:STD:<CALL>:<NO-OP>:org.apache.commons.io.output.ByteArrayOutputStream@toByteArray:326:System.arraycopy(buf, 0, newbuf, pos, c) |==> <NO-OP>
6170:STD:<ASSIGN>:<NO-OP>:org.apache.commons.io.output.ByteArrayOutputStream@toByteArray:327:pos += c |==> <NO-OP>
6171:STD:<ASSIGN>:<NO-OP>:org.apache.commons.io.output.ByteArrayOutputStream@toByteArray:328:remaining -= c |==> <NO-OP>
6172:LVR:0:POS:org.apache.commons.io.output.ByteArrayOutputStream@toByteArray:329:0 |==> 1
6173:LVR:0:NEG:org.apache.commons.io.output.ByteArrayOutputStream@toByteArray:329:0 |==> -1
6174:ROR:==(int,int):<=(int,int):org.apache.commons.io.output.ByteArrayOutputStream@toByteArray:329:remaining == 0 |==> remaining <= 0
6175:ROR:==(int,int):>=(int,int):org.apache.commons.io.output.ByteArrayOutputStream@toByteArray:329:remaining == 0 |==> remaining >= 0
6176:ROR:==(int,int):FALSE(int,int):org.apache.commons.io.output.ByteArrayOutputStream@toByteArray:329:remaining == 0 |==> false
6177:LVR:POS:0:org.apache.commons.io.output.ProxyOutputStream@write:54:1 |==> 0
6178:LVR:POS:NEG:org.apache.commons.io.output.ProxyOutputStream@write:54:1 |==> -1
6179:STD:<CALL>:<NO-OP>:org.apache.commons.io.output.ProxyOutputStream@write:54:beforeWrite(1) |==> <NO-OP>
6180:STD:<CALL>:<NO-OP>:org.apache.commons.io.output.ProxyOutputStream@write:55:out.write(idx) |==> <NO-OP>
6181:LVR:POS:0:org.apache.commons.io.output.ProxyOutputStream@write:56:1 |==> 0
6182:LVR:POS:NEG:org.apache.commons.io.output.ProxyOutputStream@write:56:1 |==> -1
6183:STD:<CALL>:<NO-OP>:org.apache.commons.io.output.ProxyOutputStream@write:56:afterWrite(1) |==> <NO-OP>
6184:STD:<CALL>:<NO-OP>:org.apache.commons.io.output.ProxyOutputStream@write:58:handleIOException(e) |==> <NO-OP>
6185:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.apache.commons.io.output.ProxyOutputStream@write:70:bts != null |==> true
6186:LVR:0:POS:org.apache.commons.io.output.ProxyOutputStream@write:70:0 |==> 1
6187:LVR:0:NEG:org.apache.commons.io.output.ProxyOutputStream@write:70:0 |==> -1
6188:STD:<CALL>:<NO-OP>:org.apache.commons.io.output.ProxyOutputStream@write:71:beforeWrite(len) |==> <NO-OP>
6189:STD:<CALL>:<NO-OP>:org.apache.commons.io.output.ProxyOutputStream@write:72:out.write(bts) |==> <NO-OP>
6190:STD:<CALL>:<NO-OP>:org.apache.commons.io.output.ProxyOutputStream@write:73:afterWrite(len) |==> <NO-OP>
6191:STD:<CALL>:<NO-OP>:org.apache.commons.io.output.ProxyOutputStream@write:75:handleIOException(e) |==> <NO-OP>
6192:STD:<CALL>:<NO-OP>:org.apache.commons.io.output.ProxyOutputStream@write:89:beforeWrite(end) |==> <NO-OP>
6193:STD:<CALL>:<NO-OP>:org.apache.commons.io.output.ProxyOutputStream@write:90:out.write(bts, st, end) |==> <NO-OP>
6194:STD:<CALL>:<NO-OP>:org.apache.commons.io.output.ProxyOutputStream@write:91:afterWrite(end) |==> <NO-OP>
6195:STD:<CALL>:<NO-OP>:org.apache.commons.io.output.ProxyOutputStream@write:93:handleIOException(e) |==> <NO-OP>
6196:STD:<CALL>:<NO-OP>:org.apache.commons.io.output.ProxyOutputStream@flush:104:out.flush() |==> <NO-OP>
6197:STD:<CALL>:<NO-OP>:org.apache.commons.io.output.ProxyOutputStream@flush:106:handleIOException(e) |==> <NO-OP>
6198:STD:<CALL>:<NO-OP>:org.apache.commons.io.output.ProxyOutputStream@close:117:out.close() |==> <NO-OP>
6199:STD:<CALL>:<NO-OP>:org.apache.commons.io.output.ProxyOutputStream@close:119:handleIOException(e) |==> <NO-OP>
6200:LVR:0:POS:org.apache.commons.io.output.CountingOutputStream:33:0 |==> 1
6201:LVR:0:NEG:org.apache.commons.io.output.CountingOutputStream:33:0 |==> -1
6202:STD:<ASSIGN>:<NO-OP>:org.apache.commons.io.output.CountingOutputStream@beforeWrite:54:count += n |==> <NO-OP>
6203:ROR:>(long,long):!=(long,long):org.apache.commons.io.output.CountingOutputStream@getCount:70:result > Integer.MAX_VALUE |==> result != Integer.MAX_VALUE
6204:ROR:>(long,long):>=(long,long):org.apache.commons.io.output.CountingOutputStream@getCount:70:result > Integer.MAX_VALUE |==> result >= Integer.MAX_VALUE
6205:ROR:>(long,long):FALSE(long,long):org.apache.commons.io.output.CountingOutputStream@getCount:70:result > Integer.MAX_VALUE |==> false
6206:ROR:>(long,long):!=(long,long):org.apache.commons.io.output.CountingOutputStream@resetCount:88:result > Integer.MAX_VALUE |==> result != Integer.MAX_VALUE
6207:ROR:>(long,long):>=(long,long):org.apache.commons.io.output.CountingOutputStream@resetCount:88:result > Integer.MAX_VALUE |==> result >= Integer.MAX_VALUE
6208:ROR:>(long,long):FALSE(long,long):org.apache.commons.io.output.CountingOutputStream@resetCount:88:result > Integer.MAX_VALUE |==> false
6209:LVR:0:POS:org.apache.commons.io.output.CountingOutputStream@resetByteCount:120:0 |==> 1
6210:LVR:0:NEG:org.apache.commons.io.output.CountingOutputStream@resetByteCount:120:0 |==> -1
6211:LVR:FALSE:TRUE:org.apache.commons.io.output.DeferredFileOutputStream:87:false |==> true
6212:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.io.output.DeferredFileOutputStream@<init>:119:prefix == null |==> false
6213:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.apache.commons.io.output.DeferredFileOutputStream@thresholdReached:175:prefix != null |==> true
6214:STD:<CALL>:<NO-OP>:org.apache.commons.io.output.DeferredFileOutputStream@thresholdReached:179:memoryOutputStream.writeTo(fos) |==> <NO-OP>
6215:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.apache.commons.io.output.DeferredFileOutputStream@getData:211:memoryOutputStream != null |==> true
6216:STD:<CALL>:<NO-OP>:org.apache.commons.io.output.DeferredFileOutputStream@close:247:super.close() |==> <NO-OP>
6217:LVR:TRUE:FALSE:org.apache.commons.io.output.DeferredFileOutputStream@close:248:true |==> false
6218:STD:<CALL>:<NO-OP>:org.apache.commons.io.output.DeferredFileOutputStream@writeTo:271:memoryOutputStream.writeTo(out) |==> <NO-OP>
6219:STD:<CALL>:<NO-OP>:org.apache.commons.io.output.DeferredFileOutputStream@writeTo:277:IOUtils.copy(fis, out) |==> <NO-OP>
6220:STD:<CALL>:<NO-OP>:org.apache.commons.io.output.DeferredFileOutputStream@writeTo:279:IOUtils.closeQuietly(fis) |==> <NO-OP>
6221:COR:isInMemory():TRUE:org.apache.commons.io.output.DeferredFileOutputStream@writeTo:269:isInMemory() |==> false
6222:COR:isInMemory():FALSE:org.apache.commons.io.output.DeferredFileOutputStream@writeTo:269:isInMemory() |==> true
6223:LVR:POS:0:org.apache.commons.io.output.ThresholdingOutputStream@write:92:1 |==> 0
6224:LVR:POS:NEG:org.apache.commons.io.output.ThresholdingOutputStream@write:92:1 |==> -1
6225:STD:<CALL>:<NO-OP>:org.apache.commons.io.output.ThresholdingOutputStream@write:92:checkThreshold(1) |==> <NO-OP>
6226:STD:<CALL>:<NO-OP>:org.apache.commons.io.output.ThresholdingOutputStream@write:93:getStream().write(b) |==> <NO-OP>
6227:STD:<INC/DEC>:<NO-OP>:org.apache.commons.io.output.ThresholdingOutputStream@write:94:written++ |==> <NO-OP>
6228:STD:<CALL>:<NO-OP>:org.apache.commons.io.output.ThresholdingOutputStream@write:109:checkThreshold(b.length) |==> <NO-OP>
6229:STD:<CALL>:<NO-OP>:org.apache.commons.io.output.ThresholdingOutputStream@write:110:getStream().write(b) |==> <NO-OP>
6230:STD:<ASSIGN>:<NO-OP>:org.apache.commons.io.output.ThresholdingOutputStream@write:111:written += b.length |==> <NO-OP>
6231:STD:<CALL>:<NO-OP>:org.apache.commons.io.output.ThresholdingOutputStream@write:128:checkThreshold(len) |==> <NO-OP>
6232:STD:<CALL>:<NO-OP>:org.apache.commons.io.output.ThresholdingOutputStream@write:129:getStream().write(b, off, len) |==> <NO-OP>
6233:STD:<ASSIGN>:<NO-OP>:org.apache.commons.io.output.ThresholdingOutputStream@write:130:written += len |==> <NO-OP>
6234:STD:<CALL>:<NO-OP>:org.apache.commons.io.output.ThresholdingOutputStream@flush:143:getStream().flush() |==> <NO-OP>
6235:STD:<CALL>:<NO-OP>:org.apache.commons.io.output.ThresholdingOutputStream@close:158:flush() |==> <NO-OP>
6236:STD:<CALL>:<NO-OP>:org.apache.commons.io.output.ThresholdingOutputStream@close:164:getStream().close() |==> <NO-OP>
6237:ROR:>(long,long):!=(long,long):org.apache.commons.io.output.ThresholdingOutputStream@isThresholdExceeded:202:written > threshold |==> written != threshold
6238:ROR:>(long,long):>=(long,long):org.apache.commons.io.output.ThresholdingOutputStream@isThresholdExceeded:202:written > threshold |==> written >= threshold
6239:ROR:>(long,long):FALSE(long,long):org.apache.commons.io.output.ThresholdingOutputStream@isThresholdExceeded:202:written > threshold |==> false
6240:LVR:TRUE:FALSE:org.apache.commons.io.output.ThresholdingOutputStream@checkThreshold:223:true |==> false
6241:STD:<CALL>:<NO-OP>:org.apache.commons.io.output.ThresholdingOutputStream@checkThreshold:224:thresholdReached() |==> <NO-OP>
6242:AOR:+(long,long):%(long,long):org.apache.commons.io.output.ThresholdingOutputStream@checkThreshold:221:written + count |==> written % count
6243:AOR:+(long,long):*(long,long):org.apache.commons.io.output.ThresholdingOutputStream@checkThreshold:221:written + count |==> written * count
6244:AOR:+(long,long):-(long,long):org.apache.commons.io.output.ThresholdingOutputStream@checkThreshold:221:written + count |==> written - count
6245:AOR:+(long,long):/(long,long):org.apache.commons.io.output.ThresholdingOutputStream@checkThreshold:221:written + count |==> written / count
6246:ROR:>(long,long):!=(long,long):org.apache.commons.io.output.ThresholdingOutputStream@checkThreshold:221:written + count > threshold |==> written + count != threshold
6247:ROR:>(long,long):>=(long,long):org.apache.commons.io.output.ThresholdingOutputStream@checkThreshold:221:written + count > threshold |==> written + count >= threshold
6248:ROR:>(long,long):FALSE(long,long):org.apache.commons.io.output.ThresholdingOutputStream@checkThreshold:221:written + count > threshold |==> false
6249:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.io.output.ThresholdingOutputStream@checkThreshold:221:!thresholdExceeded && written + count > threshold |==> !thresholdExceeded == written + count > threshold
6250:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.io.output.ThresholdingOutputStream@checkThreshold:221:!thresholdExceeded && written + count > threshold |==> false
6251:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.io.output.ThresholdingOutputStream@checkThreshold:221:!thresholdExceeded && written + count > threshold |==> !thresholdExceeded
6252:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.io.output.ThresholdingOutputStream@checkThreshold:221:!thresholdExceeded && written + count > threshold |==> written + count > threshold
6253:LVR:FALSE:TRUE:org.apache.commons.io.output.ThresholdingOutputStream@resetByteCount:234:false |==> true
6254:LVR:0:POS:org.apache.commons.io.output.ThresholdingOutputStream@resetByteCount:235:0 |==> 1
6255:LVR:0:NEG:org.apache.commons.io.output.ThresholdingOutputStream@resetByteCount:235:0 |==> -1
6256:STD:<CALL>:<NO-OP>:org.apache.commons.io.output.DemuxOutputStream@bindStream:42:m_streams.set(output) |==> <NO-OP>
6257:STD:<CALL>:<NO-OP>:org.apache.commons.io.output.DemuxOutputStream@close:58:output.close() |==> <NO-OP>
6258:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.apache.commons.io.output.DemuxOutputStream@close:56:null != output |==> true
6259:STD:<CALL>:<NO-OP>:org.apache.commons.io.output.DemuxOutputStream@flush:74:output.flush() |==> <NO-OP>
6260:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.apache.commons.io.output.DemuxOutputStream@flush:72:null != output |==> true
6261:STD:<CALL>:<NO-OP>:org.apache.commons.io.output.DemuxOutputStream@write:91:output.write(ch) |==> <NO-OP>
6262:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.apache.commons.io.output.DemuxOutputStream@write:89:null != output |==> true
6263:LVR:FALSE:TRUE:org.apache.commons.io.output.FileWriterWithEncoding@<init>:66:false |==> true
6264:LVR:FALSE:TRUE:org.apache.commons.io.output.FileWriterWithEncoding@<init>:91:false |==> true
6265:LVR:FALSE:TRUE:org.apache.commons.io.output.FileWriterWithEncoding@<init>:116:false |==> true
6266:LVR:FALSE:TRUE:org.apache.commons.io.output.FileWriterWithEncoding@<init>:141:false |==> true
6267:LVR:FALSE:TRUE:org.apache.commons.io.output.FileWriterWithEncoding@<init>:167:false |==> true
6268:LVR:FALSE:TRUE:org.apache.commons.io.output.FileWriterWithEncoding@<init>:193:false |==> true
6269:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.io.output.FileWriterWithEncoding@initWriter:223:file == null |==> false
6270:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.io.output.FileWriterWithEncoding@initWriter:226:encoding == null |==> false
6271:STD:<CALL>:<NO-OP>:org.apache.commons.io.output.FileWriterWithEncoding@initWriter:242:IOUtils.closeQuietly(writer) |==> <NO-OP>
6272:STD:<CALL>:<NO-OP>:org.apache.commons.io.output.FileWriterWithEncoding@initWriter:243:IOUtils.closeQuietly(stream) |==> <NO-OP>
6273:STD:<CALL>:<NO-OP>:org.apache.commons.io.output.FileWriterWithEncoding@initWriter:245:FileUtils.deleteQuietly(file) |==> <NO-OP>
6274:LVR:FALSE:TRUE:org.apache.commons.io.output.FileWriterWithEncoding@initWriter:244:false |==> true
6275:ROR:==(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.io.output.FileWriterWithEncoding@initWriter:244:fileExistedAlready == false |==> false
6276:ROR:==(boolean,boolean):LHS(boolean,boolean):org.apache.commons.io.output.FileWriterWithEncoding@initWriter:244:fileExistedAlready == false |==> fileExistedAlready
6277:ROR:==(boolean,boolean):RHS(boolean,boolean):org.apache.commons.io.output.FileWriterWithEncoding@initWriter:244:fileExistedAlready == false |==> false
6278:STD:<CALL>:<NO-OP>:org.apache.commons.io.output.FileWriterWithEncoding@initWriter:249:IOUtils.closeQuietly(writer) |==> <NO-OP>
6279:STD:<CALL>:<NO-OP>:org.apache.commons.io.output.FileWriterWithEncoding@initWriter:250:IOUtils.closeQuietly(stream) |==> <NO-OP>
6280:STD:<CALL>:<NO-OP>:org.apache.commons.io.output.FileWriterWithEncoding@initWriter:252:FileUtils.deleteQuietly(file) |==> <NO-OP>
6281:LVR:FALSE:TRUE:org.apache.commons.io.output.FileWriterWithEncoding@initWriter:251:false |==> true
6282:ROR:==(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.io.output.FileWriterWithEncoding@initWriter:251:fileExistedAlready == false |==> false
6283:ROR:==(boolean,boolean):LHS(boolean,boolean):org.apache.commons.io.output.FileWriterWithEncoding@initWriter:251:fileExistedAlready == false |==> fileExistedAlready
6284:ROR:==(boolean,boolean):RHS(boolean,boolean):org.apache.commons.io.output.FileWriterWithEncoding@initWriter:251:fileExistedAlready == false |==> false
6285:STD:<CALL>:<NO-OP>:org.apache.commons.io.output.FileWriterWithEncoding@write:267:out.write(idx) |==> <NO-OP>
6286:STD:<CALL>:<NO-OP>:org.apache.commons.io.output.FileWriterWithEncoding@write:277:out.write(chr) |==> <NO-OP>
6287:STD:<CALL>:<NO-OP>:org.apache.commons.io.output.FileWriterWithEncoding@write:289:out.write(chr, st, end) |==> <NO-OP>
6288:STD:<CALL>:<NO-OP>:org.apache.commons.io.output.FileWriterWithEncoding@write:299:out.write(str) |==> <NO-OP>
6289:STD:<CALL>:<NO-OP>:org.apache.commons.io.output.FileWriterWithEncoding@write:311:out.write(str, st, end) |==> <NO-OP>
6290:STD:<CALL>:<NO-OP>:org.apache.commons.io.output.FileWriterWithEncoding@flush:320:out.flush() |==> <NO-OP>
6291:STD:<CALL>:<NO-OP>:org.apache.commons.io.output.FileWriterWithEncoding@close:329:out.close() |==> <NO-OP>
6292:LVR:FALSE:TRUE:org.apache.commons.io.output.LockableFileWriter@<init>:74:false |==> true
6293:LVR:FALSE:TRUE:org.apache.commons.io.output.LockableFileWriter@<init>:111:false |==> true
6294:LVR:FALSE:TRUE:org.apache.commons.io.output.LockableFileWriter@<init>:149:false |==> true
6295:LVR:FALSE:TRUE:org.apache.commons.io.output.LockableFileWriter@<init>:164:false |==> true
6296:STD:<CALL>:<NO-OP>:org.apache.commons.io.output.LockableFileWriter@<init>:184:FileUtils.forceMkdir(file.getParentFile()) |==> <NO-OP>
6297:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.apache.commons.io.output.LockableFileWriter@<init>:183:file.getParentFile() != null |==> true
6298:COR:file.isDirectory():TRUE:org.apache.commons.io.output.LockableFileWriter@<init>:186:file.isDirectory() |==> false
6299:COR:file.isDirectory():FALSE:org.apache.commons.io.output.LockableFileWriter@<init>:186:file.isDirectory() |==> true
6300:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.io.output.LockableFileWriter@<init>:191:lockDir == null |==> false
6301:STD:<CALL>:<NO-OP>:org.apache.commons.io.output.LockableFileWriter@<init>:195:FileUtils.forceMkdir(lockDirFile) |==> <NO-OP>
6302:STD:<CALL>:<NO-OP>:org.apache.commons.io.output.LockableFileWriter@<init>:196:testLockDir(lockDirFile) |==> <NO-OP>
6303:STD:<CALL>:<NO-OP>:org.apache.commons.io.output.LockableFileWriter@<init>:200:createLock() |==> <NO-OP>
6304:STD:<CALL>:<NO-OP>:org.apache.commons.io.output.LockableFileWriter@createLock:254:lockFile.deleteOnExit() |==> <NO-OP>
6305:STD:<CALL>:<NO-OP>:org.apache.commons.io.output.LockableFileWriter@initWriter:276:IOUtils.closeQuietly(writer) |==> <NO-OP>
6306:STD:<CALL>:<NO-OP>:org.apache.commons.io.output.LockableFileWriter@initWriter:277:IOUtils.closeQuietly(stream) |==> <NO-OP>
6307:STD:<CALL>:<NO-OP>:org.apache.commons.io.output.LockableFileWriter@initWriter:278:FileUtils.deleteQuietly(lockFile) |==> <NO-OP>
6308:STD:<CALL>:<NO-OP>:org.apache.commons.io.output.LockableFileWriter@initWriter:280:FileUtils.deleteQuietly(file) |==> <NO-OP>
6309:LVR:FALSE:TRUE:org.apache.commons.io.output.LockableFileWriter@initWriter:279:false |==> true
6310:ROR:==(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.io.output.LockableFileWriter@initWriter:279:fileExistedAlready == false |==> false
6311:ROR:==(boolean,boolean):LHS(boolean,boolean):org.apache.commons.io.output.LockableFileWriter@initWriter:279:fileExistedAlready == false |==> fileExistedAlready
6312:ROR:==(boolean,boolean):RHS(boolean,boolean):org.apache.commons.io.output.LockableFileWriter@initWriter:279:fileExistedAlready == false |==> false
6313:STD:<CALL>:<NO-OP>:org.apache.commons.io.output.LockableFileWriter@initWriter:284:IOUtils.closeQuietly(writer) |==> <NO-OP>
6314:STD:<CALL>:<NO-OP>:org.apache.commons.io.output.LockableFileWriter@initWriter:285:IOUtils.closeQuietly(stream) |==> <NO-OP>
6315:STD:<CALL>:<NO-OP>:org.apache.commons.io.output.LockableFileWriter@initWriter:286:FileUtils.deleteQuietly(lockFile) |==> <NO-OP>
6316:STD:<CALL>:<NO-OP>:org.apache.commons.io.output.LockableFileWriter@initWriter:288:FileUtils.deleteQuietly(file) |==> <NO-OP>
6317:LVR:FALSE:TRUE:org.apache.commons.io.output.LockableFileWriter@initWriter:287:false |==> true
6318:ROR:==(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.io.output.LockableFileWriter@initWriter:287:fileExistedAlready == false |==> false
6319:ROR:==(boolean,boolean):LHS(boolean,boolean):org.apache.commons.io.output.LockableFileWriter@initWriter:287:fileExistedAlready == false |==> fileExistedAlready
6320:ROR:==(boolean,boolean):RHS(boolean,boolean):org.apache.commons.io.output.LockableFileWriter@initWriter:287:fileExistedAlready == false |==> false
6321:STD:<CALL>:<NO-OP>:org.apache.commons.io.output.LockableFileWriter@close:304:out.close() |==> <NO-OP>
6322:STD:<CALL>:<NO-OP>:org.apache.commons.io.output.LockableFileWriter@close:306:lockFile.delete() |==> <NO-OP>
6323:STD:<CALL>:<NO-OP>:org.apache.commons.io.output.LockableFileWriter@write:318:out.write(idx) |==> <NO-OP>
6324:STD:<CALL>:<NO-OP>:org.apache.commons.io.output.LockableFileWriter@write:328:out.write(chr) |==> <NO-OP>
6325:STD:<CALL>:<NO-OP>:org.apache.commons.io.output.LockableFileWriter@write:340:out.write(chr, st, end) |==> <NO-OP>
6326:STD:<CALL>:<NO-OP>:org.apache.commons.io.output.LockableFileWriter@write:350:out.write(str) |==> <NO-OP>
6327:STD:<CALL>:<NO-OP>:org.apache.commons.io.output.LockableFileWriter@write:362:out.write(str, st, end) |==> <NO-OP>
6328:STD:<CALL>:<NO-OP>:org.apache.commons.io.output.LockableFileWriter@flush:371:out.flush() |==> <NO-OP>
6329:LVR:POS:0:org.apache.commons.io.output.ProxyWriter@append:55:1 |==> 0
6330:LVR:POS:NEG:org.apache.commons.io.output.ProxyWriter@append:55:1 |==> -1
6331:STD:<CALL>:<NO-OP>:org.apache.commons.io.output.ProxyWriter@append:55:beforeWrite(1) |==> <NO-OP>
6332:STD:<CALL>:<NO-OP>:org.apache.commons.io.output.ProxyWriter@append:56:out.append(c) |==> <NO-OP>
6333:LVR:POS:0:org.apache.commons.io.output.ProxyWriter@append:57:1 |==> 0
6334:LVR:POS:NEG:org.apache.commons.io.output.ProxyWriter@append:57:1 |==> -1
6335:STD:<CALL>:<NO-OP>:org.apache.commons.io.output.ProxyWriter@append:57:afterWrite(1) |==> <NO-OP>
6336:STD:<CALL>:<NO-OP>:org.apache.commons.io.output.ProxyWriter@append:59:handleIOException(e) |==> <NO-OP>
6337:AOR:-(int,int):%(int,int):org.apache.commons.io.output.ProxyWriter@append:76:end - start |==> end % start
6338:AOR:-(int,int):*(int,int):org.apache.commons.io.output.ProxyWriter@append:76:end - start |==> end * start
6339:AOR:-(int,int):+(int,int):org.apache.commons.io.output.ProxyWriter@append:76:end - start |==> end + start
6340:AOR:-(int,int):/(int,int):org.apache.commons.io.output.ProxyWriter@append:76:end - start |==> end / start
6341:STD:<CALL>:<NO-OP>:org.apache.commons.io.output.ProxyWriter@append:76:beforeWrite(end - start) |==> <NO-OP>
6342:STD:<CALL>:<NO-OP>:org.apache.commons.io.output.ProxyWriter@append:77:out.append(csq, start, end) |==> <NO-OP>
6343:AOR:-(int,int):%(int,int):org.apache.commons.io.output.ProxyWriter@append:78:end - start |==> end % start
6344:AOR:-(int,int):*(int,int):org.apache.commons.io.output.ProxyWriter@append:78:end - start |==> end * start
6345:AOR:-(int,int):+(int,int):org.apache.commons.io.output.ProxyWriter@append:78:end - start |==> end + start
6346:AOR:-(int,int):/(int,int):org.apache.commons.io.output.ProxyWriter@append:78:end - start |==> end / start
6347:STD:<CALL>:<NO-OP>:org.apache.commons.io.output.ProxyWriter@append:78:afterWrite(end - start) |==> <NO-OP>
6348:STD:<CALL>:<NO-OP>:org.apache.commons.io.output.ProxyWriter@append:80:handleIOException(e) |==> <NO-OP>
6349:LVR:0:POS:org.apache.commons.io.output.ProxyWriter@append:95:0 |==> 1
6350:LVR:0:NEG:org.apache.commons.io.output.ProxyWriter@append:95:0 |==> -1
6351:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.apache.commons.io.output.ProxyWriter@append:96:csq != null |==> true
6352:STD:<CALL>:<NO-OP>:org.apache.commons.io.output.ProxyWriter@append:100:beforeWrite(len) |==> <NO-OP>
6353:STD:<CALL>:<NO-OP>:org.apache.commons.io.output.ProxyWriter@append:101:out.append(csq) |==> <NO-OP>
6354:STD:<CALL>:<NO-OP>:org.apache.commons.io.output.ProxyWriter@append:102:afterWrite(len) |==> <NO-OP>
6355:STD:<CALL>:<NO-OP>:org.apache.commons.io.output.ProxyWriter@append:104:handleIOException(e) |==> <NO-OP>
6356:LVR:POS:0:org.apache.commons.io.output.ProxyWriter@write:117:1 |==> 0
6357:LVR:POS:NEG:org.apache.commons.io.output.ProxyWriter@write:117:1 |==> -1
6358:STD:<CALL>:<NO-OP>:org.apache.commons.io.output.ProxyWriter@write:117:beforeWrite(1) |==> <NO-OP>
6359:STD:<CALL>:<NO-OP>:org.apache.commons.io.output.ProxyWriter@write:118:out.write(idx) |==> <NO-OP>
6360:LVR:POS:0:org.apache.commons.io.output.ProxyWriter@write:119:1 |==> 0
6361:LVR:POS:NEG:org.apache.commons.io.output.ProxyWriter@write:119:1 |==> -1
6362:STD:<CALL>:<NO-OP>:org.apache.commons.io.output.ProxyWriter@write:119:afterWrite(1) |==> <NO-OP>
6363:STD:<CALL>:<NO-OP>:org.apache.commons.io.output.ProxyWriter@write:121:handleIOException(e) |==> <NO-OP>
6364:LVR:0:POS:org.apache.commons.io.output.ProxyWriter@write:133:0 |==> 1
6365:LVR:0:NEG:org.apache.commons.io.output.ProxyWriter@write:133:0 |==> -1
6366:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.apache.commons.io.output.ProxyWriter@write:134:chr != null |==> true
6367:STD:<CALL>:<NO-OP>:org.apache.commons.io.output.ProxyWriter@write:138:beforeWrite(len) |==> <NO-OP>
6368:STD:<CALL>:<NO-OP>:org.apache.commons.io.output.ProxyWriter@write:139:out.write(chr) |==> <NO-OP>
6369:STD:<CALL>:<NO-OP>:org.apache.commons.io.output.ProxyWriter@write:140:afterWrite(len) |==> <NO-OP>
6370:STD:<CALL>:<NO-OP>:org.apache.commons.io.output.ProxyWriter@write:142:handleIOException(e) |==> <NO-OP>
6371:STD:<CALL>:<NO-OP>:org.apache.commons.io.output.ProxyWriter@write:156:beforeWrite(len) |==> <NO-OP>
6372:STD:<CALL>:<NO-OP>:org.apache.commons.io.output.ProxyWriter@write:157:out.write(chr, st, len) |==> <NO-OP>
6373:STD:<CALL>:<NO-OP>:org.apache.commons.io.output.ProxyWriter@write:158:afterWrite(len) |==> <NO-OP>
6374:STD:<CALL>:<NO-OP>:org.apache.commons.io.output.ProxyWriter@write:160:handleIOException(e) |==> <NO-OP>
6375:LVR:0:POS:org.apache.commons.io.output.ProxyWriter@write:172:0 |==> 1
6376:LVR:0:NEG:org.apache.commons.io.output.ProxyWriter@write:172:0 |==> -1
6377:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.apache.commons.io.output.ProxyWriter@write:173:str != null |==> true
6378:STD:<CALL>:<NO-OP>:org.apache.commons.io.output.ProxyWriter@write:177:beforeWrite(len) |==> <NO-OP>
6379:STD:<CALL>:<NO-OP>:org.apache.commons.io.output.ProxyWriter@write:178:out.write(str) |==> <NO-OP>
6380:STD:<CALL>:<NO-OP>:org.apache.commons.io.output.ProxyWriter@write:179:afterWrite(len) |==> <NO-OP>
6381:STD:<CALL>:<NO-OP>:org.apache.commons.io.output.ProxyWriter@write:181:handleIOException(e) |==> <NO-OP>
6382:STD:<CALL>:<NO-OP>:org.apache.commons.io.output.ProxyWriter@write:195:beforeWrite(len) |==> <NO-OP>
6383:STD:<CALL>:<NO-OP>:org.apache.commons.io.output.ProxyWriter@write:196:out.write(str, st, len) |==> <NO-OP>
6384:STD:<CALL>:<NO-OP>:org.apache.commons.io.output.ProxyWriter@write:197:afterWrite(len) |==> <NO-OP>
6385:STD:<CALL>:<NO-OP>:org.apache.commons.io.output.ProxyWriter@write:199:handleIOException(e) |==> <NO-OP>
6386:STD:<CALL>:<NO-OP>:org.apache.commons.io.output.ProxyWriter@flush:210:out.flush() |==> <NO-OP>
6387:STD:<CALL>:<NO-OP>:org.apache.commons.io.output.ProxyWriter@flush:212:handleIOException(e) |==> <NO-OP>
6388:STD:<CALL>:<NO-OP>:org.apache.commons.io.output.ProxyWriter@close:223:out.close() |==> <NO-OP>
6389:STD:<CALL>:<NO-OP>:org.apache.commons.io.output.ProxyWriter@close:225:handleIOException(e) |==> <NO-OP>
6390:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.apache.commons.io.output.StringBuilderWriter@<init>:60:builder != null |==> true
6391:STD:<CALL>:<NO-OP>:org.apache.commons.io.output.StringBuilderWriter@append:71:builder.append(value) |==> <NO-OP>
6392:STD:<CALL>:<NO-OP>:org.apache.commons.io.output.StringBuilderWriter@append:83:builder.append(value) |==> <NO-OP>
6393:STD:<CALL>:<NO-OP>:org.apache.commons.io.output.StringBuilderWriter@append:97:builder.append(value, start, end) |==> <NO-OP>
6394:STD:<CALL>:<NO-OP>:org.apache.commons.io.output.StringBuilderWriter@write:124:builder.append(value) |==> <NO-OP>
6395:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.apache.commons.io.output.StringBuilderWriter@write:123:value != null |==> true
6396:STD:<CALL>:<NO-OP>:org.apache.commons.io.output.StringBuilderWriter@write:138:builder.append(value, offset, length) |==> <NO-OP>
6397:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.apache.commons.io.output.StringBuilderWriter@write:137:value != null |==> true
6398:STD:<CALL>:<NO-OP>:org.apache.commons.io.output.TaggedOutputStream@throwIfCauseOf:102:TaggedIOException.throwCauseIfTaggedWith(exception, tag) |==> <NO-OP>
6399:STD:<CALL>:<NO-OP>:org.apache.commons.io.output.TeeOutputStream@write:51:super.write(b) |==> <NO-OP>
6400:STD:<CALL>:<NO-OP>:org.apache.commons.io.output.TeeOutputStream@write:52:this.branch.write(b) |==> <NO-OP>
6401:STD:<CALL>:<NO-OP>:org.apache.commons.io.output.TeeOutputStream@write:64:super.write(b, off, len) |==> <NO-OP>
6402:STD:<CALL>:<NO-OP>:org.apache.commons.io.output.TeeOutputStream@write:65:this.branch.write(b, off, len) |==> <NO-OP>
6403:STD:<CALL>:<NO-OP>:org.apache.commons.io.output.TeeOutputStream@write:75:super.write(b) |==> <NO-OP>
6404:STD:<CALL>:<NO-OP>:org.apache.commons.io.output.TeeOutputStream@write:76:this.branch.write(b) |==> <NO-OP>
6405:STD:<CALL>:<NO-OP>:org.apache.commons.io.output.TeeOutputStream@flush:85:super.flush() |==> <NO-OP>
6406:STD:<CALL>:<NO-OP>:org.apache.commons.io.output.TeeOutputStream@flush:86:this.branch.flush() |==> <NO-OP>
6407:STD:<CALL>:<NO-OP>:org.apache.commons.io.output.TeeOutputStream@close:103:super.close() |==> <NO-OP>
6408:STD:<CALL>:<NO-OP>:org.apache.commons.io.output.TeeOutputStream@close:105:this.branch.close() |==> <NO-OP>
6409:LVR:POS:0:org.apache.commons.io.output.WriterOutputStream:85:128 |==> 0
6410:LVR:POS:NEG:org.apache.commons.io.output.WriterOutputStream:85:128 |==> -128
6411:LVR:FALSE:TRUE:org.apache.commons.io.output.WriterOutputStream@<init>:104:false |==> true
6412:LVR:FALSE:TRUE:org.apache.commons.io.output.WriterOutputStream@<init>:158:false |==> true
6413:LVR:FALSE:TRUE:org.apache.commons.io.output.WriterOutputStream@<init>:186:false |==> true
6414:LVR:FALSE:TRUE:org.apache.commons.io.output.WriterOutputStream@<init>:197:false |==> true
6415:LVR:0:POS:org.apache.commons.io.output.WriterOutputStream@write:210:0 |==> 1
6416:LVR:0:NEG:org.apache.commons.io.output.WriterOutputStream@write:210:0 |==> -1
6417:ROR:>(int,int):!=(int,int):org.apache.commons.io.output.WriterOutputStream@write:210:len > 0 |==> len != 0
6418:ROR:>(int,int):>=(int,int):org.apache.commons.io.output.WriterOutputStream@write:210:len > 0 |==> len >= 0
6419:ROR:>(int,int):FALSE(int,int):org.apache.commons.io.output.WriterOutputStream@write:210:len > 0 |==> false
6420:STD:<CALL>:<NO-OP>:org.apache.commons.io.output.WriterOutputStream@write:212:decoderIn.put(b, off, c) |==> <NO-OP>
6421:LVR:FALSE:TRUE:org.apache.commons.io.output.WriterOutputStream@write:213:false |==> true
6422:STD:<CALL>:<NO-OP>:org.apache.commons.io.output.WriterOutputStream@write:213:processInput(false) |==> <NO-OP>
6423:STD:<ASSIGN>:<NO-OP>:org.apache.commons.io.output.WriterOutputStream@write:214:len -= c |==> <NO-OP>
6424:STD:<ASSIGN>:<NO-OP>:org.apache.commons.io.output.WriterOutputStream@write:215:off += c |==> <NO-OP>
6425:STD:<CALL>:<NO-OP>:org.apache.commons.io.output.WriterOutputStream@write:218:flushOutput() |==> <NO-OP>
6426:COR:writeImmediately:TRUE:org.apache.commons.io.output.WriterOutputStream@write:217:writeImmediately |==> false
6427:COR:writeImmediately:FALSE:org.apache.commons.io.output.WriterOutputStream@write:217:writeImmediately |==> true
6428:LVR:0:POS:org.apache.commons.io.output.WriterOutputStream@write:230:0 |==> 1
6429:LVR:0:NEG:org.apache.commons.io.output.WriterOutputStream@write:230:0 |==> -1
6430:STD:<CALL>:<NO-OP>:org.apache.commons.io.output.WriterOutputStream@write:230:write(b, 0, b.length) |==> <NO-OP>
6431:LVR:0:POS:org.apache.commons.io.output.WriterOutputStream@write:241:0 |==> 1
6432:LVR:0:NEG:org.apache.commons.io.output.WriterOutputStream@write:241:0 |==> -1
6433:LVR:POS:0:org.apache.commons.io.output.WriterOutputStream@write:241:1 |==> 0
6434:LVR:POS:NEG:org.apache.commons.io.output.WriterOutputStream@write:241:1 |==> -1
6435:STD:<CALL>:<NO-OP>:org.apache.commons.io.output.WriterOutputStream@write:241:write(new byte[]{(byte)b}, 0, 1) |==> <NO-OP>
6436:STD:<CALL>:<NO-OP>:org.apache.commons.io.output.WriterOutputStream@flush:252:flushOutput() |==> <NO-OP>
6437:STD:<CALL>:<NO-OP>:org.apache.commons.io.output.WriterOutputStream@flush:253:writer.flush() |==> <NO-OP>
6438:LVR:TRUE:FALSE:org.apache.commons.io.output.WriterOutputStream@close:264:true |==> false
6439:STD:<CALL>:<NO-OP>:org.apache.commons.io.output.WriterOutputStream@close:264:processInput(true) |==> <NO-OP>
6440:STD:<CALL>:<NO-OP>:org.apache.commons.io.output.WriterOutputStream@close:265:flushOutput() |==> <NO-OP>
6441:STD:<CALL>:<NO-OP>:org.apache.commons.io.output.WriterOutputStream@close:266:writer.close() |==> <NO-OP>
6442:STD:<CALL>:<NO-OP>:org.apache.commons.io.output.WriterOutputStream@processInput:277:decoderIn.flip() |==> <NO-OP>
6443:STD:<CALL>:<NO-OP>:org.apache.commons.io.output.WriterOutputStream@processInput:282:flushOutput() |==> <NO-OP>
6444:COR:coderResult.isUnderflow():TRUE:org.apache.commons.io.output.WriterOutputStream@processInput:283:coderResult.isUnderflow() |==> false
6445:COR:coderResult.isUnderflow():FALSE:org.apache.commons.io.output.WriterOutputStream@processInput:283:coderResult.isUnderflow() |==> true
6446:COR:coderResult.isOverflow():TRUE:org.apache.commons.io.output.WriterOutputStream@processInput:281:coderResult.isOverflow() |==> false
6447:COR:coderResult.isOverflow():FALSE:org.apache.commons.io.output.WriterOutputStream@processInput:281:coderResult.isOverflow() |==> true
6448:STD:<CALL>:<NO-OP>:org.apache.commons.io.output.WriterOutputStream@processInput:292:decoderIn.compact() |==> <NO-OP>
6449:LVR:0:POS:org.apache.commons.io.output.WriterOutputStream@flushOutput:302:0 |==> 1
6450:LVR:0:NEG:org.apache.commons.io.output.WriterOutputStream@flushOutput:302:0 |==> -1
6451:STD:<CALL>:<NO-OP>:org.apache.commons.io.output.WriterOutputStream@flushOutput:302:writer.write(decoderOut.array(), 0, decoderOut.position()) |==> <NO-OP>
6452:STD:<CALL>:<NO-OP>:org.apache.commons.io.output.WriterOutputStream@flushOutput:303:decoderOut.rewind() |==> <NO-OP>
6453:LVR:0:POS:org.apache.commons.io.output.WriterOutputStream@flushOutput:301:0 |==> 1
6454:LVR:0:NEG:org.apache.commons.io.output.WriterOutputStream@flushOutput:301:0 |==> -1
6455:ROR:>(int,int):!=(int,int):org.apache.commons.io.output.WriterOutputStream@flushOutput:301:decoderOut.position() > 0 |==> decoderOut.position() != 0
6456:ROR:>(int,int):>=(int,int):org.apache.commons.io.output.WriterOutputStream@flushOutput:301:decoderOut.position() > 0 |==> decoderOut.position() >= 0
6457:ROR:>(int,int):FALSE(int,int):org.apache.commons.io.output.WriterOutputStream@flushOutput:301:decoderOut.position() > 0 |==> false
6458:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.apache.commons.io.output.XmlStreamWriter@<init>:72:defaultEncoding != null |==> true
6459:STD:<CALL>:<NO-OP>:org.apache.commons.io.output.XmlStreamWriter@close:128:writer.write(xmlPrologWriter.toString()) |==> <NO-OP>
6460:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.io.output.XmlStreamWriter@close:125:writer == null |==> false
6461:STD:<CALL>:<NO-OP>:org.apache.commons.io.output.XmlStreamWriter@close:130:writer.close() |==> <NO-OP>
6462:STD:<CALL>:<NO-OP>:org.apache.commons.io.output.XmlStreamWriter@flush:141:writer.flush() |==> <NO-OP>
6463:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.apache.commons.io.output.XmlStreamWriter@flush:140:writer != null |==> true
6464:AOR:-(int,int):%(int,int):org.apache.commons.io.output.XmlStreamWriter@detectEncoding:158:BUFFER_SIZE - xmlProlog.length() |==> BUFFER_SIZE % xmlProlog.length()
6465:AOR:-(int,int):*(int,int):org.apache.commons.io.output.XmlStreamWriter@detectEncoding:158:BUFFER_SIZE - xmlProlog.length() |==> BUFFER_SIZE * xmlProlog.length()
6466:AOR:-(int,int):+(int,int):org.apache.commons.io.output.XmlStreamWriter@detectEncoding:158:BUFFER_SIZE - xmlProlog.length() |==> BUFFER_SIZE + xmlProlog.length()
6467:AOR:-(int,int):/(int,int):org.apache.commons.io.output.XmlStreamWriter@detectEncoding:158:BUFFER_SIZE - xmlProlog.length() |==> BUFFER_SIZE / xmlProlog.length()
6468:AOR:+(int,int):%(int,int):org.apache.commons.io.output.XmlStreamWriter@detectEncoding:157:xmlProlog.length() + len |==> xmlProlog.length() % len
6469:AOR:+(int,int):*(int,int):org.apache.commons.io.output.XmlStreamWriter@detectEncoding:157:xmlProlog.length() + len |==> xmlProlog.length() * len
6470:AOR:+(int,int):-(int,int):org.apache.commons.io.output.XmlStreamWriter@detectEncoding:157:xmlProlog.length() + len |==> xmlProlog.length() - len
6471:AOR:+(int,int):/(int,int):org.apache.commons.io.output.XmlStreamWriter@detectEncoding:157:xmlProlog.length() + len |==> xmlProlog.length() / len
6472:ROR:>(int,int):!=(int,int):org.apache.commons.io.output.XmlStreamWriter@detectEncoding:157:xmlProlog.length() + len > BUFFER_SIZE |==> xmlProlog.length() + len != BUFFER_SIZE
6473:ROR:>(int,int):>=(int,int):org.apache.commons.io.output.XmlStreamWriter@detectEncoding:157:xmlProlog.length() + len > BUFFER_SIZE |==> xmlProlog.length() + len >= BUFFER_SIZE
6474:ROR:>(int,int):FALSE(int,int):org.apache.commons.io.output.XmlStreamWriter@detectEncoding:157:xmlProlog.length() + len > BUFFER_SIZE |==> false
6475:STD:<CALL>:<NO-OP>:org.apache.commons.io.output.XmlStreamWriter@detectEncoding:160:xmlPrologWriter.write(cbuf, off, size) |==> <NO-OP>
6476:LVR:0:POS:org.apache.commons.io.output.XmlStreamWriter@detectEncoding:169:0 |==> 1
6477:LVR:0:NEG:org.apache.commons.io.output.XmlStreamWriter@detectEncoding:169:0 |==> -1
6478:LVR:POS:0:org.apache.commons.io.output.XmlStreamWriter@detectEncoding:172:1 |==> 0
6479:LVR:POS:NEG:org.apache.commons.io.output.XmlStreamWriter@detectEncoding:172:1 |==> -1
6480:LVR:POS:0:org.apache.commons.io.output.XmlStreamWriter@detectEncoding:173:1 |==> 0
6481:LVR:POS:NEG:org.apache.commons.io.output.XmlStreamWriter@detectEncoding:173:1 |==> -1
6482:LVR:POS:0:org.apache.commons.io.output.XmlStreamWriter@detectEncoding:173:1 |==> 0
6483:LVR:POS:NEG:org.apache.commons.io.output.XmlStreamWriter@detectEncoding:173:1 |==> -1
6484:AOR:-(int,int):%(int,int):org.apache.commons.io.output.XmlStreamWriter@detectEncoding:173:encoding.length() - 1 |==> encoding.length() % 1
6485:AOR:-(int,int):*(int,int):org.apache.commons.io.output.XmlStreamWriter@detectEncoding:173:encoding.length() - 1 |==> encoding.length() * 1
6486:AOR:-(int,int):+(int,int):org.apache.commons.io.output.XmlStreamWriter@detectEncoding:173:encoding.length() - 1 |==> encoding.length() + 1
6487:AOR:-(int,int):/(int,int):org.apache.commons.io.output.XmlStreamWriter@detectEncoding:173:encoding.length() - 1 |==> encoding.length() / 1
6488:COR:m.find():TRUE:org.apache.commons.io.output.XmlStreamWriter@detectEncoding:171:m.find() |==> false
6489:COR:m.find():FALSE:org.apache.commons.io.output.XmlStreamWriter@detectEncoding:171:m.find() |==> true
6490:ROR:>=(int,int):==(int,int):org.apache.commons.io.output.XmlStreamWriter@detectEncoding:180:xmlProlog.length() >= BUFFER_SIZE |==> xmlProlog.length() == BUFFER_SIZE
6491:ROR:>=(int,int):>(int,int):org.apache.commons.io.output.XmlStreamWriter@detectEncoding:180:xmlProlog.length() >= BUFFER_SIZE |==> xmlProlog.length() > BUFFER_SIZE
6492:ROR:>=(int,int):TRUE(int,int):org.apache.commons.io.output.XmlStreamWriter@detectEncoding:180:xmlProlog.length() >= BUFFER_SIZE |==> true
6493:LVR:0:POS:org.apache.commons.io.output.XmlStreamWriter@detectEncoding:167:0 |==> 1
6494:LVR:0:NEG:org.apache.commons.io.output.XmlStreamWriter@detectEncoding:167:0 |==> -1
6495:ROR:>(int,int):!=(int,int):org.apache.commons.io.output.XmlStreamWriter@detectEncoding:167:xmlPrologEnd > 0 |==> xmlPrologEnd != 0
6496:ROR:>(int,int):>=(int,int):org.apache.commons.io.output.XmlStreamWriter@detectEncoding:167:xmlPrologEnd > 0 |==> xmlPrologEnd >= 0
6497:ROR:>(int,int):FALSE(int,int):org.apache.commons.io.output.XmlStreamWriter@detectEncoding:167:xmlPrologEnd > 0 |==> false
6498:COR:xmlProlog.substring(0, 5).equals("<?xml"):TRUE:org.apache.commons.io.output.XmlStreamWriter@detectEncoding:164:xmlProlog.substring(0, 5).equals("<?xml") |==> false
6499:COR:xmlProlog.substring(0, 5).equals("<?xml"):FALSE:org.apache.commons.io.output.XmlStreamWriter@detectEncoding:164:xmlProlog.substring(0, 5).equals("<?xml") |==> true
6500:STD:<CALL>:<NO-OP>:org.apache.commons.io.output.XmlStreamWriter@detectEncoding:194:writer.write(xmlProlog.toString()) |==> <NO-OP>
6501:AOR:+(int,int):%(int,int):org.apache.commons.io.output.XmlStreamWriter@detectEncoding:196:off + size |==> off % size
6502:AOR:+(int,int):*(int,int):org.apache.commons.io.output.XmlStreamWriter@detectEncoding:196:off + size |==> off * size
6503:AOR:+(int,int):-(int,int):org.apache.commons.io.output.XmlStreamWriter@detectEncoding:196:off + size |==> off - size
6504:AOR:+(int,int):/(int,int):org.apache.commons.io.output.XmlStreamWriter@detectEncoding:196:off + size |==> off / size
6505:AOR:-(int,int):%(int,int):org.apache.commons.io.output.XmlStreamWriter@detectEncoding:196:len - size |==> len % size
6506:AOR:-(int,int):*(int,int):org.apache.commons.io.output.XmlStreamWriter@detectEncoding:196:len - size |==> len * size
6507:AOR:-(int,int):+(int,int):org.apache.commons.io.output.XmlStreamWriter@detectEncoding:196:len - size |==> len + size
6508:AOR:-(int,int):/(int,int):org.apache.commons.io.output.XmlStreamWriter@detectEncoding:196:len - size |==> len / size
6509:STD:<CALL>:<NO-OP>:org.apache.commons.io.output.XmlStreamWriter@detectEncoding:196:writer.write(cbuf, off + size, len - size) |==> <NO-OP>
6510:ROR:>(int,int):!=(int,int):org.apache.commons.io.output.XmlStreamWriter@detectEncoding:195:len > size |==> len != size
6511:ROR:>(int,int):>=(int,int):org.apache.commons.io.output.XmlStreamWriter@detectEncoding:195:len > size |==> len >= size
6512:ROR:>(int,int):FALSE(int,int):org.apache.commons.io.output.XmlStreamWriter@detectEncoding:195:len > size |==> false
6513:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.apache.commons.io.output.XmlStreamWriter@detectEncoding:190:encoding != null |==> true
6514:LVR:POS:0:org.apache.commons.io.output.XmlStreamWriter@detectEncoding:163:5 |==> 0
6515:LVR:POS:NEG:org.apache.commons.io.output.XmlStreamWriter@detectEncoding:163:5 |==> -5
6516:ROR:>=(int,int):==(int,int):org.apache.commons.io.output.XmlStreamWriter@detectEncoding:163:xmlProlog.length() >= 5 |==> xmlProlog.length() == 5
6517:ROR:>=(int,int):>(int,int):org.apache.commons.io.output.XmlStreamWriter@detectEncoding:163:xmlProlog.length() >= 5 |==> xmlProlog.length() > 5
6518:ROR:>=(int,int):TRUE(int,int):org.apache.commons.io.output.XmlStreamWriter@detectEncoding:163:xmlProlog.length() >= 5 |==> true
6519:STD:<CALL>:<NO-OP>:org.apache.commons.io.output.XmlStreamWriter@write:213:detectEncoding(cbuf, off, len) |==> <NO-OP>
6520:STD:<CALL>:<NO-OP>:org.apache.commons.io.output.XmlStreamWriter@write:215:writer.write(cbuf, off, len) |==> <NO-OP>
6521:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.apache.commons.io.output.XmlStreamWriter@write:212:xmlPrologWriter != null |==> true
