<?xml version="1.0" encoding="UTF-8"?>

<!-- ====================================================================== -->
<!-- Ant build file (http://ant.apache.org/) for Ant 1.6.2 or above.        -->
<!-- ====================================================================== -->

<!-- ====================================================================== -->
<!-- ===================== - DO NOT EDIT THIS FILE! - ===================== -->
<!-- ====================================================================== -->
<!--                                                                        -->
<!-- Any modifications will be overwritten.                                 -->
<!--                                                                        -->
<!-- Generated by Maven Ant Plugin on 10/20/14 1:22 PM                      -->
<!-- See: http://maven.apache.org/plugins/maven-ant-plugin/                 -->
<!--                                                                        -->
<!-- ====================================================================== -->

<project name="jfreechart-from-maven" xmlns:jacoco="antlib:org.jacoco.ant" default="package" basedir=".">

  <!-- ====================================================================== -->
  <!-- Build environment properties                                           -->
  <!-- ====================================================================== -->

  <property file="${user.home}/.m2/maven.properties"/>
  <property file="maven-build.properties"/>

  <property name="maven.build.finalName" value="jfreechart-1.0.17-SNAPSHOT"/>
  <property name="maven.build.dir" value="target"/>
  <property name="maven.build.outputDir" value="${maven.build.dir}/classes"/>
  <property name="maven.build.srcDir.0" value="source"/>
  <property name="maven.build.resourceDir.0" value="source"/>
  <property name="maven.build.testOutputDir" value="${maven.build.dir}/test-classes"/>
  <property name="maven.build.testDir.0" value="tests"/>
  <property name="maven.build.testResourceDir.0" value="src/test/resources"/>
  <property name="maven.test.reports" value="${maven.build.dir}/test-reports"/>
  <property name="maven.reporting.outputDirectory" value="${maven.build.dir}/site"/>

  <property name="maven.repo.local" value="${user.home}/.m2/repository"/>
  <property name="maven.settings.offline" value="false"/>
  <property name="maven.settings.interactiveMode" value="true"/>
  <property name="mutOp" value=":NONE"/>

<!-- ====================== Jacoco task ================================== -->
	 <taskdef uri="antlib:org.jacoco.ant" resource="org/jacoco/ant/antlib.xml">
		<classpath path="lib/jacocoant.jar"/>
	 </taskdef>

  <!-- ====================================================================== -->
  <!-- Defining classpaths                                                    -->
  <!-- ====================================================================== -->

  <path id="build.classpath">
    <pathelement location="${maven.repo.local}/org/jfree/jcommon/1.0.17/jcommon-1.0.17.jar"/>
    <pathelement location="${maven.repo.local}/xml-apis/xml-apis/1.3.04/xml-apis-1.3.04.jar"/>
    <pathelement location="${maven.repo.local}/javax/servlet/servlet-api/2.5/servlet-api-2.5.jar"/>
  </path>
  <path id="build.test.classpath">
    <pathelement location="${maven.repo.local}/org/jfree/jcommon/1.0.17/jcommon-1.0.17.jar"/>
    <pathelement location="${maven.repo.local}/xml-apis/xml-apis/1.3.04/xml-apis-1.3.04.jar"/>
    <pathelement location="${maven.repo.local}/javax/servlet/servlet-api/2.5/servlet-api-2.5.jar"/>
    <pathelement location="${maven.repo.local}/junit/junit/4.11/junit-4.11.jar"/>
    <pathelement location="${maven.repo.local}/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar"/>
  </path>

  <!-- ====================================================================== -->
  <!-- Cleaning up target                                                     -->
  <!-- ====================================================================== -->

  <target name="clean" description="Clean the output directory">
    <delete dir="${maven.build.dir}"/>
  </target>

  <!-- ====================================================================== -->
  <!-- Compilation target                                                     -->
  <!-- ====================================================================== -->

  <target name="compile" depends="get-deps" description="Compile the code">
    <mkdir dir="${maven.build.outputDir}"/>
    <javac destdir="${maven.build.outputDir}" 
           encoding="UTF-8" 
           nowarn="false" 
           debug="true" 
           optimize="false" 
           deprecation="true" 
           target="1.6" 
           verbose="false" 
           fork="true" 
           source="1.6"
includeantruntime="true"
executable="/home/hessahalkaoud/tools/major/bin/javac">
      <src>
        <pathelement location="${maven.build.srcDir.0}"/>
      </src>
      <classpath refid="build.classpath"/>
      	<compilerarg value="-XMutator${mutOp}"/>
    </javac>
    <copy todir="${maven.build.outputDir}">
      <fileset dir="${maven.build.resourceDir.0}">
        <include name="**/*.properties"/>
        <include name="**/*.jpg"/>
        <include name="**/*."/>
      </fileset>
    </copy>
  </target>

  <!-- ====================================================================== -->
  <!-- Test-compilation target                                                -->
  <!-- ====================================================================== -->

  <target name="compile-tests" 
          depends="compile" 
          description="Compile the test code" 
          unless="maven.test.skip">
    <mkdir dir="${maven.build.testOutputDir}"/>
    <javac destdir="${maven.build.testOutputDir}" 
           encoding="UTF-8" 
           nowarn="false" 
           debug="true" 
           optimize="false" 
           deprecation="true" 
           target="1.6" 
           verbose="false" 
           fork="false" 
           source="1.6">
      <src>
        <pathelement location="${maven.build.testDir.0}"/>
      </src>
      <classpath>
        <path refid="build.test.classpath"/>
        <pathelement location="${maven.build.outputDir}"/>
      </classpath>
    </javac>
  </target>

  <!-- ====================================================================== -->
  <!-- Run all tests                                                          -->
  <!-- ====================================================================== -->

  <target name="test" 
          depends="compile-tests, junit-missing" 
          unless="junit.skipped" 
          description="Run the test cases">
    <mkdir dir="${maven.test.reports}"/>
<!--<jacoco:coverage destfile="jacocoReport/jacoco.exec"> -->
    <junit printSummary="yes" haltonerror="false" haltonfailure="false" fork="true" dir=".">
      <sysproperty key="basedir" value="."/>
     <!-- <formatter type="xml"/>-->
      <formatter type="plain" usefile="false"/>
      <classpath>
        <path refid="build.test.classpath"/>
        <pathelement location="${maven.build.outputDir}"/>
        <pathelement location="${maven.build.testOutputDir}"/>
      </classpath>
      <batchtest todir="${maven.test.reports}" unless="test">
        <fileset dir="${maven.build.testDir.0}">
          <include name="**/*Test.java"/>
          <exclude name="**/JFreeChartTestSuite.java"/>
          <exclude name="**/*PackageTests.java"/>
		<!-- excluding 6 tests that require forking to match MAJOR run tests, because major is going to exclude the tests that requires forking-->
	    <exclude name="**/axis/AxisTest.java"/>
	    <exclude name="**/plot/MarkerTest.java"/>
	    <exclude name="**/data/ComparableObjectItemTest.java"/>
	    <exclude name="**/data/ComparableObjectSeriesTest.java"/>
	    <exclude name="**/data/function/LineFunction2DTest.java"/>
	    <exclude name="**/data/function/NormalDistributionFunction2DTest.java"/>
        </fileset>
      </batchtest>
      <batchtest todir="${maven.test.reports}" if="test">
        <fileset dir="${maven.build.testDir.0}">
          <include name="**/${test}.java"/>
          <exclude name="**/JFreeChartTestSuite.java"/>
          <exclude name="**/*PackageTests.java"/>
        </fileset>
      </batchtest>
    </junit>
 <!-- </jacoco:coverage> -->
  </target>

		<target name="jacoco.report" depends="test">
			  <jacoco:report>               
				<executiondata>
				    <file file="jacocoReport/jacoco.exec"/>
				</executiondata>
				                   
				<structure name="jfreechart-1.0.17">
				    <classfiles>
				        <fileset dir="${maven.build.outputDir}"/>
				    </classfiles>
				    <sourcefiles encoding="UTF-8">
				        <fileset dir="${maven.build.srcDir.0}"/>
				    </sourcefiles>
				</structure>

				<html destdir="jacocoReport/site/jacoco"/>
				<csv destfile="jacocoReport/site/jacoco/report.csv"/>
			  </jacoco:report>
		</target>

	 <target name="mutation-test"   
		  description="Run the test cases using MAJOR">
	    <junit printSummary="no" haltonerror="true" haltonfailure="false" fork="false"
				 mutationAnalysis="true"
				 resultFile="results.csv"
				 killDetailsFile="killed.csv">
	      <classpath>
		<path refid="build.test.classpath"/>
		<pathelement location="${maven.build.outputDir}"/>
		<pathelement location="${maven.build.testOutputDir}"/>
	      </classpath>
	      <batchtest todir="${maven.test.reports}" unless="test">
		<fileset dir="${maven.build.testDir.0}">
		  <include name="**/*Test.java"/>
		  <exclude name="**/JFreeChartTestSuite.java"/>
		  <exclude name="**/*PackageTests.java"/>
		<!-- excluding 6 tests that require forking to match MAJOR run tests, because major is going to exclude the tests that requires forking-->
	    <exclude name="**/axis/AxisTest.java"/>
	    <exclude name="**/plot/MarkerTest.java"/>
	    <exclude name="**/data/ComparableObjectItemTest.java"/>
	    <exclude name="**/data/ComparableObjectSeriesTest.java"/>
	    <exclude name="**/data/function/LineFunction2DTest.java"/>
	    <exclude name="**/data/function/NormalDistributionFunction2DTest.java"/>
		</fileset>
	      </batchtest>
	    </junit>
	  </target>

  <target name="test-junit-present">
    <available classname="junit.framework.Test" property="junit.present"/>
  </target>

  <target name="test-junit-status" 
          depends="test-junit-present">
    <condition property="junit.missing">
      <and>
        <isfalse value="${junit.present}"/>
        <isfalse value="${maven.test.skip}"/>
      </and>
    </condition>
    <condition property="junit.skipped">
      <or>
        <isfalse value="${junit.present}"/>
        <istrue value="${maven.test.skip}"/>
      </or>
    </condition>
  </target>

  <target name="junit-missing" 
          depends="test-junit-status" 
          if="junit.missing">
    <echo>=================================== WARNING ===================================</echo>
    <echo> JUnit is not present in your $ANT_HOME/lib directory. Tests not executed.</echo>
    <echo>===============================================================================</echo>
  </target>

  <!-- ====================================================================== -->
  <!-- Javadoc target                                                         -->
  <!-- ====================================================================== -->

  <target name="javadoc" description="Generates the Javadoc of the application">
    <javadoc sourcepath="${maven.build.srcDir.0}" 
             packagenames="*" 
             destdir="${maven.reporting.outputDirectory}/apidocs" 
             access="protected" 
             old="false" 
             verbose="false" 
             version="true" 
             use="true" 
             author="true" 
             splitindex="false" 
             nodeprecated="false" 
             nodeprecatedlist="false" 
             notree="false" 
             noindex="false" 
             nohelp="false" 
             nonavbar="false" 
             serialwarn="false" 
             charset="ISO-8859-1" 
             linksource="false" 
             breakiterator="false"/>
  </target>

  <!-- ====================================================================== -->
  <!-- Package target                                                         -->
  <!-- ====================================================================== -->

  <target name="package" depends="compile,test" description="Package the application">
    <jar jarfile="${maven.build.dir}/${maven.build.finalName}.jar" 
         compress="true" 
         index="false" 
         basedir="${maven.build.outputDir}" 
         excludes="**/package.html"/>
  </target>

  <!-- ====================================================================== -->
  <!-- A dummy target for the package named after the type it creates         -->
  <!-- ====================================================================== -->

  <target name="jar" depends="package" description="Builds the jar for the application"/>

  <!-- ====================================================================== -->
  <!-- Download dependencies target                                           -->
  <!-- ====================================================================== -->

  <target name="test-offline">
    <condition property="maven.mode.offline">
      <equals arg1="${maven.settings.offline}" arg2="true"/>
    </condition>
  </target>

  <target name="get-deps" 
          depends="test-offline" 
          description="Download all dependencies" 
          unless="maven.mode.offline">
    <mkdir dir="${maven.repo.local}"/>
    <mkdir dir="${maven.repo.local}/org/jfree/jcommon/1.0.17"/>
    <get src="https://oss.sonatype.org/content/repositories/snapshots/org/jfree/jcommon/1.0.17/jcommon-1.0.17.jar" 
         dest="${maven.repo.local}/org/jfree/jcommon/1.0.17/jcommon-1.0.17.jar" 
         usetimestamp="false" 
         ignoreerrors="true"/>
    <get src="http://repo1.maven.org/maven2/org/jfree/jcommon/1.0.17/jcommon-1.0.17.jar" 
         dest="${maven.repo.local}/org/jfree/jcommon/1.0.17/jcommon-1.0.17.jar" 
         usetimestamp="false" 
         ignoreerrors="true"/>
    <mkdir dir="${maven.repo.local}/xml-apis/xml-apis/1.3.04"/>
    <get src="https://oss.sonatype.org/content/repositories/snapshots/xml-apis/xml-apis/1.3.04/xml-apis-1.3.04.jar" 
         dest="${maven.repo.local}/xml-apis/xml-apis/1.3.04/xml-apis-1.3.04.jar" 
         usetimestamp="false" 
         ignoreerrors="true"/>
    <get src="http://repo1.maven.org/maven2/xml-apis/xml-apis/1.3.04/xml-apis-1.3.04.jar" 
         dest="${maven.repo.local}/xml-apis/xml-apis/1.3.04/xml-apis-1.3.04.jar" 
         usetimestamp="false" 
         ignoreerrors="true"/>
    <mkdir dir="${maven.repo.local}/javax/servlet/servlet-api/2.5"/>
    <get src="https://oss.sonatype.org/content/repositories/snapshots/javax/servlet/servlet-api/2.5/servlet-api-2.5.jar" 
         dest="${maven.repo.local}/javax/servlet/servlet-api/2.5/servlet-api-2.5.jar" 
         usetimestamp="false" 
         ignoreerrors="true"/>
    <get src="http://repo1.maven.org/maven2/javax/servlet/servlet-api/2.5/servlet-api-2.5.jar" 
         dest="${maven.repo.local}/javax/servlet/servlet-api/2.5/servlet-api-2.5.jar" 
         usetimestamp="false" 
         ignoreerrors="true"/>
    <mkdir dir="${maven.repo.local}/junit/junit/4.11"/>
    <get src="https://oss.sonatype.org/content/repositories/snapshots/junit/junit/4.11/junit-4.11.jar" 
         dest="${maven.repo.local}/junit/junit/4.11/junit-4.11.jar" 
         usetimestamp="false" 
         ignoreerrors="true"/>
    <get src="http://repo1.maven.org/maven2/junit/junit/4.11/junit-4.11.jar" 
         dest="${maven.repo.local}/junit/junit/4.11/junit-4.11.jar" 
         usetimestamp="false" 
         ignoreerrors="true"/>
    <mkdir dir="${maven.repo.local}/org/hamcrest/hamcrest-core/1.3"/>
    <get src="https://oss.sonatype.org/content/repositories/snapshots/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar" 
         dest="${maven.repo.local}/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar" 
         usetimestamp="false" 
         ignoreerrors="true"/>
    <get src="http://repo1.maven.org/maven2/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar" 
         dest="${maven.repo.local}/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar" 
         usetimestamp="false" 
         ignoreerrors="true"/>
  </target>

</project>
