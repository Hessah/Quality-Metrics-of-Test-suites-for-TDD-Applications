/*
 * This file was automatically generated by EvoSuite
 */

package net.sf.lavalamp;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import java.util.Calendar;
import java.util.GregorianCalendar;
import java.util.Locale;
import net.sf.lavalamp.LavaLogger;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class LavaLoggerEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      LavaLogger lavaLogger0 = new LavaLogger();
      lavaLogger0.debug("o");
  }

  @Test
  public void test1()  throws Throwable  {
      LavaLogger lavaLogger0 = new LavaLogger();
      // Undeclared exception!
      try {
        lavaLogger0.error((Throwable) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test2()  throws Throwable  {
      LavaLogger lavaLogger0 = new LavaLogger();
      Locale locale0 = Locale.CANADA_FRENCH;
      GregorianCalendar gregorianCalendar0 = (GregorianCalendar)Calendar.getInstance(locale0);
      lavaLogger0.error((Calendar) gregorianCalendar0, "#f)4uJB1guS3Qc~*]V");
      assertEquals(1372799549460L, gregorianCalendar0.getTimeInMillis());
      assertEquals("java.util.GregorianCalendar[time=1372799549460,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"Europe/Belfast\",offset=0,dstSavings=3600000,useDaylight=true,transitions=242,lastRule=java.util.SimpleTimeZone[id=Europe/Belfast,offset=0,dstSavings=3600000,useDaylight=true,startYear=0,startMode=2,startMonth=2,startDay=-1,startDayOfWeek=1,startTime=3600000,startTimeMode=2,endMode=2,endMonth=9,endDay=-1,endDayOfWeek=1,endTime=3600000,endTimeMode=2]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2013,MONTH=6,WEEK_OF_YEAR=27,WEEK_OF_MONTH=1,DAY_OF_MONTH=2,DAY_OF_YEAR=183,DAY_OF_WEEK=3,DAY_OF_WEEK_IN_MONTH=1,AM_PM=1,HOUR=10,HOUR_OF_DAY=22,MINUTE=12,SECOND=29,MILLISECOND=460,ZONE_OFFSET=0,DST_OFFSET=3600000]", gregorianCalendar0.toString());
  }

  @Test
  public void test3()  throws Throwable  {
      LavaLogger lavaLogger0 = new LavaLogger();
      lavaLogger0.error(";~");
  }

  @Test
  public void test4()  throws Throwable  {
      LavaLogger lavaLogger0 = new LavaLogger();
      lavaLogger0.info("");
  }
}
