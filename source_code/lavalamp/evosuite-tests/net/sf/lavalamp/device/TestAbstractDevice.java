/*
 * This file was automatically generated by EvoSuite
 */

package net.sf.lavalamp.device;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import java.util.Calendar;
import java.util.GregorianCalendar;
import net.sf.lavalamp.device.Actions;
import net.sf.lavalamp.device.DeviceProperties;
import net.sf.lavalamp.device.DummyDevice;
import net.sf.lavalamp.device.OnError;
import net.sf.lavalamp.device.Period;
import net.sf.lavalamp.site.Builds;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class TestAbstractDevice {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      DummyDevice dummyDevice0 = new DummyDevice();
      dummyDevice0.setBuilds((Builds) null);
      assertEquals("dummy device null", dummyDevice0.toString());
  }

  @Test
  public void test1()  throws Throwable  {
      DummyDevice dummyDevice0 = new DummyDevice();
      dummyDevice0.setAlwaysOffPeriod((Period) null);
      assertEquals("dummy device null", dummyDevice0.toString());
  }

  @Test
  public void test2()  throws Throwable  {
      DummyDevice dummyDevice0 = new DummyDevice();
      Actions actions0 = dummyDevice0.getActions();
      assertNull(actions0);
  }

  @Test
  public void test3()  throws Throwable  {
      DummyDevice dummyDevice0 = new DummyDevice();
      dummyDevice0.turnOff();
      assertEquals("dummy device null", dummyDevice0.toString());
  }

  @Test
  public void test4()  throws Throwable  {
      DummyDevice dummyDevice0 = new DummyDevice();
      GregorianCalendar gregorianCalendar0 = new GregorianCalendar();
      // Undeclared exception!
      try {
        dummyDevice0.isAlwaysOff((Calendar) gregorianCalendar0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test5()  throws Throwable  {
      DummyDevice dummyDevice0 = new DummyDevice();
      dummyDevice0.turnOn();
      assertEquals("dummy device null", dummyDevice0.toString());
  }

  @Test
  public void test6()  throws Throwable  {
      DummyDevice dummyDevice0 = new DummyDevice();
      Builds builds0 = dummyDevice0.getBuilds();
      assertNull(builds0);
  }

  @Test
  public void test7()  throws Throwable  {
      DummyDevice dummyDevice0 = new DummyDevice();
      DeviceProperties deviceProperties0 = new DeviceProperties();
      deviceProperties0.setOnWhenSuccessful(true);
      dummyDevice0.setProperties(deviceProperties0);
      assertEquals("\n\tdevice=null, className=null,  off=[start=00:00, end=00:00], onError=BLINK, onWhenSuccessful=true, path=nullnull", deviceProperties0.toString());
  }

  @Test
  public void test8()  throws Throwable  {
      DummyDevice dummyDevice0 = new DummyDevice();
      DeviceProperties deviceProperties0 = new DeviceProperties();
      OnError onError0 = OnError.STATUSQUO;
      deviceProperties0.setOnError(onError0);
      dummyDevice0.setProperties(deviceProperties0);
      assertEquals("\n\tdevice=null, className=null,  off=[start=00:00, end=00:00], onError=STATUSQUO, onWhenSuccessful=false, path=nullnull", deviceProperties0.toString());
  }
}
