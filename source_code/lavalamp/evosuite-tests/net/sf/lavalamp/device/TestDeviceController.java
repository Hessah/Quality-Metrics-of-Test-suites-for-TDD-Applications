/*
 * This file was automatically generated by EvoSuite
 */

package net.sf.lavalamp.device;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import java.util.LinkedList;
import java.util.List;
import net.sf.lavalamp.device.Device;
import net.sf.lavalamp.device.DeviceController;
import net.sf.lavalamp.device.DummyDevice;
import net.sf.lavalamp.site.Builds;
import net.sf.lavalamp.site.MissingBuildException;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class TestDeviceController {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      DeviceController deviceController0 = new DeviceController((List<Device>) null);
      List<Device> list0 = deviceController0.getDevices();
      assertNull(list0);
  }

  @Test
  public void test1()  throws Throwable  {
      LinkedList<Device> linkedList0 = new LinkedList<Device>();
      DeviceController deviceController0 = new DeviceController((List<Device>) linkedList0);
      try {
        deviceController0.setStatusForBuild("5^", true);
        fail("Expecting exception: MissingBuildException");
      } catch(MissingBuildException e) {
        /*
         * 5^ not found
         */
      }
  }

  @Test
  public void test2()  throws Throwable  {
      LinkedList<Device> linkedList0 = new LinkedList<Device>();
      DummyDevice dummyDevice0 = new DummyDevice();
      linkedList0.add((Device) dummyDevice0);
      DeviceController deviceController0 = new DeviceController((List<Device>) linkedList0);
      // Undeclared exception!
      try {
        deviceController0.setStatusForBuild("5^", true);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test3()  throws Throwable  {
      DeviceController deviceController0 = new DeviceController((List<Device>) null);
      Builds builds0 = new Builds();
      DummyDevice dummyDevice0 = new DummyDevice();
      // Undeclared exception!
      try {
        deviceController0.turnOffOrOn((List<String>) null, builds0, (Device) dummyDevice0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }
}
