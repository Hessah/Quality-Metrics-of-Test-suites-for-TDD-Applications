/*
 * This file was automatically generated by EvoSuite
 */

package net.sf.lavalamp.device;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import java.util.LinkedList;
import java.util.List;
import net.sf.lavalamp.device.Device;
import net.sf.lavalamp.device.DummyDevice;
import net.sf.lavalamp.device.HtmlFormatter;
import net.sf.lavalamp.site.Build;
import net.sf.lavalamp.site.Builds;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class TestHtmlFormatter {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      LinkedList<Device> linkedList0 = new LinkedList<Device>();
      HtmlFormatter htmlFormatter0 = new HtmlFormatter((List<Device>) linkedList0);
      DummyDevice dummyDevice0 = new DummyDevice();
      linkedList0.add((Device) dummyDevice0);
      Builds builds0 = new Builds();
      Build build0 = new Build("");
      builds0.add(build0);
      dummyDevice0.setBuilds(builds0);
      String string0 = htmlFormatter0.toHtml();
      assertEquals("<h2>dummy device null</h2><ul><li><font color='green'> build  successful (null)</font></li></ul>", htmlFormatter0.toHtml());
      assertNotNull(string0);
      assertEquals("<h2>dummy device null</h2><ul><li><font color='green'> build  successful (null)</font></li></ul>", string0);
  }
}
