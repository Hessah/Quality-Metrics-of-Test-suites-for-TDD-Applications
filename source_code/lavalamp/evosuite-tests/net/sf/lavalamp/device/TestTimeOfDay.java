/*
 * This file was automatically generated by EvoSuite
 */

package net.sf.lavalamp.device;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import net.sf.lavalamp.device.TimeOfDay;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class TestTimeOfDay {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      TimeOfDay timeOfDay0 = new TimeOfDay(0, 0);
      Integer integer0 = timeOfDay0.getHours();
      assertEquals("0:0", timeOfDay0.toString());
      assertEquals(0, (int)integer0);
  }

  @Test
  public void test1()  throws Throwable  {
      TimeOfDay timeOfDay0 = new TimeOfDay(0, 0);
      Integer integer0 = timeOfDay0.getMinutes();
      assertEquals("0:0", timeOfDay0.toString());
      assertEquals(0, (int)integer0);
  }

  @Test
  public void test2()  throws Throwable  {
      TimeOfDay timeOfDay0 = new TimeOfDay(0, 0);
      String string0 = timeOfDay0.toString();
      assertNotNull(string0);
      assertEquals("0:0", string0);
  }

  @Test
  public void test3()  throws Throwable  {
      TimeOfDay timeOfDay0 = new TimeOfDay(0, 0);
      int int0 = timeOfDay0.hashCode();
      assertEquals("0:0", timeOfDay0.toString());
      assertEquals(0, int0);
  }

  @Test
  public void test4()  throws Throwable  {
      TimeOfDay timeOfDay0 = null;
      try {
        timeOfDay0 = new TimeOfDay((String) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test5()  throws Throwable  {
      TimeOfDay timeOfDay0 = new TimeOfDay(710, 1798);
      int int0 = timeOfDay0.compareTo(timeOfDay0);
      assertEquals(0, int0);
      assertEquals("710:1798", timeOfDay0.toString());
  }

  @Test
  public void test6()  throws Throwable  {
      TimeOfDay timeOfDay0 = new TimeOfDay(0, 0);
      TimeOfDay timeOfDay1 = new TimeOfDay(1, 1);
      int int0 = timeOfDay0.compareTo(timeOfDay1);
      assertEquals((-1), int0);
      assertEquals("1:1", timeOfDay1.toString());
  }

  @Test
  public void test7()  throws Throwable  {
      TimeOfDay timeOfDay0 = new TimeOfDay(0, 0);
      boolean boolean0 = timeOfDay0.equals((Object) null);
      assertEquals(false, boolean0);
      assertEquals("0:0", timeOfDay0.toString());
  }

  @Test
  public void test8()  throws Throwable  {
      TimeOfDay timeOfDay0 = new TimeOfDay(0, 0);
      boolean boolean0 = timeOfDay0.equals((Object) "1");
      assertEquals(false, boolean0);
      assertEquals("0:0", timeOfDay0.toString());
  }

  @Test
  public void test9()  throws Throwable  {
      TimeOfDay timeOfDay0 = new TimeOfDay(1, (-5));
      TimeOfDay timeOfDay1 = new TimeOfDay(1, 1);
      boolean boolean0 = timeOfDay0.equals((Object) timeOfDay1);
      assertEquals("1:-5", timeOfDay0.toString());
      assertEquals(false, boolean0);
  }

  @Test
  public void test10()  throws Throwable  {
      TimeOfDay timeOfDay0 = new TimeOfDay(710, 1798);
      TimeOfDay timeOfDay1 = new TimeOfDay(0, 0);
      boolean boolean0 = timeOfDay0.equals((Object) timeOfDay1);
      assertEquals(false, boolean0);
      assertEquals("710:1798", timeOfDay0.toString());
  }

  @Test
  public void test11()  throws Throwable  {
      TimeOfDay timeOfDay0 = new TimeOfDay(1, 1);
      TimeOfDay timeOfDay1 = new TimeOfDay(1, 1);
      boolean boolean0 = timeOfDay0.equals((Object) timeOfDay1);
      assertEquals(true, boolean0);
      assertEquals("1:1", timeOfDay0.toString());
  }
}
