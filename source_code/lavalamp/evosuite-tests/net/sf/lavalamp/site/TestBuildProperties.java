/*
 * This file was automatically generated by EvoSuite
 */

package net.sf.lavalamp.site;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import net.sf.lavalamp.properties.MissingPropertyException;
import net.sf.lavalamp.site.BuildProperties;
import net.sf.lavalamp.site.SiteProperties;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class TestBuildProperties {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      BuildProperties buildProperties0 = new BuildProperties();
      String string0 = buildProperties0.toString();
      assertNotNull(string0);
      assertEquals("\n\t\tbuildId=null,  null", string0);
  }

  @Test
  public void test1()  throws Throwable  {
      BuildProperties buildProperties0 = new BuildProperties();
      SiteProperties siteProperties0 = buildProperties0.getSiteProperties();
      assertNull(siteProperties0);
  }

  @Test
  public void test2()  throws Throwable  {
      BuildProperties buildProperties0 = new BuildProperties();
      String string0 = buildProperties0.getBuild();
      assertNull(string0);
  }

  @Test
  public void test3()  throws Throwable  {
      BuildProperties buildProperties0 = new BuildProperties();
      SiteProperties siteProperties0 = new SiteProperties();
      buildProperties0.setSiteProperties(siteProperties0);
      assertEquals("net.sf.lavalamp.site.UrlGetter", siteProperties0.getGetterClass());
  }

  @Test
  public void test4()  throws Throwable  {
      BuildProperties buildProperties0 = new BuildProperties();
      buildProperties0.setBuild("");
      buildProperties0.check();
      assertEquals("", buildProperties0.getBuild());
  }

  @Test
  public void test5()  throws Throwable  {
      BuildProperties buildProperties0 = new BuildProperties();
      // Undeclared exception!
      try {
        buildProperties0.check();
        fail("Expecting exception: MissingPropertyException");
      } catch(MissingPropertyException e) {
        /*
         * build must be specified in properties file
         */
      }
  }
}
