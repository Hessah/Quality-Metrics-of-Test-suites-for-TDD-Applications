/*
 * This file was automatically generated by EvoSuite
 */

package net.sf.lavalamp.site;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import java.io.IOException;
import net.sf.lavalamp.site.LoginRequiredException;
import net.sf.lavalamp.site.UrlGetter;
import org.apache.commons.httpclient.NTCredentials;
import org.apache.commons.httpclient.UsernamePasswordCredentials;
import org.apache.commons.httpclient.methods.GetMethod;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class TestUrlGetter {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      UrlGetter urlGetter0 = new UrlGetter();
      // Undeclared exception!
      try {
        urlGetter0.get("I");
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
        /*
         * host parameter is null
         */
      }
  }

  @Test
  public void test1()  throws Throwable  {
      UrlGetter urlGetter0 = new UrlGetter();
      String string0 = urlGetter0.getMaskedUrl("null*****", (char[]) null);
      assertEquals("null*****", string0);
  }

  @Test
  public void test2()  throws Throwable  {
      UrlGetter urlGetter0 = new UrlGetter();
      char[] charArray0 = new char[8];
      String string0 = urlGetter0.getMaskedUrl((String) null, charArray0);
      assertNotNull(string0);
      assertEquals("null*****", string0);
  }

  @Test
  public void test3()  throws Throwable  {
      UrlGetter urlGetter0 = new UrlGetter();
      GetMethod getMethod0 = new GetMethod();
      try {
        urlGetter0.handleStatusCode(getMethod0, 122);
        fail("Expecting exception: IOException");
      } catch(IOException e) {
        /*
         * Method failed: 122 null
         */
      }
  }

  @Test
  public void test4()  throws Throwable  {
      UrlGetter urlGetter0 = new UrlGetter();
      GetMethod getMethod0 = new GetMethod();
      try {
        urlGetter0.handleStatusCode(getMethod0, 401);
        fail("Expecting exception: LoginRequiredException");
      } catch(LoginRequiredException e) {
        /*
         * Unauthorized 401
         */
      }
  }

  @Test
  public void test5()  throws Throwable  {
      UrlGetter urlGetter0 = new UrlGetter();
      try {
        urlGetter0.handleStatusCode((GetMethod) null, 403);
        fail("Expecting exception: LoginRequiredException");
      } catch(LoginRequiredException e) {
        /*
         * Forbidden 403
         */
      }
  }

  @Test
  public void test6()  throws Throwable  {
      UrlGetter urlGetter0 = new UrlGetter();
      GetMethod getMethod0 = new GetMethod();
      urlGetter0.handleStatusCode(getMethod0, 200);
      assertEquals(true, getMethod0.getDoAuthentication());
  }

  @Test
  public void test7()  throws Throwable  {
      UrlGetter urlGetter0 = new UrlGetter();
      NTCredentials nTCredentials0 = new NTCredentials();
      urlGetter0.setCredentials((UsernamePasswordCredentials) nTCredentials0);
      // Undeclared exception!
      try {
        urlGetter0.get("I");
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
        /*
         * host parameter is null
         */
      }
  }
}
