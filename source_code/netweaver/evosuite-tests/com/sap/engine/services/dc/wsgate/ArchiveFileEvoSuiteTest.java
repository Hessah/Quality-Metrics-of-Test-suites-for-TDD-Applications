/*
 * This file was automatically generated by EvoSuite
 */

package com.sap.engine.services.dc.wsgate;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.sap.engine.services.dc.wsgate.ArchiveFile;
import javax.xml.namespace.QName;
import org.apache.axis.description.TypeDesc;
import org.apache.axis.encoding.ser.BeanDeserializer;
import org.apache.axis.encoding.ser.BeanSerializer;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class ArchiveFileEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      ArchiveFile archiveFile0 = new ArchiveFile();
      ArchiveFile archiveFile1 = new ArchiveFile();
      boolean boolean0 = archiveFile0.equals((Object) archiveFile1);
      assertEquals(true, boolean0);
  }

  @Test
  public void test1()  throws Throwable  {
      TypeDesc typeDesc0 = ArchiveFile.getTypeDesc();
      assertEquals(false, typeDesc0.hasAttributes());
  }

  @Test
  public void test2()  throws Throwable  {
      ArchiveFile archiveFile0 = new ArchiveFile();
      archiveFile0.setFileName("STDOUT");
      ArchiveFile archiveFile1 = new ArchiveFile();
      boolean boolean0 = archiveFile0.equals((Object) archiveFile1);
      assertFalse(archiveFile1.equals(archiveFile0));
      assertEquals(false, boolean0);
  }

  @Test
  public void test3()  throws Throwable  {
      Class<?> class0 = QName.class;
      QName qName0 = new QName("");
      BeanDeserializer beanDeserializer0 = (BeanDeserializer)ArchiveFile.getDeserializer("", (Class) class0, qName0);
      assertEquals("Axis SAX Mechanism", beanDeserializer0.getMechanismType());
  }

  @Test
  public void test4()  throws Throwable  {
      Class<?> class0 = QName.class;
      QName qName0 = new QName("");
      BeanSerializer beanSerializer0 = (BeanSerializer)ArchiveFile.getSerializer("", (Class) class0, qName0);
      assertEquals("Axis SAX Mechanism", beanSerializer0.getMechanismType());
  }

  @Test
  public void test5()  throws Throwable  {
      ArchiveFile archiveFile0 = new ArchiveFile();
      archiveFile0.setContent((byte[]) null);
      assertNull(archiveFile0.getFileName());
  }

  @Test
  public void test6()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      ArchiveFile archiveFile0 = new ArchiveFile(byteArray0, "Be;j7LjqR:S8GlW>v8");
      boolean boolean0 = archiveFile0.equals((Object) "Be;j7LjqR:S8GlW>v8");
      assertEquals(false, boolean0);
  }

  @Test
  public void test7()  throws Throwable  {
      ArchiveFile archiveFile0 = new ArchiveFile();
      ArchiveFile archiveFile1 = new ArchiveFile((byte[]) null, "");
      boolean boolean0 = archiveFile0.equals((Object) archiveFile1);
      assertFalse(archiveFile1.equals(archiveFile0));
      assertEquals(false, boolean0);
  }

  @Test
  public void test8()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      ArchiveFile archiveFile0 = new ArchiveFile();
      ArchiveFile archiveFile1 = new ArchiveFile(byteArray0, "r327Y$Aa#");
      boolean boolean0 = archiveFile1.equals((Object) archiveFile0);
      assertEquals(false, boolean0);
  }

  @Test
  public void test9()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      ArchiveFile archiveFile0 = new ArchiveFile();
      ArchiveFile archiveFile1 = new ArchiveFile(byteArray0, "r327Y$Aa#");
      boolean boolean0 = archiveFile0.equals((Object) archiveFile1);
      assertEquals(false, boolean0);
  }

  @Test
  public void test10()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      ArchiveFile archiveFile0 = new ArchiveFile(byteArray0, "r327Y$Aa#");
      ArchiveFile archiveFile1 = new ArchiveFile(byteArray0, "r327Y$Aa#");
      boolean boolean0 = archiveFile0.equals((Object) archiveFile1);
      assertEquals(true, boolean0);
  }

  @Test
  public void test11()  throws Throwable  {
      ArchiveFile archiveFile0 = new ArchiveFile();
      int int0 = archiveFile0.hashCode();
      assertEquals(1, int0);
  }

  @Test
  public void test12()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      ArchiveFile archiveFile0 = new ArchiveFile(byteArray0, "r327Y$Aa#");
      int int0 = archiveFile0.hashCode();
      assertEquals(1881081043, int0);
  }
}
