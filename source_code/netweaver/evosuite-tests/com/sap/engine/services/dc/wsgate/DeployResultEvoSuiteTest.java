/*
 * This file was automatically generated by EvoSuite
 */

package com.sap.engine.services.dc.wsgate;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.sap.engine.services.dc.wsgate.Application;
import com.sap.engine.services.dc.wsgate.DeployResult;
import javax.xml.namespace.QName;
import org.apache.axis.description.TypeDesc;
import org.apache.axis.encoding.ser.BeanDeserializer;
import org.apache.axis.encoding.ser.BeanSerializer;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class DeployResultEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      DeployResult deployResult0 = new DeployResult();
      // Undeclared exception!
      try {
        deployResult0.getApplications((-980));
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test1()  throws Throwable  {
      Application[] applicationArray0 = new Application[13];
      DeployResult deployResult0 = new DeployResult(applicationArray0, "M|xn'eJ", "M|xn'eJ");
      DeployResult deployResult1 = new DeployResult(applicationArray0, "M|xn'eJ", "M|xn'eJ");
      boolean boolean0 = deployResult0.equals((Object) deployResult1);
      assertEquals(true, boolean0);
  }

  @Test
  public void test2()  throws Throwable  {
      Class<?> class0 = Application.class;
      QName qName0 = new QName("o+Y\"^/Ni");
      BeanDeserializer beanDeserializer0 = (BeanDeserializer)DeployResult.getDeserializer("o+Y\"^/Ni", (Class) class0, qName0);
      assertEquals("Axis SAX Mechanism", beanDeserializer0.getMechanismType());
  }

  @Test
  public void test3()  throws Throwable  {
      TypeDesc typeDesc0 = DeployResult.getTypeDesc();
      assertEquals(false, typeDesc0.hasAttributes());
  }

  @Test
  public void test4()  throws Throwable  {
      Class<?> class0 = Application.class;
      QName qName0 = new QName("o+Y\"^/Ni");
      BeanSerializer beanSerializer0 = (BeanSerializer)DeployResult.getSerializer("o+Y\"^/Ni", (Class) class0, qName0);
      assertEquals("Axis SAX Mechanism", beanSerializer0.getMechanismType());
  }

  @Test
  public void test5()  throws Throwable  {
      Application[] applicationArray0 = new Application[13];
      DeployResult deployResult0 = new DeployResult(applicationArray0, "M|xn'eJ", "M|xn'eJ");
      deployResult0.setApplications(applicationArray0);
      assertEquals("M|xn'eJ", deployResult0.getStatus());
  }

  @Test
  public void test6()  throws Throwable  {
      Application[] applicationArray0 = new Application[8];
      Application application0 = new Application();
      DeployResult deployResult0 = new DeployResult(applicationArray0, "%T~/-$", "%T~/-$");
      // Undeclared exception!
      try {
        deployResult0.setApplications(13, application0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      } catch(ArrayIndexOutOfBoundsException e) {
        /*
         * 13
         */
      }
  }

  @Test
  public void test7()  throws Throwable  {
      DeployResult deployResult0 = new DeployResult();
      boolean boolean0 = deployResult0.equals((Object) "o+Y\"^/Ni");
      assertEquals(false, boolean0);
  }

  @Test
  public void test8()  throws Throwable  {
      Application[] applicationArray0 = new Application[9];
      DeployResult deployResult0 = new DeployResult(applicationArray0, "^", "^");
      DeployResult deployResult1 = new DeployResult();
      boolean boolean0 = deployResult0.equals((Object) deployResult1);
      assertEquals(false, boolean0);
  }

  @Test
  public void test9()  throws Throwable  {
      DeployResult deployResult0 = new DeployResult();
      Application[] applicationArray0 = new Application[3];
      DeployResult deployResult1 = new DeployResult(applicationArray0, "Tg(", "Tg(");
      boolean boolean0 = deployResult0.equals((Object) deployResult1);
      assertEquals(false, boolean0);
  }

  @Test
  public void test10()  throws Throwable  {
      DeployResult deployResult0 = new DeployResult();
      DeployResult deployResult1 = new DeployResult();
      boolean boolean0 = deployResult0.equals((Object) deployResult1);
      assertEquals(true, boolean0);
  }

  @Test
  public void test11()  throws Throwable  {
      DeployResult deployResult0 = new DeployResult();
      DeployResult deployResult1 = new DeployResult();
      assertTrue(deployResult1.equals(deployResult0));
      
      deployResult1.setStatus("ldagMcem~FHH~6Xm");
      boolean boolean0 = deployResult0.equals((Object) deployResult1);
      assertFalse(deployResult1.equals(deployResult0));
      assertEquals(false, boolean0);
  }

  @Test
  public void test12()  throws Throwable  {
      DeployResult deployResult0 = new DeployResult();
      String string0 = "!4:T5B?.J\\uvI.wH%2";
      deployResult0.setStatus(string0);
      DeployResult deployResult1 = new DeployResult();
      boolean boolean0 = deployResult0.equals((Object) deployResult1);
      assertFalse(deployResult1.equals(deployResult0));
      assertEquals(false, boolean0);
  }

  @Test
  public void test13()  throws Throwable  {
      DeployResult deployResult0 = new DeployResult();
      DeployResult deployResult1 = new DeployResult();
      assertTrue(deployResult1.equals(deployResult0));
      
      deployResult1.setStatusDetails("");
      boolean boolean0 = deployResult0.equals((Object) deployResult1);
      assertFalse(deployResult1.equals(deployResult0));
      assertEquals(false, boolean0);
  }

  @Test
  public void test14()  throws Throwable  {
      DeployResult deployResult0 = new DeployResult();
      deployResult0.setStatusDetails("o+Y\"^/Ni");
      DeployResult deployResult1 = new DeployResult();
      boolean boolean0 = deployResult0.equals((Object) deployResult1);
      assertEquals(false, boolean0);
      assertFalse(deployResult1.equals(deployResult0));
  }

  @Test
  public void test15()  throws Throwable  {
      DeployResult deployResult0 = new DeployResult();
      int int0 = deployResult0.hashCode();
      assertEquals(1, int0);
  }

  @Test
  public void test16()  throws Throwable  {
      Application[] applicationArray0 = new Application[6];
      Application application0 = new Application();
      applicationArray0[1] = application0;
      DeployResult deployResult0 = new DeployResult(applicationArray0, "L", "L");
      int int0 = deployResult0.hashCode();
      assertEquals(154, int0);
  }
}
