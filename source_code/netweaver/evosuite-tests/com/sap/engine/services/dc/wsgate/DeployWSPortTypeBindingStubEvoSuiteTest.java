/*
 * This file was automatically generated by EvoSuite
 */

package com.sap.engine.services.dc.wsgate;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.sap.engine.services.dc.wsgate.Application;
import com.sap.engine.services.dc.wsgate.ArchiveFile;
import com.sap.engine.services.dc.wsgate.DeployFault;
import com.sap.engine.services.dc.wsgate.DeployWSPortTypeBindingStub;
import com.sap.engine.services.dc.wsgate.Option;
import java.io.File;
import java.net.MalformedURLException;
import java.net.URI;
import java.net.URL;
import java.rmi.RemoteException;
import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;
import java.util.concurrent.Future;
import java.util.concurrent.TimeUnit;
import javax.xml.namespace.QName;
import javax.xml.rpc.Service;
import org.apache.axis.AxisFault;
import org.apache.axis.EngineConfiguration;
import org.apache.axis.client.AxisClient;
import org.apache.axis.configuration.SimpleProvider;
import org.apache.axis.deployment.wsdd.WSDDConstants;
import org.evosuite.Properties.SandboxMode;
import org.evosuite.sandbox.Sandbox;
import org.junit.After;
import org.junit.AfterClass;
import org.junit.Before;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class DeployWSPortTypeBindingStubEvoSuiteTest {

  private static ExecutorService executor; 

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
    org.evosuite.Properties.SANDBOX_MODE = SandboxMode.RECOMMENDED; 
    Sandbox.initializeSecurityManagerForSUT(); 
    executor = Executors.newCachedThreadPool(); 
  } 

  @AfterClass 
  public static void clearEvoSuiteFramework(){ 
    executor.shutdownNow(); 
    Sandbox.resetDefaultSecurityManager(); 
  } 

  @Before 
  public void initTestCase(){ 
    Sandbox.goingToExecuteSUTCode(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    Sandbox.doneWithExecutingSUTCode(); 
  } 


  @Test
  public void test0()  throws Throwable  {
    Future<?> future = executor.submit(new Runnable(){ 
            public void run() { 
        try {
          File file0 = new File("return", "return");
          URI uRI0 = file0.toURI();
          URL uRL0 = uRI0.toURL();
          DeployWSPortTypeBindingStub deployWSPortTypeBindingStub0 = null;
          try {
            deployWSPortTypeBindingStub0 = new DeployWSPortTypeBindingStub(uRL0, (Service) null);
            fail("Expecting exception: NoClassDefFoundError");
          } catch(NoClassDefFoundError e) {
            /*
             * Could not initialize class org.apache.axis.utils.Messages
             */
          }
        } catch(Throwable t) {
            // Need to catch declared exceptions
        }
      } 
    }); 
    future.get(6000, TimeUnit.MILLISECONDS); 
  }

  @Test
  public void test1()  throws Throwable  {
    Future<?> future = executor.submit(new Runnable(){ 
            public void run() { 
        try {
          DeployWSPortTypeBindingStub deployWSPortTypeBindingStub0 = null;
          try {
            deployWSPortTypeBindingStub0 = new DeployWSPortTypeBindingStub();
            fail("Expecting exception: NoClassDefFoundError");
          } catch(NoClassDefFoundError e) {
            /*
             * Could not initialize class org.apache.axis.utils.Messages
             */
          }
        } catch(Throwable t) {
            // Need to catch declared exceptions
        }
      } 
    }); 
    future.get(6000, TimeUnit.MILLISECONDS); 
  }

  @Test
  public void test2()  throws Throwable  {
    Future<?> future = executor.submit(new Runnable(){ 
            public void run() { 
          SimpleProvider simpleProvider0 = new SimpleProvider();
          AxisClient axisClient0 = null;
          try {
            axisClient0 = new AxisClient();
            fail("Expecting exception: NoClassDefFoundError");
          } catch(NoClassDefFoundError e) {
            /*
             * Could not initialize class org.apache.axis.utils.Messages
             */
          }
      } 
    }); 
    future.get(6000, TimeUnit.MILLISECONDS); 
  }

  @Test
  public void test3()  throws Throwable  {
    Future<?> future = executor.submit(new Runnable(){ 
            public void run() { 
          SimpleProvider simpleProvider0 = new SimpleProvider();
          AxisClient axisClient0 = null;
          try {
            axisClient0 = new AxisClient();
            fail("Expecting exception: NoClassDefFoundError");
          } catch(NoClassDefFoundError e) {
            /*
             * Could not initialize class org.apache.axis.utils.Messages
             */
          }
      } 
    }); 
    future.get(6000, TimeUnit.MILLISECONDS); 
  }

  @Test
  public void test4()  throws Throwable  {
    Future<?> future = executor.submit(new Runnable(){ 
            public void run() { 
          SimpleProvider simpleProvider0 = new SimpleProvider();
          AxisClient axisClient0 = null;
          try {
            axisClient0 = new AxisClient();
            fail("Expecting exception: NoClassDefFoundError");
          } catch(NoClassDefFoundError e) {
            /*
             * Could not initialize class org.apache.axis.utils.Messages
             */
          }
      } 
    }); 
    future.get(6000, TimeUnit.MILLISECONDS); 
  }

  @Test
  public void test5()  throws Throwable  {
    Future<?> future = executor.submit(new Runnable(){ 
            public void run() { 
          SimpleProvider simpleProvider0 = new SimpleProvider();
          AxisClient axisClient0 = null;
          try {
            axisClient0 = new AxisClient();
            fail("Expecting exception: NoClassDefFoundError");
          } catch(NoClassDefFoundError e) {
            /*
             * Could not initialize class org.apache.axis.utils.Messages
             */
          }
      } 
    }); 
    future.get(6000, TimeUnit.MILLISECONDS); 
  }

  @Test
  public void test6()  throws Throwable  {
    Future<?> future = executor.submit(new Runnable(){ 
            public void run() { 
          SimpleProvider simpleProvider0 = new SimpleProvider();
          AxisClient axisClient0 = null;
          try {
            axisClient0 = new AxisClient();
            fail("Expecting exception: NoClassDefFoundError");
          } catch(NoClassDefFoundError e) {
            /*
             * Could not initialize class org.apache.axis.utils.Messages
             */
          }
      } 
    }); 
    future.get(6000, TimeUnit.MILLISECONDS); 
  }

  @Test
  public void test7()  throws Throwable  {
    Future<?> future = executor.submit(new Runnable(){ 
            public void run() { 
        try {
          DeployWSPortTypeBindingStub deployWSPortTypeBindingStub0 = null;
          try {
            deployWSPortTypeBindingStub0 = new DeployWSPortTypeBindingStub((Service) null);
            fail("Expecting exception: NoClassDefFoundError");
          } catch(NoClassDefFoundError e) {
            /*
             * Could not initialize class org.apache.axis.utils.Messages
             */
          }
        } catch(Throwable t) {
            // Need to catch declared exceptions
        }
      } 
    }); 
    future.get(6000, TimeUnit.MILLISECONDS); 
  }

  @Test
  public void test8()  throws Throwable  {
    Future<?> future = executor.submit(new Runnable(){ 
            public void run() { 
        try {
          DeployWSPortTypeBindingStub deployWSPortTypeBindingStub0 = null;
          try {
            deployWSPortTypeBindingStub0 = new DeployWSPortTypeBindingStub();
            fail("Expecting exception: NoClassDefFoundError");
          } catch(NoClassDefFoundError e) {
            /*
             * Could not initialize class org.apache.axis.utils.Messages
             */
          }
        } catch(Throwable t) {
            // Need to catch declared exceptions
        }
      } 
    }); 
    future.get(6000, TimeUnit.MILLISECONDS); 
  }

  @Test
  public void test9()  throws Throwable  {
    Future<?> future = executor.submit(new Runnable(){ 
            public void run() { 
        try {
          DeployWSPortTypeBindingStub deployWSPortTypeBindingStub0 = null;
          try {
            deployWSPortTypeBindingStub0 = new DeployWSPortTypeBindingStub((Service) null);
            fail("Expecting exception: NoClassDefFoundError");
          } catch(NoClassDefFoundError e) {
            /*
             * Could not initialize class org.apache.axis.utils.Messages
             */
          }
        } catch(Throwable t) {
            // Need to catch declared exceptions
        }
      } 
    }); 
    future.get(6000, TimeUnit.MILLISECONDS); 
  }

  @Test
  public void test10()  throws Throwable  {
    Future<?> future = executor.submit(new Runnable(){ 
            public void run() { 
        try {
          DeployWSPortTypeBindingStub deployWSPortTypeBindingStub0 = null;
          try {
            deployWSPortTypeBindingStub0 = new DeployWSPortTypeBindingStub((Service) null);
            fail("Expecting exception: NoClassDefFoundError");
          } catch(NoClassDefFoundError e) {
            /*
             * Could not initialize class org.apache.axis.utils.Messages
             */
          }
        } catch(Throwable t) {
            // Need to catch declared exceptions
        }
      } 
    }); 
    future.get(6000, TimeUnit.MILLISECONDS); 
  }

  @Test
  public void test11()  throws Throwable  {
    Future<?> future = executor.submit(new Runnable(){ 
            public void run() { 
        try {
          DeployWSPortTypeBindingStub deployWSPortTypeBindingStub0 = null;
          try {
            deployWSPortTypeBindingStub0 = new DeployWSPortTypeBindingStub((Service) null);
            fail("Expecting exception: NoClassDefFoundError");
          } catch(NoClassDefFoundError e) {
            /*
             * Could not initialize class org.apache.axis.utils.Messages
             */
          }
        } catch(Throwable t) {
            // Need to catch declared exceptions
        }
      } 
    }); 
    future.get(6000, TimeUnit.MILLISECONDS); 
  }
}
