/*
 * This file was automatically generated by EvoSuite
 */

package com.sap.engine.services.dc.wsgate;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.sap.engine.services.dc.wsgate.Application;
import com.sap.engine.services.dc.wsgate.Option;
import com.sap.engine.services.dc.wsgate.Stop;
import javax.xml.namespace.QName;
import org.apache.axis.description.TypeDesc;
import org.apache.axis.encoding.ser.BeanDeserializer;
import org.apache.axis.encoding.ser.BeanSerializer;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class StopEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      Application[] applicationArray0 = new Application[4];
      Option[] optionArray0 = new Option[16];
      Stop stop0 = new Stop(applicationArray0, optionArray0);
      // Undeclared exception!
      try {
        stop0.getApps(1329013373);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      } catch(ArrayIndexOutOfBoundsException e) {
        /*
         * 1329013373
         */
      }
  }

  @Test
  public void test1()  throws Throwable  {
      Stop stop0 = new Stop();
      Application[] applicationArray0 = new Application[4];
      stop0.setApps(applicationArray0);
      Stop stop1 = new Stop(applicationArray0, (Option[]) null);
      boolean boolean0 = stop0.equals((Object) stop1);
      assertEquals(true, boolean0);
  }

  @Test
  public void test2()  throws Throwable  {
      Stop stop0 = new Stop();
      // Undeclared exception!
      try {
        stop0.setApps(2, (Application) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test3()  throws Throwable  {
      Class<?> class0 = Class.class;
      QName qName0 = new QName("uY02P");
      BeanSerializer beanSerializer0 = (BeanSerializer)Stop.getSerializer("uY02P", (Class) class0, qName0);
      assertEquals("Axis SAX Mechanism", beanSerializer0.getMechanismType());
  }

  @Test
  public void test4()  throws Throwable  {
      Stop stop0 = new Stop();
      // Undeclared exception!
      try {
        stop0.getOptions(1);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test5()  throws Throwable  {
      Stop stop0 = new Stop();
      Option[] optionArray0 = new Option[1];
      Option option0 = new Option((Object) optionArray0, (Object) optionArray0);
      // Undeclared exception!
      try {
        stop0.setOptions((-14), option0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test6()  throws Throwable  {
      TypeDesc typeDesc0 = Stop.getTypeDesc();
      assertEquals(false, typeDesc0.hasAttributes());
  }

  @Test
  public void test7()  throws Throwable  {
      Class<?> class0 = Stop.class;
      QName qName0 = QName.valueOf("!#+zo?orahl<'7|!>w");
      BeanDeserializer beanDeserializer0 = (BeanDeserializer)Stop.getDeserializer("!#+zo?orahl<'7|!>w", (Class) class0, qName0);
      assertEquals(false, beanDeserializer0.componentsReady());
  }

  @Test
  public void test8()  throws Throwable  {
      Stop stop0 = new Stop();
      Object object0 = new Object();
      boolean boolean0 = stop0.equals(object0);
      assertEquals(false, boolean0);
  }

  @Test
  public void test9()  throws Throwable  {
      Stop stop0 = new Stop();
      Option[] optionArray0 = new Option[1];
      Stop stop1 = new Stop((Application[]) null, optionArray0);
      boolean boolean0 = stop0.equals((Object) stop1);
      assertFalse(stop1.equals(stop0));
      assertEquals(false, boolean0);
  }

  @Test
  public void test10()  throws Throwable  {
      Stop stop0 = new Stop();
      Application[] applicationArray0 = new Application[4];
      Stop stop1 = new Stop(applicationArray0, (Option[]) null);
      boolean boolean0 = stop0.equals((Object) stop1);
      assertFalse(stop1.equals(stop0));
      assertEquals(false, boolean0);
  }

  @Test
  public void test11()  throws Throwable  {
      Stop stop0 = new Stop();
      Stop stop1 = new Stop((Application[]) null, (Option[]) null);
      assertTrue(stop1.equals(stop0));
      
      Application[] applicationArray0 = new Application[4];
      stop1.setApps(applicationArray0);
      boolean boolean0 = stop1.equals((Object) stop0);
      assertFalse(stop1.equals(stop0));
      assertEquals(false, boolean0);
  }

  @Test
  public void test12()  throws Throwable  {
      Stop stop0 = new Stop();
      Option[] optionArray0 = new Option[2];
      Stop stop1 = new Stop((Application[]) null, (Option[]) null);
      assertTrue(stop1.equals(stop0));
      
      stop0.setOptions(optionArray0);
      boolean boolean0 = stop0.equals((Object) stop1);
      assertFalse(stop1.equals(stop0));
      assertEquals(false, boolean0);
  }

  @Test
  public void test13()  throws Throwable  {
      Stop stop0 = new Stop();
      Option[] optionArray0 = new Option[5];
      Stop stop1 = new Stop((Application[]) null, optionArray0);
      assertFalse(stop1.equals(stop0));
      
      stop0.setOptions(optionArray0);
      boolean boolean0 = stop0.equals((Object) stop1);
      assertTrue(stop0.equals(stop1));
      assertEquals(true, boolean0);
  }

  @Test
  public void test14()  throws Throwable  {
      Stop stop0 = new Stop();
      int int0 = stop0.hashCode();
      assertEquals(1, int0);
  }

  @Test
  public void test15()  throws Throwable  {
      Application[] applicationArray0 = new Application[4];
      Application application0 = new Application("uY02P", "uY02P", "uY02P", "uY02P", "uY02P", "uY02P");
      applicationArray0[0] = application0;
      Option[] optionArray0 = new Option[16];
      Stop stop0 = new Stop(applicationArray0, optionArray0);
      int int0 = stop0.hashCode();
      assertEquals(664506686, int0);
  }

  @Test
  public void test16()  throws Throwable  {
      Application[] applicationArray0 = new Application[4];
      Option[] optionArray0 = new Option[16];
      Option option0 = new Option();
      optionArray0[2] = option0;
      Stop stop0 = new Stop(applicationArray0, optionArray0);
      int int0 = stop0.hashCode();
      assertEquals(2, int0);
  }
}
