/*
 * This file was automatically generated by EvoSuite
 */

package com.sap.managementconsole.soap.axis.sapcontrol;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.sap.managementconsole.soap.axis.sapcontrol.AccessPoint;
import javax.xml.namespace.QName;
import org.apache.axis.description.TypeDesc;
import org.apache.axis.encoding.ser.BeanDeserializer;
import org.apache.axis.encoding.ser.BeanSerializer;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class AccessPointEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      AccessPoint accessPoint0 = new AccessPoint();
      AccessPoint accessPoint1 = new AccessPoint();
      boolean boolean0 = accessPoint0.equals((Object) accessPoint1);
      assertEquals(true, boolean0);
  }

  @Test
  public void test1()  throws Throwable  {
      TypeDesc typeDesc0 = AccessPoint.getTypeDesc();
      assertEquals(false, typeDesc0.hasAttributes());
  }

  @Test
  public void test2()  throws Throwable  {
      Class<?> class0 = Object.class;
      QName qName0 = new QName("", "");
      BeanDeserializer beanDeserializer0 = (BeanDeserializer)AccessPoint.getDeserializer("", (Class) class0, qName0);
      assertEquals("Axis SAX Mechanism", beanDeserializer0.getMechanismType());
  }

  @Test
  public void test3()  throws Throwable  {
      AccessPoint accessPoint0 = new AccessPoint("!_`R+k^<@3$D^X6hZu", 679, "!_`R+k^<@3$D^X6hZu", "!_`R+k^<@3$D^X6hZu", "!_`R+k^<@3$D^X6hZu");
      int int0 = accessPoint0.hashCode();
      assertEquals((-1554473656), int0);
  }

  @Test
  public void test4()  throws Throwable  {
      AccessPoint accessPoint0 = new AccessPoint();
      accessPoint0.setPort(1392);
      assertEquals(1392, accessPoint0.getPort());
  }

  @Test
  public void test5()  throws Throwable  {
      AccessPoint accessPoint0 = new AccessPoint();
      accessPoint0.setAddress((String) null);
      assertNull(accessPoint0.getProtocol());
  }

  @Test
  public void test6()  throws Throwable  {
      Class<?> class0 = Class.class;
      QName qName0 = new QName("00zv(dzs 50js");
      BeanSerializer beanSerializer0 = (BeanSerializer)AccessPoint.getSerializer("00zv(dzs 50js", (Class) class0, qName0);
      assertEquals("Axis SAX Mechanism", beanSerializer0.getMechanismType());
  }

  @Test
  public void test7()  throws Throwable  {
      AccessPoint accessPoint0 = new AccessPoint();
      boolean boolean0 = accessPoint0.equals((Object) 1);
      assertEquals(false, boolean0);
  }

  @Test
  public void test8()  throws Throwable  {
      AccessPoint accessPoint0 = new AccessPoint();
      AccessPoint accessPoint1 = new AccessPoint();
      assertTrue(accessPoint1.equals(accessPoint0));
      
      accessPoint0.setActive("|Vt!d&U1$nKF!N");
      boolean boolean0 = accessPoint0.equals((Object) accessPoint1);
      assertFalse(accessPoint1.equals(accessPoint0));
      assertEquals(false, boolean0);
  }

  @Test
  public void test9()  throws Throwable  {
      AccessPoint accessPoint0 = new AccessPoint();
      AccessPoint accessPoint1 = new AccessPoint("!_`R+k^<@3$D^X6hZu", 679, "!_`R+k^<@3$D^X6hZu", "!_`R+k^<@3$D^X6hZu", "!_`R+k^<@3$D^X6hZu");
      boolean boolean0 = accessPoint1.equals((Object) accessPoint0);
      assertEquals(679, accessPoint1.getPort());
      assertEquals(false, boolean0);
  }

  @Test
  public void test10()  throws Throwable  {
      AccessPoint accessPoint0 = new AccessPoint();
      AccessPoint accessPoint1 = new AccessPoint("~i$.", 1392, "~i$.", "~i$.", (String) null);
      boolean boolean0 = accessPoint0.equals((Object) accessPoint1);
      assertEquals(false, boolean0);
      assertEquals(1392, accessPoint1.getPort());
  }

  @Test
  public void test11()  throws Throwable  {
      AccessPoint accessPoint0 = new AccessPoint("[q3A`J/(fdd!", 1, "[q3A`J/(fdd!", "[q3A`J/(fdd!", "[q3A`J/(fdd!");
      AccessPoint accessPoint1 = new AccessPoint("[q3A`J/(fdd!", 1, "[q3A`J/(fdd!", "[q3A`J/(fdd!", "[q3A`J/(fdd!");
      boolean boolean0 = accessPoint0.equals((Object) accessPoint1);
      assertEquals(1, accessPoint1.getPort());
      assertEquals(true, boolean0);
  }

  @Test
  public void test12()  throws Throwable  {
      AccessPoint accessPoint0 = new AccessPoint();
      AccessPoint accessPoint1 = new AccessPoint((String) null, 1392, (String) null, (String) null, "~i$.");
      boolean boolean0 = accessPoint0.equals((Object) accessPoint1);
      assertEquals(false, boolean0);
      assertEquals(1392, accessPoint1.getPort());
  }

  @Test
  public void test13()  throws Throwable  {
      AccessPoint accessPoint0 = new AccessPoint();
      AccessPoint accessPoint1 = new AccessPoint((String) null, 0, "", "", "");
      boolean boolean0 = accessPoint0.equals((Object) accessPoint1);
      assertEquals(false, boolean0);
      assertEquals(0, accessPoint1.getPort());
  }

  @Test
  public void test14()  throws Throwable  {
      AccessPoint accessPoint0 = new AccessPoint();
      AccessPoint accessPoint1 = new AccessPoint();
      assertTrue(accessPoint1.equals(accessPoint0));
      
      accessPoint0.setProtocol("!_`R+k^<@3$D^X6hZu");
      boolean boolean0 = accessPoint0.equals((Object) accessPoint1);
      assertFalse(accessPoint1.equals(accessPoint0));
      assertEquals(false, boolean0);
  }

  @Test
  public void test15()  throws Throwable  {
      AccessPoint accessPoint0 = new AccessPoint();
      AccessPoint accessPoint1 = new AccessPoint();
      assertTrue(accessPoint1.equals(accessPoint0));
      
      accessPoint1.setProcessname("!_`R+k^<@3$D^X6hZu");
      boolean boolean0 = accessPoint0.equals((Object) accessPoint1);
      assertEquals(false, boolean0);
  }

  @Test
  public void test16()  throws Throwable  {
      AccessPoint accessPoint0 = new AccessPoint();
      accessPoint0.setProcessname("h]e!e4/n6L");
      AccessPoint accessPoint1 = new AccessPoint();
      boolean boolean0 = accessPoint0.equals((Object) accessPoint1);
      assertFalse(accessPoint1.equals(accessPoint0));
      assertEquals(0, accessPoint1.getPort());
      assertEquals(false, boolean0);
  }

  @Test
  public void test17()  throws Throwable  {
      AccessPoint accessPoint0 = new AccessPoint();
      accessPoint0.setActive("ejC@mS5MdUh2");
      AccessPoint accessPoint1 = new AccessPoint();
      boolean boolean0 = accessPoint1.equals((Object) accessPoint0);
      assertEquals(0, accessPoint0.getPort());
      assertEquals(false, boolean0);
  }

  @Test
  public void test18()  throws Throwable  {
      AccessPoint accessPoint0 = new AccessPoint();
      int int0 = accessPoint0.hashCode();
      assertEquals(1, int0);
  }
}
