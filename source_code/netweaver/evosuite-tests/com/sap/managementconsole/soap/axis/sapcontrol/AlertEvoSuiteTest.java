/*
 * This file was automatically generated by EvoSuite
 */

package com.sap.managementconsole.soap.axis.sapcontrol;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.sap.managementconsole.soap.axis.sapcontrol.Alert;
import com.sap.managementconsole.soap.axis.sapcontrol.STATECOLOR;
import javax.xml.namespace.QName;
import org.apache.axis.description.TypeDesc;
import org.apache.axis.encoding.ser.BeanDeserializer;
import org.apache.axis.encoding.ser.BeanSerializer;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class AlertEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      Alert alert0 = new Alert();
      Alert alert1 = new Alert();
      boolean boolean0 = alert0.equals((Object) alert1);
      assertEquals(true, boolean0);
  }

  @Test
  public void test1()  throws Throwable  {
      Class<?> class0 = Alert.class;
      QName qName0 = new QName("AzK^o1tb@5~1:d;V", "AzK^o1tb@5~1:d;V", "AzK^o1tb@5~1:d;V");
      BeanDeserializer beanDeserializer0 = (BeanDeserializer)Alert.getDeserializer("AzK^o1tb@5~1:d;V", (Class) class0, qName0);
      assertEquals("Axis SAX Mechanism", beanDeserializer0.getMechanismType());
  }

  @Test
  public void test2()  throws Throwable  {
      Class<?> class0 = Alert.class;
      QName qName0 = new QName("DbR", "DbR", "DbR");
      BeanSerializer beanSerializer0 = (BeanSerializer)Alert.getSerializer("DbR", (Class) class0, qName0);
      assertEquals("Axis SAX Mechanism", beanSerializer0.getMechanismType());
  }

  @Test
  public void test3()  throws Throwable  {
      TypeDesc typeDesc0 = Alert.getTypeDesc();
      assertEquals(false, typeDesc0.hasAttributes());
  }

  @Test
  public void test4()  throws Throwable  {
      Alert alert0 = new Alert();
      alert0.setObject("DbR");
      STATECOLOR sTATECOLOR0 = STATECOLOR.value3;
      Alert alert1 = new Alert("DbR", "DbR", sTATECOLOR0, "DbR", "DbR", "DbR", "DbR");
      boolean boolean0 = alert0.equals((Object) alert1);
      assertEquals(false, boolean0);
  }

  @Test
  public void test5()  throws Throwable  {
      Alert alert0 = new Alert();
      alert0.setAttribute("DbR");
      assertNull(alert0.getDescription());
  }

  @Test
  public void test6()  throws Throwable  {
      Alert alert0 = new Alert();
      boolean boolean0 = alert0.equals((Object) "BY7$OGLo9Q");
      assertEquals(false, boolean0);
  }

  @Test
  public void test7()  throws Throwable  {
      Alert alert0 = new Alert();
      Alert alert1 = new Alert();
      assertTrue(alert1.equals(alert0));
      
      STATECOLOR sTATECOLOR0 = STATECOLOR.value2;
      alert0.setValue(sTATECOLOR0);
      boolean boolean0 = alert0.equals((Object) alert1);
      assertFalse(alert1.equals(alert0));
      assertEquals(false, boolean0);
  }

  @Test
  public void test8()  throws Throwable  {
      Alert alert0 = new Alert();
      STATECOLOR sTATECOLOR0 = STATECOLOR.value4;
      Alert alert1 = new Alert("x ^dj<I0~|", "x ^dj<I0~|", sTATECOLOR0, "x ^dj<I0~|", "x ^dj<I0~|", "x ^dj<I0~|", "x ^dj<I0~|");
      boolean boolean0 = alert0.equals((Object) alert1);
      assertEquals(false, boolean0);
  }

  @Test
  public void test9()  throws Throwable  {
      STATECOLOR sTATECOLOR0 = STATECOLOR.value3;
      Alert alert0 = new Alert("BY7$sGo{lQ", "BY7$sGo{lQ", sTATECOLOR0, ">#N9X`R-%X>G~&'", ">#N9X`R-%X>G~&'", "BY7$sGo{lQ", ">#N9X`R-%X>G~&'");
      Alert alert1 = new Alert(">#N9X`R-%X>G~&'", "BY7$sGo{lQ", sTATECOLOR0, ">#N9X`R-%X>G~&'", "BY7$sGo{lQ", "BY7$sGo{lQ", "BY7$sGo{lQ");
      boolean boolean0 = alert0.equals((Object) alert1);
      assertEquals("BY7$sGo{lQ", alert1.getTime());
      assertEquals(">#N9X`R-%X>G~&'", alert1.getDescription());
      assertEquals(">#N9X`R-%X>G~&'", alert0.getTime());
      assertEquals(">#N9X`R-%X>G~&'", alert1.getObject());
      assertEquals("BY7$sGo{lQ", alert0.getTid());
      assertEquals("BY7$sGo{lQ", alert0.getObject());
      assertEquals("BY7$sGo{lQ", alert1.getAttribute());
      assertEquals(">#N9X`R-%X>G~&'", alert0.getAid());
      assertEquals("BY7$sGo{lQ", alert0.getAttribute());
      assertEquals(">#N9X`R-%X>G~&'", alert0.getDescription());
      assertEquals("BY7$sGo{lQ", alert1.getTid());
      assertEquals(false, boolean0);
      assertEquals("BY7$sGo{lQ", alert1.getAid());
  }

  @Test
  public void test10()  throws Throwable  {
      STATECOLOR sTATECOLOR0 = STATECOLOR.value2;
      Alert alert0 = new Alert("}, F \"*9us:\"%GR:", "}, F \"*9us:\"%GR:", sTATECOLOR0, "}, F \"*9us:\"%GR:", "}, F \"*9us:\"%GR:", "}, F \"*9us:\"%GR:", "}, F \"*9us:\"%GR:");
      Alert alert1 = new Alert("}, F \"*9us:\"%GR:", "}, F \"*9us:\"%GR:", sTATECOLOR0, "}, F \"*9us:\"%GR:", "}, F \"*9us:\"%GR:", "}, F \"*9us:\"%GR:", "}, F \"*9us:\"%GR:");
      boolean boolean0 = alert0.equals((Object) alert1);
      assertEquals(true, boolean0);
  }

  @Test
  public void test11()  throws Throwable  {
      STATECOLOR sTATECOLOR0 = STATECOLOR.value4;
      Alert alert0 = new Alert("AzK^o1tb@5~1:d;V", "AzK^o1tb@5~1:d;V", sTATECOLOR0, "AzK^o1tb@5~1:d;V", "AzK^o1tb@5~1:d;V", "AzK^o1tb@5~1:d;V", "AzK^o1tb@5~1:d;V");
      Alert alert1 = new Alert();
      alert1.setObject("AzK^o1tb@5~1:d;V");
      boolean boolean0 = alert0.equals((Object) alert1);
      assertEquals(false, boolean0);
      assertFalse(alert1.equals(alert0));
  }

  @Test
  public void test12()  throws Throwable  {
      Alert alert0 = new Alert();
      STATECOLOR sTATECOLOR0 = STATECOLOR.value2;
      Alert alert1 = new Alert((String) null, (String) null, sTATECOLOR0, (String) null, (String) null, (String) null, (String) null);
      boolean boolean0 = alert0.equals((Object) alert1);
      assertFalse(alert1.equals(alert0));
      assertEquals(false, boolean0);
  }

  @Test
  public void test13()  throws Throwable  {
      Alert alert0 = new Alert();
      Alert alert1 = new Alert();
      assertTrue(alert1.equals(alert0));
      
      alert1.setDescription("nzWh$eKK+_7");
      boolean boolean0 = alert0.equals((Object) alert1);
      assertEquals(false, boolean0);
  }

  @Test
  public void test14()  throws Throwable  {
      Alert alert0 = new Alert();
      alert0.setDescription("");
      Alert alert1 = new Alert();
      boolean boolean0 = alert0.equals((Object) alert1);
      assertFalse(alert1.equals(alert0));
      assertEquals(false, boolean0);
  }

  @Test
  public void test15()  throws Throwable  {
      Alert alert0 = new Alert();
      Alert alert1 = new Alert();
      assertTrue(alert1.equals(alert0));
      
      alert1.setTime("\"gotForID0E");
      boolean boolean0 = alert0.equals((Object) alert1);
      assertEquals(false, boolean0);
  }

  @Test
  public void test16()  throws Throwable  {
      Alert alert0 = new Alert();
      alert0.setTime("9W/KKl_");
      Alert alert1 = new Alert();
      boolean boolean0 = alert0.equals((Object) alert1);
      assertFalse(alert1.equals(alert0));
      assertEquals(false, boolean0);
  }

  @Test
  public void test17()  throws Throwable  {
      Alert alert0 = new Alert();
      Alert alert1 = new Alert();
      assertTrue(alert1.equals(alert0));
      
      alert1.setTid("BY7$sG{SQ");
      boolean boolean0 = alert0.equals((Object) alert1);
      assertEquals(false, boolean0);
  }

  @Test
  public void test18()  throws Throwable  {
      Alert alert0 = new Alert();
      alert0.setTid("BY7$OGLo9Q");
      Alert alert1 = new Alert();
      boolean boolean0 = alert0.equals((Object) alert1);
      assertFalse(alert1.equals(alert0));
      assertEquals(false, boolean0);
  }

  @Test
  public void test19()  throws Throwable  {
      Alert alert0 = new Alert();
      Alert alert1 = new Alert();
      assertTrue(alert1.equals(alert0));
      
      alert0.setAid("baUnsineRdByte00");
      boolean boolean0 = alert1.equals((Object) alert0);
      assertEquals(false, boolean0);
  }

  @Test
  public void test20()  throws Throwable  {
      Alert alert0 = new Alert();
      alert0.setAid("org.apache.log4j.CategoryKey");
      Alert alert1 = new Alert();
      boolean boolean0 = alert0.equals((Object) alert1);
      assertFalse(alert1.equals(alert0));
      assertEquals(false, boolean0);
  }

  @Test
  public void test21()  throws Throwable  {
      Alert alert0 = new Alert();
      int int0 = alert0.hashCode();
      assertEquals(1, int0);
  }

  @Test
  public void test22()  throws Throwable  {
      STATECOLOR sTATECOLOR0 = STATECOLOR.value3;
      Alert alert0 = new Alert("BY7$sGo{lQ", "BY7$sGo{lQ", sTATECOLOR0, ">#N9X`R-%X>G~&'", ">#N9X`R-%X>G~&'", "BY7$sGo{lQ", ">#N9X`R-%X>G~&'");
      int int0 = alert0.hashCode();
      assertEquals(1097124210, int0);
  }
}
