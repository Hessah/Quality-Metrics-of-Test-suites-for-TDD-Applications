/*
 * This file was automatically generated by EvoSuite
 */

package com.sap.managementconsole.soap.axis.sapcontrol;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.sap.managementconsole.soap.axis.sapcontrol.J2EEApplicationAlias;
import javax.xml.namespace.QName;
import org.apache.axis.description.TypeDesc;
import org.apache.axis.encoding.ser.BeanDeserializer;
import org.apache.axis.encoding.ser.BeanSerializer;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class J2EEApplicationAliasEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      J2EEApplicationAlias j2EEApplicationAlias0 = new J2EEApplicationAlias();
      j2EEApplicationAlias0.setAppActive(" uM4XqRaQ(~3&{");
      J2EEApplicationAlias j2EEApplicationAlias1 = new J2EEApplicationAlias();
      boolean boolean0 = j2EEApplicationAlias0.equals((Object) j2EEApplicationAlias1);
      assertFalse(j2EEApplicationAlias1.equals(j2EEApplicationAlias0));
      assertEquals(0, j2EEApplicationAlias1.getTotalRequests());
      assertEquals(false, boolean0);
  }

  @Test
  public void test1()  throws Throwable  {
      Class<?> class0 = QName.class;
      QName qName0 = new QName("ij{<W'");
      BeanDeserializer beanDeserializer0 = (BeanDeserializer)J2EEApplicationAlias.getDeserializer("ij{<W'", (Class) class0, qName0);
      assertEquals("Axis SAX Mechanism", beanDeserializer0.getMechanismType());
  }

  @Test
  public void test2()  throws Throwable  {
      J2EEApplicationAlias j2EEApplicationAlias0 = new J2EEApplicationAlias(";", ";", 1003, ";", ";");
      int int0 = j2EEApplicationAlias0.hashCode();
      assertEquals(1240, int0);
  }

  @Test
  public void test3()  throws Throwable  {
      Class<?> class0 = Class.class;
      BeanSerializer beanSerializer0 = (BeanSerializer)J2EEApplicationAlias.getSerializer(";", (Class) class0, (QName) null);
      assertEquals("Axis SAX Mechanism", beanSerializer0.getMechanismType());
  }

  @Test
  public void test4()  throws Throwable  {
      J2EEApplicationAlias j2EEApplicationAlias0 = new J2EEApplicationAlias(";", ";", 1003, ";", ";");
      j2EEApplicationAlias0.setAppName(";");
      assertEquals(1003, j2EEApplicationAlias0.getTotalRequests());
  }

  @Test
  public void test5()  throws Throwable  {
      J2EEApplicationAlias j2EEApplicationAlias0 = new J2EEApplicationAlias();
      j2EEApplicationAlias0.setTotalRequests((-1834));
      assertEquals(-1834, j2EEApplicationAlias0.getTotalRequests());
  }

  @Test
  public void test6()  throws Throwable  {
      TypeDesc typeDesc0 = J2EEApplicationAlias.getTypeDesc();
      assertEquals(false, typeDesc0.hasAttributes());
  }

  @Test
  public void test7()  throws Throwable  {
      J2EEApplicationAlias j2EEApplicationAlias0 = new J2EEApplicationAlias();
      boolean boolean0 = j2EEApplicationAlias0.equals((Object) null);
      assertEquals(false, boolean0);
  }

  @Test
  public void test8()  throws Throwable  {
      J2EEApplicationAlias j2EEApplicationAlias0 = new J2EEApplicationAlias("Help can be found @http://commons.apache.orglogging/troubleshooting.html.", "Help can be found @http://commons.apache.orglogging/troubleshooting.html.", (-1737), (String) null, "Help can be found @http://commons.apache.orglogging/troubleshooting.html.");
      J2EEApplicationAlias j2EEApplicationAlias1 = new J2EEApplicationAlias("Help can be found @http://commons.apache.orglogging/troubleshooting.html.", "Help can be found @http://commons.apache.orglogging/troubleshooting.html.", (-1737), "Help can be found @http://commons.apache.orglogging/troubleshooting.html.", "Help can be found @http://commons.apache.orglogging/troubleshooting.html.");
      boolean boolean0 = j2EEApplicationAlias0.equals((Object) j2EEApplicationAlias1);
      assertEquals(-1737, j2EEApplicationAlias0.getTotalRequests());
      assertEquals(false, boolean0);
  }

  @Test
  public void test9()  throws Throwable  {
      J2EEApplicationAlias j2EEApplicationAlias0 = new J2EEApplicationAlias();
      J2EEApplicationAlias j2EEApplicationAlias1 = new J2EEApplicationAlias();
      boolean boolean0 = j2EEApplicationAlias0.equals((Object) j2EEApplicationAlias1);
      assertEquals(true, boolean0);
  }

  @Test
  public void test10()  throws Throwable  {
      J2EEApplicationAlias j2EEApplicationAlias0 = new J2EEApplicationAlias();
      J2EEApplicationAlias j2EEApplicationAlias1 = new J2EEApplicationAlias(" uM4XqRaQ(~3&{", " uM4XqRaQ(~3&{", 13, " uM4XqRaQ(~3&{", " uM4XqRaQ(~3&{");
      boolean boolean0 = j2EEApplicationAlias0.equals((Object) j2EEApplicationAlias1);
      assertEquals(13, j2EEApplicationAlias1.getTotalRequests());
      assertEquals(false, boolean0);
  }

  @Test
  public void test11()  throws Throwable  {
      J2EEApplicationAlias j2EEApplicationAlias0 = new J2EEApplicationAlias();
      J2EEApplicationAlias j2EEApplicationAlias1 = new J2EEApplicationAlias("ij{<W'", "ij{<W'", (-1834), "ij{<W'", "ij{<W'");
      boolean boolean0 = j2EEApplicationAlias1.equals((Object) j2EEApplicationAlias0);
      assertEquals(false, boolean0);
      assertEquals(-1834, j2EEApplicationAlias1.getTotalRequests());
  }

  @Test
  public void test12()  throws Throwable  {
      J2EEApplicationAlias j2EEApplicationAlias0 = new J2EEApplicationAlias();
      J2EEApplicationAlias j2EEApplicationAlias1 = new J2EEApplicationAlias((String) null, "ttaRYqess", (-2030), "ttaRYqess", "ttaRYqess");
      boolean boolean0 = j2EEApplicationAlias0.equals((Object) j2EEApplicationAlias1);
      assertEquals(-2030, j2EEApplicationAlias1.getTotalRequests());
      assertEquals(false, boolean0);
  }

  @Test
  public void test13()  throws Throwable  {
      J2EEApplicationAlias j2EEApplicationAlias0 = new J2EEApplicationAlias();
      J2EEApplicationAlias j2EEApplicationAlias1 = new J2EEApplicationAlias();
      assertTrue(j2EEApplicationAlias1.equals(j2EEApplicationAlias0));
      
      j2EEApplicationAlias0.setAlias("line.separator");
      boolean boolean0 = j2EEApplicationAlias0.equals((Object) j2EEApplicationAlias1);
      assertFalse(j2EEApplicationAlias1.equals(j2EEApplicationAlias0));
      assertEquals(false, boolean0);
  }

  @Test
  public void test14()  throws Throwable  {
      J2EEApplicationAlias j2EEApplicationAlias0 = new J2EEApplicationAlias("fJ;dE+tW<O=N<A", "fJ;dE+tW<O=N<A", 1100, "fJ;dE+tW<O=N<A", "fJ;dE+tW<O=N<A");
      J2EEApplicationAlias j2EEApplicationAlias1 = new J2EEApplicationAlias("fJ;dE+tW<O=N<A", "fJ;dE+tW<O=N<A", 331, "fJ;dE+tW<O=N<A", "fJ;dE+tW<O=N<A");
      boolean boolean0 = j2EEApplicationAlias0.equals((Object) j2EEApplicationAlias1);
      assertFalse(j2EEApplicationAlias1.equals(j2EEApplicationAlias0));
      assertEquals(1100, j2EEApplicationAlias0.getTotalRequests());
      assertEquals(false, boolean0);
  }

  @Test
  public void test15()  throws Throwable  {
      J2EEApplicationAlias j2EEApplicationAlias0 = new J2EEApplicationAlias("cF", "cF", 1, "cF", "cF");
      J2EEApplicationAlias j2EEApplicationAlias1 = new J2EEApplicationAlias("cF", "cF", 1, "cF", (String) null);
      boolean boolean0 = j2EEApplicationAlias0.equals((Object) j2EEApplicationAlias1);
      assertFalse(j2EEApplicationAlias1.equals(j2EEApplicationAlias0));
      assertEquals(1, j2EEApplicationAlias0.getTotalRequests());
      assertEquals(false, boolean0);
  }

  @Test
  public void test16()  throws Throwable  {
      J2EEApplicationAlias j2EEApplicationAlias0 = new J2EEApplicationAlias();
      J2EEApplicationAlias j2EEApplicationAlias1 = new J2EEApplicationAlias();
      assertTrue(j2EEApplicationAlias1.equals(j2EEApplicationAlias0));
      
      j2EEApplicationAlias1.setIgnoreCookie("lov4j.x&l");
      boolean boolean0 = j2EEApplicationAlias0.equals((Object) j2EEApplicationAlias1);
      assertEquals(false, boolean0);
  }

  @Test
  public void test17()  throws Throwable  {
      J2EEApplicationAlias j2EEApplicationAlias0 = new J2EEApplicationAlias("ij{<W'", "ij{<W'", (-1834), "ij{<W'", "ij{<W'");
      J2EEApplicationAlias j2EEApplicationAlias1 = new J2EEApplicationAlias("ij{<W'", "ij{<W'", (-1834), "ij{<W'", "ij{<W'");
      boolean boolean0 = j2EEApplicationAlias0.equals((Object) j2EEApplicationAlias1);
      assertEquals(true, boolean0);
      assertEquals(-1834, j2EEApplicationAlias1.getTotalRequests());
  }

  @Test
  public void test18()  throws Throwable  {
      J2EEApplicationAlias j2EEApplicationAlias0 = new J2EEApplicationAlias();
      int int0 = j2EEApplicationAlias0.hashCode();
      assertEquals(1, int0);
  }
}
