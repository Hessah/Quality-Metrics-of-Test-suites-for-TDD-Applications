/*
 * This file was automatically generated by EvoSuite
 */

package com.sap.managementconsole.soap.axis.sapcontrol;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.sap.managementconsole.soap.axis.sapcontrol.TaskHandlerQueue;
import javax.xml.namespace.QName;
import org.apache.axis.description.TypeDesc;
import org.apache.axis.encoding.ser.BeanDeserializer;
import org.apache.axis.encoding.ser.BeanSerializer;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class TaskHandlerQueueEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      TaskHandlerQueue taskHandlerQueue0 = new TaskHandlerQueue();
      taskHandlerQueue0.setReads(885);
      TaskHandlerQueue taskHandlerQueue1 = new TaskHandlerQueue();
      boolean boolean0 = taskHandlerQueue0.equals((Object) taskHandlerQueue1);
      assertEquals(885, taskHandlerQueue0.getReads());
      assertEquals(false, boolean0);
  }

  @Test
  public void test1()  throws Throwable  {
      TaskHandlerQueue taskHandlerQueue0 = new TaskHandlerQueue("F)/5/eH|", (-381), (-381), (-381), (-381), (-20));
      TaskHandlerQueue taskHandlerQueue1 = new TaskHandlerQueue("F)/5/eH|", (-381), (-20), (-381), (-20), (-381));
      boolean boolean0 = taskHandlerQueue0.equals((Object) taskHandlerQueue1);
      assertEquals(-20, taskHandlerQueue1.getHigh());
      assertEquals(-20, taskHandlerQueue1.getWrites());
      assertEquals(-381, taskHandlerQueue0.getNow());
      assertEquals(-20, taskHandlerQueue0.getReads());
      assertEquals(false, boolean0);
      assertEquals(-381, taskHandlerQueue0.getMax());
      assertEquals(-381, taskHandlerQueue1.getNow());
      assertEquals(-381, taskHandlerQueue1.getMax());
  }

  @Test
  public void test2()  throws Throwable  {
      TaskHandlerQueue taskHandlerQueue0 = new TaskHandlerQueue("F)/5/eH|", (-381), (-381), (-381), (-381), (-20));
      assertEquals(-381, taskHandlerQueue0.getNow());
      
      taskHandlerQueue0.setNow((-20));
      assertEquals(-381, taskHandlerQueue0.getWrites());
  }

  @Test
  public void test3()  throws Throwable  {
      TaskHandlerQueue taskHandlerQueue0 = new TaskHandlerQueue("F)/5/eH|", (-381), (-381), (-381), (-381), (-20));
      int int0 = taskHandlerQueue0.hashCode();
      assertEquals(866599180, int0);
  }

  @Test
  public void test4()  throws Throwable  {
      TaskHandlerQueue taskHandlerQueue0 = new TaskHandlerQueue("nullParent00", 1178, 1669, 1669, 1669, 1669);
      taskHandlerQueue0.setMax(1669);
      assertEquals(1178, taskHandlerQueue0.getNow());
      assertEquals(1669, taskHandlerQueue0.getWrites());
      assertEquals(1669, taskHandlerQueue0.getMax());
      assertEquals(1669, taskHandlerQueue0.getHigh());
      assertEquals(1669, taskHandlerQueue0.getReads());
  }

  @Test
  public void test5()  throws Throwable  {
      TypeDesc typeDesc0 = TaskHandlerQueue.getTypeDesc();
      assertEquals(false, typeDesc0.hasAttributes());
  }

  @Test
  public void test6()  throws Throwable  {
      TaskHandlerQueue taskHandlerQueue0 = new TaskHandlerQueue("nullParent00", 1178, 1669, 1669, 1669, 1669);
      taskHandlerQueue0.setTyp("nullParent00");
      assertEquals(1669, taskHandlerQueue0.getWrites());
      assertEquals(1178, taskHandlerQueue0.getNow());
      assertEquals(1669, taskHandlerQueue0.getMax());
      assertEquals(1669, taskHandlerQueue0.getHigh());
      assertEquals(1669, taskHandlerQueue0.getReads());
  }

  @Test
  public void test7()  throws Throwable  {
      TaskHandlerQueue taskHandlerQueue0 = new TaskHandlerQueue((String) null, (-1379), (-1379), (-1379), (-1379), (-1379));
      taskHandlerQueue0.setHigh((-1379));
      assertEquals(-1379, taskHandlerQueue0.getWrites());
      assertEquals(-1379, taskHandlerQueue0.getMax());
      assertEquals(-1379, taskHandlerQueue0.getReads());
      assertEquals(-1379, taskHandlerQueue0.getNow());
      assertEquals(-1379, taskHandlerQueue0.getHigh());
  }

  @Test
  public void test8()  throws Throwable  {
      Class<?> class0 = TaskHandlerQueue.class;
      QName qName0 = new QName("m8\"", "m8\"", "m8\"");
      BeanDeserializer beanDeserializer0 = (BeanDeserializer)TaskHandlerQueue.getDeserializer("m8\"", (Class) class0, qName0);
      assertEquals("Axis SAX Mechanism", beanDeserializer0.getMechanismType());
  }

  @Test
  public void test9()  throws Throwable  {
      Class<?> class0 = QName.class;
      QName qName0 = new QName("] is not a suqcvass of org.apache.log4j.Level", "] is not a suqcvass of org.apache.log4j.Level", "] is not a suqcvass of org.apache.log4j.Level");
      BeanSerializer beanSerializer0 = (BeanSerializer)TaskHandlerQueue.getSerializer("] is not a suqcvass of org.apache.log4j.Level", (Class) class0, qName0);
      assertEquals("Axis SAX Mechanism", beanSerializer0.getMechanismType());
  }

  @Test
  public void test10()  throws Throwable  {
      TaskHandlerQueue taskHandlerQueue0 = new TaskHandlerQueue((String) null, (-1379), (-1379), (-1379), (-1379), (-1379));
      boolean boolean0 = taskHandlerQueue0.equals((Object) null);
      assertEquals(-1379, taskHandlerQueue0.getNow());
      assertEquals(-1379, taskHandlerQueue0.getWrites());
      assertEquals(-1379, taskHandlerQueue0.getReads());
      assertEquals(false, boolean0);
      assertEquals(-1379, taskHandlerQueue0.getMax());
      assertEquals(-1379, taskHandlerQueue0.getHigh());
  }

  @Test
  public void test11()  throws Throwable  {
      TaskHandlerQueue taskHandlerQueue0 = new TaskHandlerQueue((String) null, (-1379), (-1379), (-1379), (-1379), (-1379));
      TaskHandlerQueue taskHandlerQueue1 = new TaskHandlerQueue();
      boolean boolean0 = taskHandlerQueue0.equals((Object) taskHandlerQueue1);
      assertEquals(-1379, taskHandlerQueue0.getHigh());
      assertEquals(-1379, taskHandlerQueue0.getMax());
      assertEquals(-1379, taskHandlerQueue0.getNow());
      assertEquals(false, boolean0);
      assertEquals(-1379, taskHandlerQueue0.getWrites());
      assertEquals(-1379, taskHandlerQueue0.getReads());
  }

  @Test
  public void test12()  throws Throwable  {
      TaskHandlerQueue taskHandlerQueue0 = new TaskHandlerQueue();
      TaskHandlerQueue taskHandlerQueue1 = new TaskHandlerQueue("m8\"", 859, 859, 859, 859, 859);
      boolean boolean0 = taskHandlerQueue0.equals((Object) taskHandlerQueue1);
      assertEquals(859, taskHandlerQueue1.getWrites());
      assertEquals(859, taskHandlerQueue1.getMax());
      assertEquals(859, taskHandlerQueue1.getReads());
      assertEquals(false, boolean0);
      assertEquals(859, taskHandlerQueue1.getNow());
      assertEquals(859, taskHandlerQueue1.getHigh());
  }

  @Test
  public void test13()  throws Throwable  {
      TaskHandlerQueue taskHandlerQueue0 = new TaskHandlerQueue("F)/5/eH|", (-381), (-381), (-381), (-381), (-20));
      TaskHandlerQueue taskHandlerQueue1 = new TaskHandlerQueue();
      boolean boolean0 = taskHandlerQueue0.equals((Object) taskHandlerQueue1);
      assertEquals(-381, taskHandlerQueue0.getHigh());
      assertEquals(false, boolean0);
      assertEquals(-381, taskHandlerQueue0.getNow());
      assertFalse(taskHandlerQueue1.equals(taskHandlerQueue0));
      assertEquals(-20, taskHandlerQueue0.getReads());
      assertEquals(-381, taskHandlerQueue0.getWrites());
      assertEquals(-381, taskHandlerQueue0.getMax());
  }

  @Test
  public void test14()  throws Throwable  {
      TaskHandlerQueue taskHandlerQueue0 = new TaskHandlerQueue("nullParent00", 1178, 1669, 1669, 1669, 1669);
      TaskHandlerQueue taskHandlerQueue1 = new TaskHandlerQueue("nullParent00", 1178, 1669, 1178, 1669, 1669);
      boolean boolean0 = taskHandlerQueue0.equals((Object) taskHandlerQueue1);
      assertEquals(1178, taskHandlerQueue0.getNow());
      assertEquals(1669, taskHandlerQueue1.getWrites());
      assertEquals(1669, taskHandlerQueue1.getHigh());
      assertEquals(1669, taskHandlerQueue1.getReads());
      assertEquals(false, boolean0);
      assertEquals(1178, taskHandlerQueue1.getMax());
      assertFalse(taskHandlerQueue1.equals(taskHandlerQueue0));
  }

  @Test
  public void test15()  throws Throwable  {
      TaskHandlerQueue taskHandlerQueue0 = new TaskHandlerQueue();
      TaskHandlerQueue taskHandlerQueue1 = new TaskHandlerQueue();
      boolean boolean0 = taskHandlerQueue0.equals((Object) taskHandlerQueue1);
      assertEquals(true, boolean0);
  }

  @Test
  public void test16()  throws Throwable  {
      TaskHandlerQueue taskHandlerQueue0 = new TaskHandlerQueue();
      TaskHandlerQueue taskHandlerQueue1 = new TaskHandlerQueue();
      taskHandlerQueue0.setWrites(859);
      boolean boolean0 = taskHandlerQueue0.equals((Object) taskHandlerQueue1);
      assertEquals(859, taskHandlerQueue0.getWrites());
      assertEquals(false, boolean0);
  }

  @Test
  public void test17()  throws Throwable  {
      TaskHandlerQueue taskHandlerQueue0 = new TaskHandlerQueue();
      int int0 = taskHandlerQueue0.hashCode();
      assertEquals(1, int0);
  }
}
