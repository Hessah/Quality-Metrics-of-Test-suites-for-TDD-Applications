/*
 * This file was automatically generated by EvoSuite
 */

package com.sap.managementconsole.soap.axis.sapcontrol;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.sap.managementconsole.soap.axis.sapcontrol.WorkProcess;
import javax.xml.namespace.QName;
import org.apache.axis.description.TypeDesc;
import org.apache.axis.encoding.ser.BeanDeserializer;
import org.apache.axis.encoding.ser.BeanSerializer;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class WorkProcessEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      WorkProcess workProcess0 = new WorkProcess();
      WorkProcess workProcess1 = new WorkProcess();
      boolean boolean0 = workProcess0.equals((Object) workProcess1);
      assertEquals(true, boolean0);
  }

  @Test
  public void test1()  throws Throwable  {
      WorkProcess workProcess0 = new WorkProcess(0, ".k+|0~", 0, ".k+|0~", ".k+|0~", ".k+|0~", ".k+|0~", ".k+|0~", ".k+|0~", ".k+|0~", ".k+|0~", ".k+|0~", ".k+|0~", ".k+|0~", ".k+|0~");
      assertEquals(0, workProcess0.getPid());
      
      workProcess0.setPid(0);
      assertEquals(0, workProcess0.getNo());
  }

  @Test
  public void test2()  throws Throwable  {
      Class<?> class0 = QName.class;
      BeanSerializer beanSerializer0 = (BeanSerializer)WorkProcess.getSerializer((String) null, (Class) class0, (QName) null);
      assertEquals("Axis SAX Mechanism", beanSerializer0.getMechanismType());
  }

  @Test
  public void test3()  throws Throwable  {
      Class<?> class0 = Class.class;
      QName qName0 = new QName("&", "&");
      BeanDeserializer beanDeserializer0 = (BeanDeserializer)WorkProcess.getDeserializer("&", (Class) class0, qName0);
      assertEquals(false, beanDeserializer0.componentsReady());
  }

  @Test
  public void test4()  throws Throwable  {
      WorkProcess workProcess0 = new WorkProcess();
      workProcess0.setReason("6$n>etC*L");
      WorkProcess workProcess1 = new WorkProcess();
      boolean boolean0 = workProcess0.equals((Object) workProcess1);
      assertFalse(workProcess1.equals(workProcess0));
      assertEquals(0, workProcess0.getNo());
      assertEquals(0, workProcess0.getPid());
      assertEquals(false, boolean0);
  }

  @Test
  public void test5()  throws Throwable  {
      TypeDesc typeDesc0 = WorkProcess.getTypeDesc();
      assertEquals(false, typeDesc0.hasAttributes());
  }

  @Test
  public void test6()  throws Throwable  {
      WorkProcess workProcess0 = new WorkProcess();
      workProcess0.setNo(559);
      assertEquals(559, workProcess0.getNo());
  }

  @Test
  public void test7()  throws Throwable  {
      WorkProcess workProcess0 = new WorkProcess();
      workProcess0.setTyp((String) null);
      assertNull(workProcess0.getStart());
  }

  @Test
  public void test8()  throws Throwable  {
      WorkProcess workProcess0 = new WorkProcess();
      workProcess0.setSem("-5mmGpMi@8FSJ}%~");
      WorkProcess workProcess1 = new WorkProcess();
      boolean boolean0 = workProcess0.equals((Object) workProcess1);
      assertEquals(0, workProcess0.getPid());
      assertEquals(0, workProcess0.getNo());
      assertFalse(workProcess1.equals(workProcess0));
      assertEquals(false, boolean0);
  }

  @Test
  public void test9()  throws Throwable  {
      WorkProcess workProcess0 = new WorkProcess();
      workProcess0.setCpu("mj/7!**.k;)Oq*?");
      WorkProcess workProcess1 = new WorkProcess();
      boolean boolean0 = workProcess0.equals((Object) workProcess1);
      assertFalse(workProcess1.equals(workProcess0));
      assertEquals(0, workProcess1.getPid());
      assertEquals(0, workProcess1.getNo());
      assertEquals(false, boolean0);
  }

  @Test
  public void test10()  throws Throwable  {
      WorkProcess workProcess0 = new WorkProcess();
      workProcess0.setProgram(";!_HN]R0L'c</");
      WorkProcess workProcess1 = new WorkProcess();
      boolean boolean0 = workProcess0.equals((Object) workProcess1);
      assertEquals(0, workProcess1.getPid());
      assertFalse(workProcess1.equals(workProcess0));
      assertEquals(0, workProcess1.getNo());
      assertEquals(false, boolean0);
  }

  @Test
  public void test11()  throws Throwable  {
      WorkProcess workProcess0 = new WorkProcess();
      workProcess0.setTable(" in ht.");
      WorkProcess workProcess1 = new WorkProcess();
      boolean boolean0 = workProcess0.equals((Object) workProcess1);
      assertFalse(workProcess1.equals(workProcess0));
      assertEquals(0, workProcess1.getNo());
      assertEquals(0, workProcess1.getPid());
      assertEquals(false, boolean0);
  }

  @Test
  public void test12()  throws Throwable  {
      WorkProcess workProcess0 = new WorkProcess(1657, "yuSBcg", 1657, "yuSBcg", "yuSBcg", "yuSBcg", "yuSBcg", "yuSBcg", "yuSBcg", "T", "yuSBcg", "T", "yuSBcg", "T", "T");
      boolean boolean0 = workProcess0.equals((Object) "yuSBcg");
      assertEquals(1657, workProcess0.getPid());
      assertEquals("T", workProcess0.getTable());
      assertEquals("yuSBcg", workProcess0.getTyp());
      assertEquals(false, boolean0);
      assertEquals("yuSBcg", workProcess0.getSem());
      assertEquals("yuSBcg", workProcess0.getReason());
      assertEquals(1657, workProcess0.getNo());
      assertEquals("yuSBcg", workProcess0.getStart());
      assertEquals("yuSBcg", workProcess0.getStatus());
      assertEquals("T", workProcess0.getTime());
      assertEquals("yuSBcg", workProcess0.getProgram());
      assertEquals("T", workProcess0.getClient());
      assertEquals("yuSBcg", workProcess0.getErr());
      assertEquals("yuSBcg", workProcess0.getCpu());
      assertEquals("T", workProcess0.getAction());
      assertEquals("yuSBcg", workProcess0.getUser());
  }

  @Test
  public void test13()  throws Throwable  {
      WorkProcess workProcess0 = new WorkProcess();
      WorkProcess workProcess1 = new WorkProcess();
      assertTrue(workProcess1.equals(workProcess0));
      
      workProcess0.setClient("Could not find resource: [");
      boolean boolean0 = workProcess0.equals((Object) workProcess1);
      assertFalse(workProcess0.equals(workProcess1));
      assertEquals(false, boolean0);
  }

  @Test
  public void test14()  throws Throwable  {
      WorkProcess workProcess0 = new WorkProcess();
      WorkProcess workProcess1 = new WorkProcess(1743, "YAtP,J8", 1743, "YAtP,J8", "YAtP,J8", "YAtP,J8", "YAtP,J8", "YAtP,J8", "YAtP,J8", "YAtP,J8", "YAtP,J8", "YAtP,J8", "YAtP,J8", "YAtP,J8", "YAtP,J8");
      workProcess1.equals((Object) workProcess0);
      assertEquals(1743, workProcess1.getPid());
      assertEquals(1743, workProcess1.getNo());
  }

  @Test
  public void test15()  throws Throwable  {
      WorkProcess workProcess0 = new WorkProcess(0, ".k+|0~", 0, ".k+|0~", ".k+|0~", ".k+|0~", ".k+|0~", ".k+|0~", ".k+|0~", ".k+|0~", ".k+|0~", ".k+|0~", ".k+|0~", ".k+|0~", ".k+|0~");
      WorkProcess workProcess1 = new WorkProcess(0, ".k+|0~", 0, ".k+|0~", ".k+|0~", ".k+|0~", ".k+|0~", ".k+|0~", ".k+|0~", ".k+|0~", ".k+|0~", ".k+|0~", ".k+|0~", ".k+|0~", ".k+|0~");
      boolean boolean0 = workProcess0.equals((Object) workProcess1);
      assertEquals(true, boolean0);
      assertEquals(0, workProcess1.getNo());
      assertEquals(0, workProcess1.getPid());
  }

  @Test
  public void test16()  throws Throwable  {
      WorkProcess workProcess0 = new WorkProcess();
      WorkProcess workProcess1 = new WorkProcess(0, "QiFV$Y-", 1, (String) null, "QiFV$Y-", (String) null, "QiFV$Y-", "QiFV$Y-", (String) null, (String) null, (String) null, "QiFV$Y-", "QiFV$Y-", "QiFV$Y-", (String) null);
      boolean boolean0 = workProcess0.equals((Object) workProcess1);
      assertEquals(false, boolean0);
      assertEquals(0, workProcess1.getNo());
  }

  @Test
  public void test17()  throws Throwable  {
      WorkProcess workProcess0 = new WorkProcess(0, "NBaQ:`uw", 0, "NBaQ:`uw", "NBaQ:`uw", "NBaQ:`uw", "NBaQ:`uw", "NBaQ:`uw", "NBaQ:`uw", "NBaQ:`uw", "NBaQ:`uw", "NBaQ:`uw", "NBaQ:`uw", "NBaQ:`uw", "NBaQ:`uw");
      WorkProcess workProcess1 = new WorkProcess();
      workProcess0.equals((Object) workProcess1);
      assertEquals(0, workProcess0.getPid());
      assertEquals(0, workProcess0.getNo());
  }

  @Test
  public void test18()  throws Throwable  {
      WorkProcess workProcess0 = new WorkProcess(774, "", 774, "", "", "", "", "", "", "", "", "", "", "", "");
      WorkProcess workProcess1 = new WorkProcess(774, "", (-4), "", "", "", "", "", "", "", "", "", "", "", "");
      boolean boolean0 = workProcess0.equals((Object) workProcess1);
      assertEquals(774, workProcess1.getNo());
      assertFalse(workProcess1.equals(workProcess0));
      assertEquals(-4, workProcess1.getPid());
      assertEquals(false, boolean0);
  }

  @Test
  public void test19()  throws Throwable  {
      WorkProcess workProcess0 = new WorkProcess();
      WorkProcess workProcess1 = new WorkProcess();
      assertTrue(workProcess1.equals(workProcess0));
      
      workProcess1.setStatus("org.apache.commons.logging.Log.allowFlawedContext");
      boolean boolean0 = workProcess0.equals((Object) workProcess1);
      assertFalse(workProcess1.equals(workProcess0));
      assertEquals(false, boolean0);
  }

  @Test
  public void test20()  throws Throwable  {
      WorkProcess workProcess0 = new WorkProcess(1657, "yuSBcg", 1657, "yuSBcg", "yuSBcg", "yuSBcg", "yuSBcg", "yuSBcg", "yuSBcg", "T", "yuSBcg", "T", "yuSBcg", "T", "T");
      WorkProcess workProcess1 = new WorkProcess(1657, "yuSBcg", 1657, "T", "T", "yuSBcg", "T", "T", "T", "T", "T", "yuSBcg", "T", "T", "yuSBcg");
      boolean boolean0 = workProcess0.equals((Object) workProcess1);
      assertEquals("yuSBcg", workProcess1.getClient());
      assertEquals("yuSBcg", workProcess1.getTable());
      assertEquals("T", workProcess1.getCpu());
      assertEquals("T", workProcess0.getTime());
      assertEquals(1657, workProcess1.getNo());
      assertEquals("T", workProcess0.getClient());
      assertEquals("yuSBcg", workProcess0.getCpu());
      assertEquals("yuSBcg", workProcess0.getStart());
      assertEquals("yuSBcg", workProcess0.getReason());
      assertEquals("yuSBcg", workProcess1.getTyp());
      assertEquals("yuSBcg", workProcess0.getErr());
      assertEquals("T", workProcess1.getReason());
      assertEquals("yuSBcg", workProcess0.getSem());
      assertEquals("T", workProcess1.getProgram());
      assertEquals("yuSBcg", workProcess0.getStatus());
      assertEquals("T", workProcess1.getTime());
      assertEquals("yuSBcg", workProcess1.getStart());
      assertEquals("T", workProcess1.getUser());
      assertEquals("T", workProcess1.getErr());
      assertEquals(1657, workProcess1.getPid());
      assertEquals("T", workProcess1.getStatus());
      assertEquals("T", workProcess0.getAction());
      assertEquals("yuSBcg", workProcess0.getTyp());
      assertEquals("yuSBcg", workProcess0.getUser());
      assertEquals(false, boolean0);
      assertEquals("T", workProcess1.getAction());
  }

  @Test
  public void test21()  throws Throwable  {
      WorkProcess workProcess0 = new WorkProcess(13, "i", 13, "i", (String) null, "i", "i", "i", "i", "i", "i", "i", "i", "i", "i");
      WorkProcess workProcess1 = new WorkProcess(13, "i", 13, "i", "i", "i", "i", "i", "i", "i", "i", "i", "i", "i", "i");
      boolean boolean0 = workProcess0.equals((Object) workProcess1);
      assertEquals(13, workProcess1.getPid());
      assertEquals(false, boolean0);
      assertEquals(13, workProcess1.getNo());
  }

  @Test
  public void test22()  throws Throwable  {
      WorkProcess workProcess0 = new WorkProcess();
      WorkProcess workProcess1 = new WorkProcess();
      assertTrue(workProcess1.equals(workProcess0));
      
      workProcess1.setStart("QiFV$Y-");
      boolean boolean0 = workProcess0.equals((Object) workProcess1);
      assertEquals(false, boolean0);
  }

  @Test
  public void test23()  throws Throwable  {
      WorkProcess workProcess0 = new WorkProcess();
      WorkProcess workProcess1 = new WorkProcess();
      assertTrue(workProcess1.equals(workProcess0));
      
      workProcess1.setErr("yuSBFg");
      boolean boolean0 = workProcess0.equals((Object) workProcess1);
      assertEquals(false, boolean0);
  }

  @Test
  public void test24()  throws Throwable  {
      WorkProcess workProcess0 = new WorkProcess();
      workProcess0.setErr(":I+o6\"y");
      WorkProcess workProcess1 = new WorkProcess();
      boolean boolean0 = workProcess0.equals((Object) workProcess1);
      assertEquals(0, workProcess1.getPid());
      assertFalse(workProcess1.equals(workProcess0));
      assertEquals(0, workProcess1.getNo());
      assertEquals(false, boolean0);
  }

  @Test
  public void test25()  throws Throwable  {
      WorkProcess workProcess0 = new WorkProcess(17, ";z:-,~J>vDS7", 17, ";z:-,~J>vDS7", ";z:-,~J>vDS7", ";z:-,~J>vDS7", ";z:-,~J>vDS7", (String) null, ";z:-,~J>vDS7", ";z:-,~J>vDS7", ";z:-,~J>vDS7", ";z:-,~J>vDS7", ";z:-,~J>vDS7", ";z:-,~J>vDS7", ";z:-,~J>vDS7");
      WorkProcess workProcess1 = new WorkProcess(17, ";z:-,~J>vDS7", 17, ";z:-,~J>vDS7", ";z:-,~J>vDS7", ";z:-,~J>vDS7", ";z:-,~J>vDS7", ";z:-,~J>vDS7", ";z:-,~J>vDS7", ";z:-,~J>vDS7", ";z:-,~J>vDS7", (String) null, ";z:-,~J>vDS7", (String) null, ";z:-,~J>vDS7");
      boolean boolean0 = workProcess0.equals((Object) workProcess1);
      assertEquals(17, workProcess0.getPid());
      assertEquals(false, boolean0);
      assertEquals(17, workProcess0.getNo());
  }

  @Test
  public void test26()  throws Throwable  {
      WorkProcess workProcess0 = new WorkProcess();
      WorkProcess workProcess1 = new WorkProcess();
      assertTrue(workProcess1.equals(workProcess0));
      
      workProcess1.setCpu(";!_HN]R0L'c</");
      boolean boolean0 = workProcess0.equals((Object) workProcess1);
      assertEquals(false, boolean0);
  }

  @Test
  public void test27()  throws Throwable  {
      WorkProcess workProcess0 = new WorkProcess();
      WorkProcess workProcess1 = new WorkProcess();
      assertTrue(workProcess1.equals(workProcess0));
      
      workProcess1.setTime("");
      boolean boolean0 = workProcess0.equals((Object) workProcess1);
      assertEquals(false, boolean0);
  }

  @Test
  public void test28()  throws Throwable  {
      WorkProcess workProcess0 = new WorkProcess();
      WorkProcess workProcess1 = new WorkProcess(0, (String) null, 0, (String) null, (String) null, (String) null, (String) null, (String) null, (String) null, (String) null, "F|'`", "F|'`", "F|'`", "F|'`", "F|'`");
      workProcess0.equals((Object) workProcess1);
      assertEquals(0, workProcess1.getNo());
      assertEquals(0, workProcess1.getPid());
  }

  @Test
  public void test29()  throws Throwable  {
      WorkProcess workProcess0 = new WorkProcess();
      WorkProcess workProcess1 = new WorkProcess();
      assertTrue(workProcess1.equals(workProcess0));
      
      workProcess1.setClient("i");
      boolean boolean0 = workProcess0.equals((Object) workProcess1);
      assertEquals(false, boolean0);
  }

  @Test
  public void test30()  throws Throwable  {
      WorkProcess workProcess0 = new WorkProcess();
      WorkProcess workProcess1 = new WorkProcess();
      assertTrue(workProcess1.equals(workProcess0));
      
      workProcess1.setUser("=D/+{");
      boolean boolean0 = workProcess0.equals((Object) workProcess1);
      assertEquals(false, boolean0);
  }

  @Test
  public void test31()  throws Throwable  {
      WorkProcess workProcess0 = new WorkProcess(0, ".k+|0~", 0, ".k+|0~", ".k+|0~", ".k+|0~", ".k+|0~", ".k+|0~", ".k+|0~", ".k+|0~", ".k+|0~", ".k+|0~", ".k+|0~", ".k+|0~", ".k+|0~");
      WorkProcess workProcess1 = new WorkProcess(0, ".k+|0~", 0, ".k+|0~", ".k+|0~", ".k+|0~", ".k+|0~", ".k+|0~", ".k+|0~", ".k+|0~", ".k+|0~", ".k+|0~", ".k+|0~", ".k+|0~", ".k+|0~");
      assertTrue(workProcess1.equals(workProcess0));
      
      workProcess0.setAction("1K4dRze^f9a-\"5");
      boolean boolean0 = workProcess0.equals((Object) workProcess1);
      assertEquals(false, boolean0);
  }

  @Test
  public void test32()  throws Throwable  {
      WorkProcess workProcess0 = new WorkProcess(11, "", 11, "", "", "", "", "", "", "", "", "", "", "", (String) null);
      WorkProcess workProcess1 = new WorkProcess(11, "", 11, "", "", "", "", "", "", "", "", "", "", "", "");
      boolean boolean0 = workProcess0.equals((Object) workProcess1);
      assertEquals(11, workProcess1.getPid());
      assertEquals(false, boolean0);
      assertEquals(11, workProcess1.getNo());
  }

  @Test
  public void test33()  throws Throwable  {
      WorkProcess workProcess0 = new WorkProcess();
      int int0 = workProcess0.hashCode();
      assertEquals(1, int0);
  }

  @Test
  public void test34()  throws Throwable  {
      WorkProcess workProcess0 = new WorkProcess(0, "NBaQ:`uw", 0, "NBaQ:`uw", "NBaQ:`uw", "NBaQ:`uw", "NBaQ:`uw", "NBaQ:`uw", "NBaQ:`uw", "NBaQ:`uw", "NBaQ:`uw", "NBaQ:`uw", "NBaQ:`uw", "NBaQ:`uw", "NBaQ:`uw");
      int int0 = workProcess0.hashCode();
      assertEquals(1689899741, int0);
  }
}
