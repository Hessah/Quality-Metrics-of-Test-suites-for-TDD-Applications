/*
 * This file was automatically generated by EvoSuite
 */

package com.sap.managementconsole.soap.axis.saphostcontrol;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.sap.managementconsole.soap.axis.saphostcontrol.ACOperationArguments;
import javax.xml.namespace.QName;
import org.apache.axis.description.TypeDesc;
import org.apache.axis.encoding.ser.BeanDeserializer;
import org.apache.axis.encoding.ser.BeanSerializer;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class ACOperationArgumentsEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      ACOperationArguments aCOperationArguments0 = new ACOperationArguments();
      aCOperationArguments0.setMArgumentsName("org.apache.log4j.Layout");
      ACOperationArguments aCOperationArguments1 = new ACOperationArguments("org.apache.log4j.Layout", "org.apache.log4j.Layout");
      boolean boolean0 = aCOperationArguments0.equals((Object) aCOperationArguments1);
      assertEquals(false, boolean0);
      assertFalse(aCOperationArguments1.equals(aCOperationArguments0));
  }

  @Test
  public void test1()  throws Throwable  {
      ACOperationArguments aCOperationArguments0 = new ACOperationArguments();
      aCOperationArguments0.setMArgumentsValue("");
      aCOperationArguments0.setMArgumentsName("^\"H^");
      ACOperationArguments aCOperationArguments1 = new ACOperationArguments("^\"H^", "^\"H^");
      boolean boolean0 = aCOperationArguments0.equals((Object) aCOperationArguments1);
      assertEquals(false, boolean0);
  }

  @Test
  public void test2()  throws Throwable  {
      ACOperationArguments aCOperationArguments0 = new ACOperationArguments("r", "r");
      ACOperationArguments aCOperationArguments1 = new ACOperationArguments("r", "r");
      boolean boolean0 = aCOperationArguments0.equals((Object) aCOperationArguments1);
      assertEquals(true, boolean0);
  }

  @Test
  public void test3()  throws Throwable  {
      Class<?> class0 = Object.class;
      QName qName0 = new QName("0tE%pjqi[B]m");
      BeanSerializer beanSerializer0 = (BeanSerializer)ACOperationArguments.getSerializer("0tE%pjqi[B]m", (Class) class0, qName0);
      assertEquals("Axis SAX Mechanism", beanSerializer0.getMechanismType());
  }

  @Test
  public void test4()  throws Throwable  {
      Class<?> class0 = Object.class;
      QName qName0 = new QName("0tE%pjqi[B]m");
      BeanDeserializer beanDeserializer0 = (BeanDeserializer)ACOperationArguments.getDeserializer("0tE%pjqi[B]m", (Class) class0, qName0);
      assertEquals("Axis SAX Mechanism", beanDeserializer0.getMechanismType());
  }

  @Test
  public void test5()  throws Throwable  {
      TypeDesc typeDesc0 = ACOperationArguments.getTypeDesc();
      assertEquals(false, typeDesc0.hasAttributes());
  }

  @Test
  public void test6()  throws Throwable  {
      ACOperationArguments aCOperationArguments0 = new ACOperationArguments();
      Object object0 = new Object();
      boolean boolean0 = aCOperationArguments0.equals(object0);
      assertEquals(false, boolean0);
  }

  @Test
  public void test7()  throws Throwable  {
      ACOperationArguments aCOperationArguments0 = new ACOperationArguments("r", "r");
      ACOperationArguments aCOperationArguments1 = new ACOperationArguments("C[Cv'4e.5<-{Lmf", "r");
      boolean boolean0 = aCOperationArguments0.equals((Object) aCOperationArguments1);
      assertEquals("r", aCOperationArguments1.getMArgumentsValue());
      assertEquals(false, boolean0);
  }

  @Test
  public void test8()  throws Throwable  {
      ACOperationArguments aCOperationArguments0 = new ACOperationArguments();
      ACOperationArguments aCOperationArguments1 = new ACOperationArguments("q/7&G", "q/7&G");
      boolean boolean0 = aCOperationArguments0.equals((Object) aCOperationArguments1);
      assertEquals(false, boolean0);
  }

  @Test
  public void test9()  throws Throwable  {
      ACOperationArguments aCOperationArguments0 = new ACOperationArguments();
      ACOperationArguments aCOperationArguments1 = new ACOperationArguments();
      boolean boolean0 = aCOperationArguments0.equals((Object) aCOperationArguments1);
      assertEquals(true, boolean0);
  }

  @Test
  public void test10()  throws Throwable  {
      ACOperationArguments aCOperationArguments0 = new ACOperationArguments("r", "r");
      int int0 = aCOperationArguments0.hashCode();
      assertEquals(229, int0);
  }

  @Test
  public void test11()  throws Throwable  {
      ACOperationArguments aCOperationArguments0 = new ACOperationArguments();
      int int0 = aCOperationArguments0.hashCode();
      assertEquals(1, int0);
  }
}
