/*
 * This file was automatically generated by EvoSuite
 */

package com.sap.managementconsole.soap.axis.saphostcontrol;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.sap.managementconsole.soap.axis.saphostcontrol.ACOperation;
import com.sap.managementconsole.soap.axis.saphostcontrol.ACOperationArguments;
import com.sap.managementconsole.soap.axis.saphostcontrol.ACOperationCode;
import javax.xml.namespace.QName;
import org.apache.axis.description.TypeDesc;
import org.apache.axis.encoding.ser.BeanDeserializer;
import org.apache.axis.encoding.ser.BeanSerializer;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class ACOperationEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      Class<?> class0 = QName.class;
      QName qName0 = new QName("AC-OP-IFDOWN", "AC-OP-IFDOWN");
      BeanSerializer beanSerializer0 = (BeanSerializer)ACOperation.getSerializer("AC-OP-IFDOWN", (Class) class0, qName0);
      assertEquals("Axis SAX Mechanism", beanSerializer0.getMechanismType());
  }

  @Test
  public void test1()  throws Throwable  {
      ACOperation aCOperation0 = new ACOperation();
      ACOperationCode aCOperationCode0 = ACOperationCode.value5;
      aCOperation0.setMOperationCode(aCOperationCode0);
      ACOperation aCOperation1 = new ACOperation();
      boolean boolean0 = aCOperation0.equals((Object) aCOperation1);
      assertEquals(false, boolean0);
      assertFalse(aCOperation1.equals(aCOperation0));
  }

  @Test
  public void test2()  throws Throwable  {
      TypeDesc typeDesc0 = ACOperation.getTypeDesc();
      assertEquals(false, typeDesc0.hasAttributes());
  }

  @Test
  public void test3()  throws Throwable  {
      ACOperation aCOperation0 = new ACOperation();
      ACOperationArguments[] aCOperationArgumentsArray0 = new ACOperationArguments[11];
      aCOperation0.setMOperationArguments(aCOperationArgumentsArray0);
      ACOperation aCOperation1 = new ACOperation((ACOperationCode) null, aCOperationArgumentsArray0);
      boolean boolean0 = aCOperation0.equals((Object) aCOperation1);
      assertEquals(true, boolean0);
  }

  @Test
  public void test4()  throws Throwable  {
      QName qName0 = new QName("", "");
      Class<?> class0 = ACOperationCode.class;
      BeanDeserializer beanDeserializer0 = (BeanDeserializer)ACOperation.getDeserializer("", (Class) class0, qName0);
      assertEquals("Axis SAX Mechanism", beanDeserializer0.getMechanismType());
  }

  @Test
  public void test5()  throws Throwable  {
      ACOperation aCOperation0 = new ACOperation();
      boolean boolean0 = aCOperation0.equals((Object) "AC-OP-IFDOWN");
      assertEquals(false, boolean0);
  }

  @Test
  public void test6()  throws Throwable  {
      ACOperation aCOperation0 = new ACOperation();
      ACOperationArguments[] aCOperationArgumentsArray0 = new ACOperationArguments[15];
      ACOperation aCOperation1 = new ACOperation((ACOperationCode) null, aCOperationArgumentsArray0);
      boolean boolean0 = aCOperation0.equals((Object) aCOperation1);
      assertEquals(false, boolean0);
      assertFalse(aCOperation1.equals(aCOperation0));
  }

  @Test
  public void test7()  throws Throwable  {
      ACOperation aCOperation0 = new ACOperation();
      ACOperationCode aCOperationCode0 = ACOperationCode.value1;
      ACOperationArguments[] aCOperationArgumentsArray0 = new ACOperationArguments[4];
      ACOperation aCOperation1 = new ACOperation(aCOperationCode0, aCOperationArgumentsArray0);
      boolean boolean0 = aCOperation0.equals((Object) aCOperation1);
      assertEquals(false, boolean0);
  }

  @Test
  public void test8()  throws Throwable  {
      ACOperation aCOperation0 = new ACOperation();
      ACOperationCode aCOperationCode0 = ACOperationCode.value5;
      aCOperation0.setMOperationCode(aCOperationCode0);
      ACOperation aCOperation1 = new ACOperation();
      assertFalse(aCOperation1.equals(aCOperation0));
      
      aCOperation1.setMOperationCode(aCOperationCode0);
      boolean boolean0 = aCOperation0.equals((Object) aCOperation1);
      assertTrue(aCOperation1.equals(aCOperation0));
      assertEquals(true, boolean0);
  }

  @Test
  public void test9()  throws Throwable  {
      ACOperation aCOperation0 = new ACOperation();
      ACOperationArguments[] aCOperationArgumentsArray0 = new ACOperationArguments[23];
      aCOperation0.setMOperationArguments(aCOperationArgumentsArray0);
      ACOperation aCOperation1 = new ACOperation();
      boolean boolean0 = aCOperation0.equals((Object) aCOperation1);
      assertFalse(aCOperation1.equals(aCOperation0));
      assertEquals(false, boolean0);
  }

  @Test
  public void test10()  throws Throwable  {
      ACOperation aCOperation0 = new ACOperation();
      ACOperationCode aCOperationCode0 = ACOperationCode.value5;
      aCOperation0.setMOperationCode(aCOperationCode0);
      int int0 = aCOperation0.hashCode();
      assertEquals((-179220392), int0);
  }

  @Test
  public void test11()  throws Throwable  {
      ACOperation aCOperation0 = new ACOperation();
      ACOperationArguments[] aCOperationArgumentsArray0 = new ACOperationArguments[23];
      ACOperationArguments aCOperationArguments0 = new ACOperationArguments();
      aCOperationArgumentsArray0[1] = aCOperationArguments0;
      aCOperation0.setMOperationArguments(aCOperationArgumentsArray0);
      int int0 = aCOperation0.hashCode();
      assertEquals(2, int0);
  }
}
