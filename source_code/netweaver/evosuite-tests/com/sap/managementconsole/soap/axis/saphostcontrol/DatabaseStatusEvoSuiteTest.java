/*
 * This file was automatically generated by EvoSuite
 */

package com.sap.managementconsole.soap.axis.saphostcontrol;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.sap.managementconsole.soap.axis.saphostcontrol.DatabaseStatus;
import java.io.ObjectStreamException;
import javax.xml.namespace.QName;
import org.apache.axis.description.TypeDesc;
import org.apache.axis.encoding.ser.EnumDeserializer;
import org.apache.axis.encoding.ser.EnumSerializer;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class DatabaseStatusEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      Class<?> class0 = DatabaseStatus.class;
      QName qName0 = new QName("D]<R5");
      EnumDeserializer enumDeserializer0 = (EnumDeserializer)DatabaseStatus.getDeserializer("D]<R5", (Class) class0, qName0);
      assertEquals(false, enumDeserializer0.componentsReady());
  }

  @Test
  public void test1()  throws Throwable  {
      try {
        DatabaseStatus.fromString("mLEvl;");
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
      }
  }

  @Test
  public void test2()  throws Throwable  {
      DatabaseStatus databaseStatus0 = DatabaseStatus.value5;
      String string0 = databaseStatus0.getValue();
      assertEquals("SAPHostControl-DB-STARTING", string0);
      assertNotNull(string0);
  }

  @Test
  public void test3()  throws Throwable  {
      TypeDesc typeDesc0 = DatabaseStatus.getTypeDesc();
      assertEquals(false, typeDesc0.hasAttributes());
  }

  @Test
  public void test4()  throws Throwable  {
      DatabaseStatus databaseStatus0 = new DatabaseStatus("");
      assertNotNull(databaseStatus0);
      
      int int0 = databaseStatus0.hashCode();
      assertEquals(0, int0);
  }

  @Test
  public void test5()  throws Throwable  {
      DatabaseStatus databaseStatus0 = DatabaseStatus.value5;
      String string0 = databaseStatus0.toString();
      assertEquals("SAPHostControl-DB-STARTING", string0);
      assertNotNull(string0);
  }

  @Test
  public void test6()  throws Throwable  {
      DatabaseStatus databaseStatus0 = DatabaseStatus.value5;
      DatabaseStatus databaseStatus1 = (DatabaseStatus)databaseStatus0.readResolve();
      assertNotNull(databaseStatus1);
      
      boolean boolean0 = databaseStatus0.equals((Object) databaseStatus1);
      assertEquals("", databaseStatus1.toString());
      assertEquals(false, boolean0);
  }

  @Test
  public void test7()  throws Throwable  {
      Class<?> class0 = DatabaseStatus.class;
      QName qName0 = new QName("Z", "Z", "Z");
      EnumSerializer enumSerializer0 = (EnumSerializer)DatabaseStatus.getSerializer("Z", (Class) class0, qName0);
      assertEquals("Axis SAX Mechanism", enumSerializer0.getMechanismType());
  }

  @Test
  public void test8()  throws Throwable  {
      DatabaseStatus databaseStatus0 = new DatabaseStatus("");
      assertNotNull(databaseStatus0);
      
      boolean boolean0 = databaseStatus0.equals((Object) "SAPHostControl-DB-UNKNOWN");
      assertEquals(false, boolean0);
      assertEquals("", databaseStatus0.getValue());
  }
}
