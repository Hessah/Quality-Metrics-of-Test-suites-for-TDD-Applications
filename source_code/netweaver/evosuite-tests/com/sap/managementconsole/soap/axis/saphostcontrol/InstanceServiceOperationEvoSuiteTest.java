/*
 * This file was automatically generated by EvoSuite
 */

package com.sap.managementconsole.soap.axis.saphostcontrol;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.sap.managementconsole.soap.axis.saphostcontrol.InstanceServiceOperation;
import com.sap.managementconsole.soap.axis.saphostcontrol.OperationCode;
import com.sap.managementconsole.soap.axis.saphostcontrol.TargetService;
import javax.xml.namespace.QName;
import org.apache.axis.description.TypeDesc;
import org.apache.axis.encoding.ser.BeanDeserializer;
import org.apache.axis.encoding.ser.BeanSerializer;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class InstanceServiceOperationEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      InstanceServiceOperation instanceServiceOperation0 = new InstanceServiceOperation();
      TargetService targetService0 = new TargetService();
      instanceServiceOperation0.setMTargetService(targetService0);
      InstanceServiceOperation instanceServiceOperation1 = new InstanceServiceOperation();
      boolean boolean0 = instanceServiceOperation0.equals((Object) instanceServiceOperation1);
      assertEquals(false, boolean0);
      assertFalse(instanceServiceOperation1.equals(instanceServiceOperation0));
  }

  @Test
  public void test1()  throws Throwable  {
      Class<?> class0 = InstanceServiceOperation.class;
      QName qName0 = new QName(",29*", ",29*");
      BeanSerializer beanSerializer0 = (BeanSerializer)InstanceServiceOperation.getSerializer(",29*", (Class) class0, qName0);
      assertEquals("Axis SAX Mechanism", beanSerializer0.getMechanismType());
  }

  @Test
  public void test2()  throws Throwable  {
      TypeDesc typeDesc0 = InstanceServiceOperation.getTypeDesc();
      assertEquals(false, typeDesc0.hasAttributes());
  }

  @Test
  public void test3()  throws Throwable  {
      InstanceServiceOperation instanceServiceOperation0 = new InstanceServiceOperation();
      InstanceServiceOperation instanceServiceOperation1 = new InstanceServiceOperation();
      boolean boolean0 = instanceServiceOperation0.equals((Object) instanceServiceOperation1);
      assertEquals(true, boolean0);
  }

  @Test
  public void test4()  throws Throwable  {
      InstanceServiceOperation instanceServiceOperation0 = new InstanceServiceOperation();
      instanceServiceOperation0.setMOperationCode((OperationCode) null);
  }

  @Test
  public void test5()  throws Throwable  {
      Class<?> class0 = InstanceServiceOperation.class;
      QName qName0 = new QName(",29*", ",29*");
      BeanDeserializer beanDeserializer0 = (BeanDeserializer)InstanceServiceOperation.getDeserializer(",29*", (Class) class0, qName0);
      assertEquals(false, beanDeserializer0.componentsReady());
  }

  @Test
  public void test6()  throws Throwable  {
      InstanceServiceOperation instanceServiceOperation0 = new InstanceServiceOperation();
      TargetService targetService0 = new TargetService();
      boolean boolean0 = instanceServiceOperation0.equals((Object) targetService0);
      assertEquals(false, boolean0);
  }

  @Test
  public void test7()  throws Throwable  {
      InstanceServiceOperation instanceServiceOperation0 = new InstanceServiceOperation();
      TargetService targetService0 = new TargetService();
      InstanceServiceOperation instanceServiceOperation1 = new InstanceServiceOperation((OperationCode) null, targetService0);
      boolean boolean0 = instanceServiceOperation0.equals((Object) instanceServiceOperation1);
      assertEquals(false, boolean0);
      assertFalse(instanceServiceOperation1.equals(instanceServiceOperation0));
  }

  @Test
  public void test8()  throws Throwable  {
      OperationCode operationCode0 = OperationCode.value1;
      TargetService targetService0 = new TargetService();
      InstanceServiceOperation instanceServiceOperation0 = new InstanceServiceOperation(operationCode0, targetService0);
      InstanceServiceOperation instanceServiceOperation1 = new InstanceServiceOperation(operationCode0, targetService0);
      boolean boolean0 = instanceServiceOperation0.equals((Object) instanceServiceOperation1);
      assertEquals(true, boolean0);
  }

  @Test
  public void test9()  throws Throwable  {
      InstanceServiceOperation instanceServiceOperation0 = new InstanceServiceOperation();
      OperationCode operationCode0 = OperationCode.value1;
      InstanceServiceOperation instanceServiceOperation1 = new InstanceServiceOperation(operationCode0, (TargetService) null);
      boolean boolean0 = instanceServiceOperation0.equals((Object) instanceServiceOperation1);
      assertFalse(instanceServiceOperation1.equals(instanceServiceOperation0));
      assertEquals(false, boolean0);
  }

  @Test
  public void test10()  throws Throwable  {
      OperationCode operationCode0 = OperationCode.value1;
      TargetService targetService0 = new TargetService();
      InstanceServiceOperation instanceServiceOperation0 = new InstanceServiceOperation(operationCode0, targetService0);
      OperationCode operationCode1 = OperationCode.value4;
      InstanceServiceOperation instanceServiceOperation1 = new InstanceServiceOperation(operationCode1, targetService0);
      boolean boolean0 = instanceServiceOperation1.equals((Object) instanceServiceOperation0);
      assertEquals(false, boolean0);
  }

  @Test
  public void test11()  throws Throwable  {
      InstanceServiceOperation instanceServiceOperation0 = new InstanceServiceOperation();
      int int0 = instanceServiceOperation0.hashCode();
      assertEquals(1, int0);
  }

  @Test
  public void test12()  throws Throwable  {
      OperationCode operationCode0 = OperationCode.value2;
      TargetService targetService0 = new TargetService();
      InstanceServiceOperation instanceServiceOperation0 = new InstanceServiceOperation(operationCode0, targetService0);
      int int0 = instanceServiceOperation0.hashCode();
      assertEquals(664629450, int0);
  }
}
