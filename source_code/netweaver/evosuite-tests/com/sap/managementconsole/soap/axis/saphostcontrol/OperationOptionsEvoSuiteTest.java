/*
 * This file was automatically generated by EvoSuite
 */

package com.sap.managementconsole.soap.axis.saphostcontrol;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.sap.managementconsole.soap.axis.saphostcontrol.InstanceOptionsFlags;
import com.sap.managementconsole.soap.axis.saphostcontrol.OperationOptions;
import javax.xml.namespace.QName;
import org.apache.axis.description.TypeDesc;
import org.apache.axis.encoding.ser.BeanDeserializer;
import org.apache.axis.encoding.ser.BeanSerializer;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class OperationOptionsEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      TypeDesc typeDesc0 = OperationOptions.getTypeDesc();
      assertEquals(false, typeDesc0.hasAttributes());
  }

  @Test
  public void test1()  throws Throwable  {
      Class<?> class0 = Object.class;
      BeanSerializer beanSerializer0 = (BeanSerializer)OperationOptions.getSerializer("", (Class) class0, (QName) null);
      assertEquals("Axis SAX Mechanism", beanSerializer0.getMechanismType());
  }

  @Test
  public void test2()  throws Throwable  {
      InstanceOptionsFlags[] instanceOptionsFlagsArray0 = new InstanceOptionsFlags[1];
      OperationOptions operationOptions0 = new OperationOptions();
      operationOptions0.setMOptions(instanceOptionsFlagsArray0);
      assertEquals(0L, operationOptions0.getMTimeout());
  }

  @Test
  public void test3()  throws Throwable  {
      Class<?> class0 = Object.class;
      BeanDeserializer beanDeserializer0 = (BeanDeserializer)OperationOptions.getDeserializer("", (Class) class0, (QName) null);
      assertEquals("Axis SAX Mechanism", beanDeserializer0.getMechanismType());
  }

  @Test
  public void test4()  throws Throwable  {
      OperationOptions operationOptions0 = new OperationOptions();
      int int0 = operationOptions0.hashCode();
      assertEquals(1, int0);
  }

  @Test
  public void test5()  throws Throwable  {
      OperationOptions operationOptions0 = new OperationOptions();
      boolean boolean0 = operationOptions0.equals((Object) "O-INSTANCE");
      assertEquals(false, boolean0);
  }

  @Test
  public void test6()  throws Throwable  {
      InstanceOptionsFlags[] instanceOptionsFlagsArray0 = new InstanceOptionsFlags[11];
      OperationOptions operationOptions0 = new OperationOptions();
      OperationOptions operationOptions1 = new OperationOptions(935L, instanceOptionsFlagsArray0);
      boolean boolean0 = operationOptions0.equals((Object) operationOptions1);
      assertEquals(935L, operationOptions1.getMTimeout());
      assertEquals(false, boolean0);
  }

  @Test
  public void test7()  throws Throwable  {
      InstanceOptionsFlags[] instanceOptionsFlagsArray0 = new InstanceOptionsFlags[1];
      OperationOptions operationOptions0 = new OperationOptions();
      OperationOptions operationOptions1 = new OperationOptions((-84L), instanceOptionsFlagsArray0);
      assertEquals((-84L), operationOptions1.getMTimeout());
      
      operationOptions1.setMTimeout(0L);
      boolean boolean0 = operationOptions0.equals((Object) operationOptions1);
      assertEquals(false, boolean0);
  }

  @Test
  public void test8()  throws Throwable  {
      InstanceOptionsFlags[] instanceOptionsFlagsArray0 = new InstanceOptionsFlags[1];
      OperationOptions operationOptions0 = new OperationOptions();
      OperationOptions operationOptions1 = new OperationOptions((-84L), instanceOptionsFlagsArray0);
      assertEquals((-84L), operationOptions1.getMTimeout());
      
      operationOptions1.setMTimeout(0L);
      boolean boolean0 = operationOptions1.equals((Object) operationOptions0);
      assertEquals(false, boolean0);
  }

  @Test
  public void test9()  throws Throwable  {
      OperationOptions operationOptions0 = new OperationOptions();
      OperationOptions operationOptions1 = new OperationOptions();
      boolean boolean0 = operationOptions0.equals((Object) operationOptions1);
      assertEquals(true, boolean0);
  }

  @Test
  public void test10()  throws Throwable  {
      InstanceOptionsFlags[] instanceOptionsFlagsArray0 = new InstanceOptionsFlags[1];
      OperationOptions operationOptions0 = new OperationOptions((-84L), instanceOptionsFlagsArray0);
      assertEquals((-84L), operationOptions0.getMTimeout());
      
      operationOptions0.setMTimeout(0L);
      OperationOptions operationOptions1 = new OperationOptions(0L, instanceOptionsFlagsArray0);
      boolean boolean0 = operationOptions0.equals((Object) operationOptions1);
      assertEquals(true, boolean0);
  }

  @Test
  public void test11()  throws Throwable  {
      InstanceOptionsFlags[] instanceOptionsFlagsArray0 = new InstanceOptionsFlags[11];
      InstanceOptionsFlags instanceOptionsFlags0 = InstanceOptionsFlags.value2;
      instanceOptionsFlagsArray0[4] = instanceOptionsFlags0;
      OperationOptions operationOptions0 = new OperationOptions(935L, instanceOptionsFlagsArray0);
      int int0 = operationOptions0.hashCode();
      assertEquals((-1530758465), int0);
  }
}
